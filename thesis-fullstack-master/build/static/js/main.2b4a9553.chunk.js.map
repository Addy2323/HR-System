{"version":3,"sources":["polyfills.js","utils/localStorage.js","components/NewPasswordModal.js","Layout/Header.js","Layout/Footer.js","menuTreeHelper.js","Layout/SidebarAdmin.js","Layout/SidebarManager.js","Layout/SidebarEmployee.js","components/infobox.js","components/AddEventPopup.js","components/ShowEventPopup.js","components/Calendar.js","components/ExpenseChartsPage.js","components/PaymentChartsPage.js","components/RecentApplications.js","components/RecentAnnouncements.js","utils/currency.js","components/Dashboard.js","components/manager/ExpenseChartsPage.js","components/manager/RecentApplications.js","components/manager/Dashboard.js","components/employee/RecentApplications.js","components/RecentAnnouncementsManagerEmp.js","components/employee/EmployeeViewDashboard.js","components/employee/Dashboard.js","Layout/Layout.js","components/DeleteModal.js","components/EmployeeList.js","components/manager/EmployeeList.js","components/EmployeeAdd.js","components/EmployeeView.js","components/employee/EmployeeView.js","components/manager/EmployeeView.js","components/EmployeeEdit.js","components/DepartmentAdd.js","components/EditDepartmentModal.js","components/AlertModal.js","components/DepartmentList.js","components/ApplicationList.js","components/manager/ApplicationList.js","components/employee/ApplicationList.js","components/Application.js","components/JobAddModal.js","components/JobEditModal.js","components/JobDeleteModal.js","components/SalaryDetails.js","components/SalaryList.js","components/SalaryView.js","components/manager/SalaryView.js","components/employee/SalaryView.js","components/Payment.js","components/Expense.js","components/manager/Expense.js","components/ExpenseReport.js","components/manager/ExpenseReport.js","components/Announcement.js","components/manager/Announcement.js","components/employee/Announcement.js","components/Profile.js","components/Register.js","withAuth.js","components/Login.js","components/JobList.js","components/manager/JobList.js","App.js","serviceWorker.js","index.js"],"names":["global","window","process","env","version","versions","platform","browser","globalThis","STORAGE_KEYS","setItem","key","value","localStorage","JSON","stringify","error","console","getItem","defaultValue","arguments","length","undefined","item","parse","initializeDefaultData","id","username","email","password","role","firstName","lastName","department","departmentId","position","defaultDepartments","departmentName","description","createdAt","Date","toISOString","title","salary","phone","hireDate","status","defaultApplications","employeeId","employeeName","type","reason","startDate","endDate","amount","paymentDate","paymentType","category","date","defaultAnnouncements","content","author","priority","userId","employmentType","salaryBasic","allowanceHouseRent","allowanceMedical","allowanceSpecial","allowanceFuel","allowancePhoneBill","allowanceOther","deductionTax","deductionOther","getUsers","getDepartments","getJobs","getEmployees","getApplications","getPayments","getExpenses","getAnnouncements","getEvents","getSalaryDetails","addUser","user","users","employees","newUser","_objectSpread","now","push","newEmployee","addExpenseToStorage","expense","expenses","newExpense","addAnnouncementToStorage","announcement","announcements","newAnnouncement","updateApplication","updatedData","applications","index","findIndex","app","updateUserInStorage","updatedUser","NewPasswordModal","Component","constructor","props","super","handleChange","event","name","target","this","setState","onSubmit","e","preventDefault","state","newPassword","newPasswordCheck","toast","oldPassword","success","completed","err","message","showAlert","hasError","errMsg","render","_jsxs","Modal","size","centered","children","_jsx","Header","closeButton","Title","Body","Form","Group","controlId","Label","className","Control","placeholder","onChange","required","Text","Button","variant","Footer","onClick","onHide","onLogout","removeItem","showModal","Redirect","to","show","closeModal","style","border","background","fullname","textAlign","width","$","loadTree","Treeview","SidebarAdmin","componentDidMount","userData","href","src","alt","NavLink","concat","exact","activeClassName","SidebarManager","SidebarEmployee","Content","color","icon","AddEventModel","eventTitle","eventDescription","eventStartDate","moment","format","eventEndDate","events","newEvent","addEventToStorage","done","_Fragment","DatePicker","selected","newStartDate","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","placeholderText","autoComplete","newEndDate","ShowEventPopup","deleteEvent","filteredEvents","filter","updateEvent","data","start","end","Calendar","_isMounted","showAddModel","showModel","selectedEvent","handleEventClick","bind","newEvents","map","x","textColor","i","componentWillUnmount","info","extendedProps","handleEventPositioned","el","setAttribute","ReactToolTip","rebuild","FullCalendar","defaultView","plugins","dayGridPlugin","interactionPlugin","eventClick","dateClick","eventPositioned","eventTimeFormat","hour","minute","meridiem","hour12","customButtons","button","text","click","header","left","center","right","AddEventPopup","closeAddModel","closeShowModel","ExpenseChartsPage","React","fetchData","mockData","generateMockExpenseData","expenseYear","transformData","array","makeArrayStructure","chartData","year","baseExpenses","month","Math","floor","random","forEach","obj","parseInt","labels","d","datasets","backgroundColor","Bar","height","options","maintainAspectRatio","legend","display","scales","yAxes","ticks","min","stepSize","redraw","PaymentChartsPage","generateMockPaymentData","paymentYear","basePayments","RecentApplications","recentApplications","sort","a","b","slice","fullName","listStyle","RecentAnnouncements","recentAnnouncements","announcementTitle","announcementDescription","days","monthNames","_announcement$departm","datetime","getDay","getMonth","getDate","formatCurrency","isNaN","Number","toLocaleString","Dashboard","totalEmployees","totalExpenses","totalPayments","defaultEmployees","defaultExpenses","payments","defaultPayments","reduce","sum","payment","Infobox","RecentApplciations","deptId","allExpenses","allUsers","yearExpenses","find","u","getFullYear","monthlyExpenses","Object","keys","getMonthName","monthIndex","allApplications","DashboardManager","departmentUsers","departmentExpenses","EmployeeViewEmployee","job","jobTitle","userPersonalInfo","dateOfBirth","gender","maritalStatus","fatherName","country","address","mobile","emailAddress","userFinancialInfo","bankName","accountName","accountNumber","iban","falseRedirect","editRedirect","departments","dept","jobs","city","Card","fontSize","Col","lg","Row","sm","as","cm","EmployeeViewDashboard","Layout","DeleteModal","onDelete","filteredEmployees","emp","deleteEmployee","redirect","EmployeeList","onView","selectedUser","viewRedirect","onEdit","deleteModal","transformedEmployees","user_personal_info","active","theme","createMuiTheme","overrides","MuiTableCell","root","padding","pathname","closeDeleteModel","ThemeProvider","MaterialTable","columns","field","rowData","setHours","Badge","pill","rowStyle","pageSize","pageSizeOptions","onSalaryView","viewSalaryRedirect","formattedUsers","EmployeeAdd","fileSelectedHandler","file","files","errorMsg","fistname","lastname","fathername","idNumber","iBan","joiningDate","pushDepartments","items","showMonthDropdown","showYearDropdown","dropdownMode","block","EmployeeView","location","user_financial_info","cursor","EmployeeEdit","handleChangeUser","prevState","handleChangeJob","handleChangeDepartment","handleChangeUserPersonal","handleChangeUserFinancial","toDate","Alert","DepartmentAdd","newDepartment","addDepartment","scrollTo","updateDepartment","AlertModal","DepartmentList","selectedDepartment","showEditModel","showAlertModel","transformedDepartments","log","filteredDepartments","deleteDepartment","AddDepartment","EditDepartmentModal","closeEditModel","closeAlertModel","ApplicationList","onApprove","updatedApplications","application","transformedApplications","onReject","selectedApplications","employee","toLowerCase","charAt","toUpperCase","currentUser","isOwnApplication","isPending","formattedApplications","Application","newApplication","addApplicationToStorage","newDate","JobAddModal","fetchDepartments","fetchUsers","defaultUsers","selectedDeptId","onDepartmentChange","onUserChange","pushUsers","newJob","addJobToStorage","minDate","JobEditModal","updateJob","JobDeleteModal","filteredJobs","deleteJob","SalaryDetails","pushChanges","userSalary","financialId","defaultSalary","fetchDataAll","handleDepartmentChange","handleUserChange","handleChangeEmploymentType","salaryGross","salaryNet","allowanceTotal","deductionTotal","updateSalaryDetails","salaryDetails","newSalary","selectedJob","readOnly","SalaryList","financialInfo","financialInformations","defaultSalaryDetails","detail","SalaryView","currentJobTitle","userWithDepartment","SalaryViewEmployee","Payment","findPayments","fetchUserData","showHistory","grossSalary","netSalary","deductions","userPayments","currentJobId","newPayment","paymentMonth","selectedDate","paymentFine","paymentAmount","comments","jobId","addPaymentToStorage","showMonthYearPicker","Expense","expenseItemName","itemName","expenseItemStore","purchasedFrom","purchaseDate","amountSpent","parseFloat","ExpenseReport","accessor","footer","formattedExpenses","Announcement","filteredAnnouncements","ann","announcementData","createdByUserId","transformedAnnouncements","_users$find","_users$find2","loadAnnouncements","Profile","successMsg","onUpdateProfile","test","updatedUsers","setTimeout","onChangePassword","currentPassword","confirmPassword","showPasswordSection","togglePasswordSection","updated","md","Register","passwordVisibilityHandler","document","getElementById","passwordVisibilityHandlerCheck","async","isLoading","Promise","resolve","result","history","errorMessage","showPassword","showConfirmPassword","passwordShow","checkPassword","passwordCheckShow","disabled","withAuth","ComponentToProtect","isAuthenticated","loading","token","Login","authenticateUser","userSession","loginTime","JobList","formattedJobs","pushSelectItems","addJob","showDeleteModel","cellStyle","paddingLeft","paddingRight","headerStyle","deptUsers","formattedJob","App","Router","Switch","Route","path","component","LoginContainer","RegisterContainer","DefaultContainer","ToastContainer","justifyContent","alignItems","AdminContainer","ManagerContainer","EmployeeContainer","EmployeeListManager","EmployeeViewManager","JobListManager","ApplicationListManager","ExpenseManager","SalaryViewManager","ExpenseReportManager","AnnouncementManager","DashboardEmployee","ApplicationListEmployee","AnnouncementEmployee","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2b4a9553.chunk.js","sourcesContent":["/* eslint-disable no-undef, no-restricted-globals */\n\n// Polyfill for process global variable\n(function() {\n  'use strict';\n  \n  // Define global if it doesn't exist\n  if (typeof global === 'undefined') {\n    window.global = window;\n  }\n\n  // Define process if it doesn't exist\n  if (typeof process === 'undefined') {\n    window.process = {\n      env: {},\n      version: '',\n      versions: {},\n      platform: 'browser',\n      browser: true\n    };\n  }\n\n  // Simple globalThis polyfill\n  if (typeof globalThis === 'undefined') {\n    window.globalThis = window;\n  }\n})();\n","// localStorage utility functions for HRMS data management\n\n// Keys for different data types\nconst STORAGE_KEYS = {\n  USERS: 'hrms_users',\n  CURRENT_USER: 'hrms_current_user',\n  DEPARTMENTS: 'hrms_departments',\n  JOBS: 'hrms_jobs',\n  EMPLOYEES: 'hrms_employees',\n  APPLICATIONS: 'hrms_applications',\n  PAYMENTS: 'hrms_payments',\n  EXPENSES: 'hrms_expenses',\n  ANNOUNCEMENTS: 'hrms_announcements',\n  EVENTS: 'hrms_events',\n  SALARY_DETAILS: 'hrms_salary_details'\n};\n\n// Generic localStorage functions\nexport const setItem = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (error) {\n    console.error('Error saving to localStorage:', error);\n    return false;\n  }\n};\n\nexport const getItem = (key, defaultValue = null) => {\n  try {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : defaultValue;\n  } catch (error) {\n    console.error('Error reading from localStorage:', error);\n    return defaultValue;\n  }\n};\n\nexport const removeItem = (key) => {\n  try {\n    localStorage.removeItem(key);\n    return true;\n  } catch (error) {\n    console.error('Error removing from localStorage:', error);\n    return false;\n  }\n};\n\n// Initialize default data\nexport const initializeDefaultData = () => {\n  // Initialize users if not exists\n  if (!getItem(STORAGE_KEYS.USERS)) {\n    const defaultUsers = [\n      {\n        id: 1,\n        username: 'admin',\n        email: 'admin@hrms.com',\n        password: 'admin123', // In real app, this would be hashed\n        role: 'admin',\n        firstName: 'Admin',\n        lastName: 'User',\n        department: 'Information Technology',\n        departmentId: 2,\n        position: 'System Administrator'\n      },\n      {\n        id: 2,\n        username: 'manager',\n        email: 'manager@hrms.com',\n        password: 'manager123',\n        role: 'manager',\n        firstName: 'John',\n        lastName: 'Manager',\n        department: 'Human Resources',\n        departmentId: 1,\n        position: 'HR Manager'\n      },\n      {\n        id: 3,\n        username: 'employee',\n        email: 'employee@hrms.com',\n        password: 'employee123',\n        role: 'employee',\n        firstName: 'Jane',\n        lastName: 'Employee',\n        department: 'Sales',\n        departmentId: 3,\n        position: 'Sales Representative'\n      },\n      {\n        id: 4,\n        username: 'john.doe',\n        email: 'john.doe@hrms.com',\n        password: 'password123',\n        role: 'employee',\n        firstName: 'John',\n        lastName: 'Doe',\n        department: 'Information Technology',\n        departmentId: 2,\n        position: 'Software Developer'\n      },\n      {\n        id: 5,\n        username: 'jane.smith',\n        email: 'jane.smith@hrms.com',\n        password: 'password123',\n        role: 'employee',\n        firstName: 'Jane',\n        lastName: 'Smith',\n        department: 'Marketing',\n        departmentId: 4,\n        position: 'Marketing Specialist'\n      }\n    ];\n    setItem(STORAGE_KEYS.USERS, defaultUsers);\n  }\n\n  // Initialize departments\n  if (!getItem(STORAGE_KEYS.DEPARTMENTS)) {\n    const defaultDepartments = [\n      { id: 1, departmentName: 'Human Resources', description: 'HR Department', createdAt: new Date().toISOString() },\n      { id: 2, departmentName: 'Information Technology', description: 'IT Department', createdAt: new Date().toISOString() },\n      { id: 3, departmentName: 'Sales', description: 'Sales Department', createdAt: new Date().toISOString() },\n      { id: 4, departmentName: 'Marketing', description: 'Marketing Department', createdAt: new Date().toISOString() },\n      { id: 5, departmentName: 'Finance', description: 'Finance Department', createdAt: new Date().toISOString() }\n    ];\n    setItem(STORAGE_KEYS.DEPARTMENTS, defaultDepartments);\n  }\n\n  // Initialize jobs\n  if (!getItem(STORAGE_KEYS.JOBS)) {\n    const defaultJobs = [\n      { id: 1, title: 'Software Developer', department: 'Information Technology', salary: 'TSh 1,200,000', description: 'Develop and maintain software applications' },\n      { id: 2, title: 'HR Manager', department: 'Human Resources', salary: 'TSh 1,500,000', description: 'Manage human resources operations' },\n      { id: 3, title: 'Sales Representative', department: 'Sales', salary: 'TSh 800,000', description: 'Handle sales and customer relations' },\n      { id: 4, title: 'Marketing Specialist', department: 'Marketing', salary: 'TSh 900,000', description: 'Plan and execute marketing campaigns' },\n      { id: 5, title: 'Accountant', department: 'Finance', salary: 'TSh 1,000,000', description: 'Manage financial records and transactions' }\n    ];\n    setItem(STORAGE_KEYS.JOBS, defaultJobs);\n  }\n\n  // Initialize employees\n  if (!getItem(STORAGE_KEYS.EMPLOYEES)) {\n    const defaultEmployees = [\n      {\n        id: 1,\n        firstName: 'John',\n        lastName: 'Doe',\n        email: 'john.doe@hrms.com',\n        phone: '+255 123 456 789',\n        department: 'Information Technology',\n        position: 'Software Developer',\n        salary: 1200000,\n        hireDate: '2023-01-15',\n        status: 'active'\n      },\n      {\n        id: 2,\n        firstName: 'Jane',\n        lastName: 'Smith',\n        email: 'jane.smith@hrms.com',\n        phone: '+255 987 654 321',\n        department: 'Human Resources',\n        position: 'HR Manager',\n        salary: 1500000,\n        hireDate: '2022-06-10',\n        status: 'active'\n      }\n    ];\n    setItem(STORAGE_KEYS.EMPLOYEES, defaultEmployees);\n  }\n\n  // Initialize applications\n  if (!getItem(STORAGE_KEYS.APPLICATIONS)) {\n    const defaultApplications = [\n      {\n        id: 1,\n        employeeId: 1,\n        employeeName: 'John Doe',\n        type: 'Leave',\n        reason: 'Annual Leave',\n        startDate: '2024-01-20',\n        endDate: '2024-01-25',\n        status: 'pending',\n        createdAt: new Date().toISOString()\n      }\n    ];\n    setItem(STORAGE_KEYS.APPLICATIONS, defaultApplications);\n  }\n\n  // Initialize payments\n  if (!getItem(STORAGE_KEYS.PAYMENTS)) {\n    const defaultPayments = [\n      {\n        id: 1,\n        employeeId: 1,\n        employeeName: 'John Doe',\n        amount: 1200000,\n        paymentDate: '2024-01-01',\n        paymentType: 'Salary',\n        status: 'completed'\n      }\n    ];\n    setItem(STORAGE_KEYS.PAYMENTS, defaultPayments);\n  }\n\n  // Initialize expenses\n  if (!getItem(STORAGE_KEYS.EXPENSES)) {\n    const defaultExpenses = [\n      {\n        id: 1,\n        description: 'Office Supplies',\n        amount: 150000,\n        category: 'Office',\n        date: '2024-01-15',\n        status: 'approved'\n      }\n    ];\n    setItem(STORAGE_KEYS.EXPENSES, defaultExpenses);\n  }\n\n  // Initialize announcements\n  if (!getItem(STORAGE_KEYS.ANNOUNCEMENTS)) {\n    const defaultAnnouncements = [\n      {\n        id: 1,\n        title: 'Welcome to HRMS',\n        content: 'Welcome to the Human Resource Management System. This system now uses localStorage for data persistence.',\n        author: 'Admin',\n        createdAt: new Date().toISOString(),\n        priority: 'high'\n      }\n    ];\n    setItem(STORAGE_KEYS.ANNOUNCEMENTS, defaultAnnouncements);\n  }\n\n  // Initialize salary details\n  if (!getItem(STORAGE_KEYS.SALARY_DETAILS)) {\n    const defaultSalaryDetails = [\n      {\n        id: 1,\n        userId: 1,\n        employmentType: 'Full Time',\n        salaryBasic: 800000,\n        allowanceHouseRent: 200000,\n        allowanceMedical: 50000,\n        allowanceSpecial: 100000,\n        allowanceFuel: 75000,\n        allowancePhoneBill: 25000,\n        allowanceOther: 50000,\n        deductionTax: 120000,\n        deductionOther: 30000\n      },\n      {\n        id: 2,\n        userId: 2,\n        employmentType: 'Full Time',\n        salaryBasic: 1000000,\n        allowanceHouseRent: 250000,\n        allowanceMedical: 75000,\n        allowanceSpecial: 150000,\n        allowanceFuel: 100000,\n        allowancePhoneBill: 30000,\n        allowanceOther: 75000,\n        deductionTax: 180000,\n        deductionOther: 50000\n      }\n    ];\n    setItem(STORAGE_KEYS.SALARY_DETAILS, defaultSalaryDetails);\n  }\n};\n\n// User management functions\nexport const authenticateUser = (username, password) => {\n  const users = getItem(STORAGE_KEYS.USERS, []);\n  const user = users.find(u => u.username === username && u.password === password);\n  \n  if (user) {\n    const userSession = {\n      id: user.id,\n      username: user.username,\n      email: user.email,\n      role: user.role,\n      firstName: user.firstName,\n      lastName: user.lastName,\n      department: user.department,\n      position: user.position,\n      loginTime: new Date().toISOString()\n    };\n    setItem(STORAGE_KEYS.CURRENT_USER, userSession);\n    localStorage.setItem('user', JSON.stringify(userSession));\n    return {\n      success: true,\n      user: userSession,\n      message: 'Login successful'\n    };\n  }\n  return {\n    success: false,\n    message: 'Invalid username or password'\n  };\n};\n\nexport const getCurrentUser = () => {\n  return getItem(STORAGE_KEYS.CURRENT_USER);\n};\n\nexport const logoutUser = () => {\n  removeItem(STORAGE_KEYS.CURRENT_USER);\n};\n\n// Data management functions\nexport const getUsers = () => getItem(STORAGE_KEYS.USERS, []);\nexport const getDepartments = () => getItem(STORAGE_KEYS.DEPARTMENTS, []);\nexport const getJobs = () => getItem(STORAGE_KEYS.JOBS, []);\nexport const getEmployees = () => getItem(STORAGE_KEYS.EMPLOYEES, []);\nexport const getApplications = () => getItem(STORAGE_KEYS.APPLICATIONS, []);\nexport const getPayments = () => getItem(STORAGE_KEYS.PAYMENTS, []);\nexport const getExpenses = () => getItem(STORAGE_KEYS.EXPENSES, []);\nexport const getAnnouncements = () => getItem(STORAGE_KEYS.ANNOUNCEMENTS, []);\nexport const getEvents = () => getItem(STORAGE_KEYS.EVENTS, []);\nexport const getSalaryDetails = () => getItem(STORAGE_KEYS.SALARY_DETAILS, []);\n\n// Add/Update functions\nexport const updateEmployee = (id, updatedData) => {\n  const employees = getEmployees();\n  const index = employees.findIndex(emp => emp.id === id);\n  if (index !== -1) {\n    employees[index] = { ...employees[index], ...updatedData };\n    setItem(STORAGE_KEYS.EMPLOYEES, employees);\n    return employees[index];\n  }\n  return null;\n};\n\nexport const deleteEmployee = (id) => {\n  const employees = getEmployees();\n  const filteredEmployees = employees.filter(emp => emp.id !== id);\n  setItem(STORAGE_KEYS.EMPLOYEES, filteredEmployees);\n  return true;\n};\n\nexport const updateDepartment = (id, updatedData) => {\n  const departments = getDepartments();\n  const index = departments.findIndex(dept => dept.id === id);\n  if (index !== -1) {\n    departments[index] = { ...departments[index], ...updatedData };\n    setItem(STORAGE_KEYS.DEPARTMENTS, departments);\n    return departments[index];\n  }\n  return null;\n};\n\nexport const deleteDepartment = (id) => {\n  const departments = getDepartments();\n  const filteredDepartments = departments.filter(dept => dept.id !== id);\n  setItem(STORAGE_KEYS.DEPARTMENTS, filteredDepartments);\n  return true;\n};\n\nexport const addUser = (user) => {\n  const users = getUsers();\n  const employees = getEmployees();\n  const newUser = { ...user, id: Date.now(), createdAt: new Date().toISOString() };\n  users.push(newUser);\n  \n  // Also add to employees list for admin visibility\n  const newEmployee = {\n    id: newUser.id,\n    firstName: user.firstName,\n    lastName: user.lastName,\n    email: user.email,\n    department: user.department,\n    position: user.position,\n    hireDate: user.hireDate,\n    salary: user.salary,\n    status: user.status || 'inactive'\n  };\n  employees.push(newEmployee);\n  \n  setItem(STORAGE_KEYS.USERS, users);\n  setItem(STORAGE_KEYS.EMPLOYEES, employees);\n  return newUser;\n};\n\nexport const addDepartment = (department) => {\n  const departments = getDepartments();\n  const newDepartment = { ...department, id: Date.now(), createdAt: new Date().toISOString() };\n  departments.push(newDepartment);\n  setItem(STORAGE_KEYS.DEPARTMENTS, departments);\n  return newDepartment;\n};\n\nexport const addJob = (job) => {\n  const jobs = getJobs();\n  const newJob = { ...job, id: Date.now() };\n  jobs.push(newJob);\n  setItem(STORAGE_KEYS.JOBS, jobs);\n  return newJob;\n};\n\nexport const addJobToStorage = (job) => {\n  const jobs = getJobs();\n  const newJob = { ...job, id: Date.now(), createdAt: new Date().toISOString() };\n  jobs.push(newJob);\n  setItem(STORAGE_KEYS.JOBS, jobs);\n  return newJob;\n};\n\nexport const addEmployee = (employee) => {\n  const employees = getEmployees();\n  const newEmployee = { ...employee, id: Date.now() };\n  employees.push(newEmployee);\n  setItem(STORAGE_KEYS.EMPLOYEES, employees);\n  return newEmployee;\n};\n\nexport const addApplicationToStorage = (application) => {\n  const applications = getApplications();\n  const newApplication = { ...application, id: Date.now(), createdAt: new Date().toISOString() };\n  applications.push(newApplication);\n  setItem(STORAGE_KEYS.APPLICATIONS, applications);\n  return newApplication;\n};\n\nexport const addPaymentToStorage = (payment) => {\n  const payments = getPayments();\n  const newPayment = { ...payment, id: Date.now() };\n  payments.push(newPayment);\n  setItem(STORAGE_KEYS.PAYMENTS, payments);\n  return newPayment;\n};\n\nexport const addExpenseToStorage = (expense) => {\n  const expenses = getExpenses();\n  const newExpense = { ...expense, id: Date.now(), createdAt: new Date().toISOString() };\n  expenses.push(newExpense);\n  setItem(STORAGE_KEYS.EXPENSES, expenses);\n  return newExpense;\n};\n\nexport const addAnnouncementToStorage = (announcement) => {\n  const announcements = getAnnouncements();\n  const newAnnouncement = { ...announcement, id: Date.now(), createdAt: new Date().toISOString() };\n  announcements.push(newAnnouncement);\n  setItem(STORAGE_KEYS.ANNOUNCEMENTS, announcements);\n  return newAnnouncement;\n};\n\nexport const updateEvent = (id, updatedData) => {\n  const events = getEvents();\n  const index = events.findIndex(event => event.id === id);\n  if (index !== -1) {\n    events[index] = { ...events[index], ...updatedData };\n    setItem(STORAGE_KEYS.EVENTS, events);\n    return events[index];\n  }\n  return null;\n};\n\nexport const deleteEvent = (id) => {\n  const events = getEvents();\n  const filteredEvents = events.filter(event => event.id !== id);\n  setItem(STORAGE_KEYS.EVENTS, filteredEvents);\n  return true;\n};\n\nexport const deleteJob = (id) => {\n  const jobs = getJobs();\n  const filteredJobs = jobs.filter(job => job.id !== id);\n  setItem(STORAGE_KEYS.JOBS, filteredJobs);\n  return true;\n};\n\nexport const updateSalaryDetails = (id, updatedData) => {\n  const salaryDetails = getSalaryDetails();\n  const index = salaryDetails.findIndex(salary => salary.id === id);\n  if (index !== -1) {\n    salaryDetails[index] = { ...salaryDetails[index], ...updatedData };\n    setItem(STORAGE_KEYS.SALARY_DETAILS, salaryDetails);\n    return salaryDetails[index];\n  } else {\n    // If salary details don't exist, create new one\n    const newSalary = { ...updatedData, id: id || Date.now() };\n    salaryDetails.push(newSalary);\n    setItem(STORAGE_KEYS.SALARY_DETAILS, salaryDetails);\n    return newSalary;\n  }\n};\n\nexport const updateJob = (id, updatedData) => {\n  const jobs = getJobs();\n  const index = jobs.findIndex(job => job.id === id);\n  if (index !== -1) {\n    jobs[index] = { ...jobs[index], ...updatedData };\n    setItem(STORAGE_KEYS.JOBS, jobs);\n    return jobs[index];\n  }\n  return null;\n};\n\nexport const addEventToStorage = (event) => {\n  const events = getItem(STORAGE_KEYS.EVENTS, []);\n  const newEvent = { ...event, id: Date.now(), createdAt: new Date().toISOString() };\n  events.push(newEvent);\n  setItem(STORAGE_KEYS.EVENTS, events);\n  return newEvent;\n};\n\n// Add missing utility functions\n\nexport const updateApplication = (id, updatedData) => {\n  const applications = getApplications();\n  const index = applications.findIndex(app => app.id === id);\n  if (index !== -1) {\n    applications[index] = { ...applications[index], ...updatedData };\n    setItem(STORAGE_KEYS.APPLICATIONS, applications);\n    return applications[index];\n  }\n  return null;\n};\n\nexport const updateUserInStorage = (updatedUser) => {\n  const users = getUsers();\n  const index = users.findIndex(user => user.id == updatedUser.id);\n  if (index !== -1) {\n    users[index] = { ...users[index], ...updatedUser };\n    setItem(STORAGE_KEYS.USERS, users);\n    return users[index];\n  }\n  return null;\n};\n\n// Export storage keys for direct access if needed\nexport { STORAGE_KEYS };\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport { updateUserInStorage } from '../utils/localStorage'\n\nexport default class NewPasswordModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      oldPassword: \"\",\n      newPassword: \"\",\n      newPasswordCheck: null,\n      showAlert: false,\n      completed: false,\n      hasError: false,\n      errMsg: \"\"\n    };\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.newPassword !== this.state.newPasswordCheck) {\n        toast.error(\"Passwords don't match.\");\n    } else {\n        let userId = JSON.parse(localStorage.getItem('user')).id\n        let data = {\n          oldPassword: this.state.oldPassword,\n          newPassword: this.state.newPassword\n        }\n        \n        try {\n          // For demo purposes, we'll just update the user's password in localStorage\n          // In a real application, you would want to verify the old password first\n          const updatedUser = updateUserInStorage({id: userId, password: this.state.newPassword});\n          if (updatedUser) {\n            toast.success(\"Password changed successfully.\");\n            this.setState({completed: true});\n          } else {\n            toast.error(\"Failed to change password.\");\n          }\n        } catch (err) {\n          toast.error(\"Failed to change password: \" + err.message);\n        }\n    }\n  };\n\n  render() {\n    const {showAlert, completed, hasError, errMsg} = this.state  \n    return (\n      <Modal\n        {...this.props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Change Password\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form onSubmit={this.onSubmit}>\n                <Form.Group controlId=\"formOldPassword\">\n                    <Form.Label className=\"required\">Old Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Enter old password\"\n                        className=\"col-6\"\n                        name=\"oldPassword\"\n                        value={this.state.oldPassword}\n                        onChange={this.handleChange}\n                        required\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formNewPassword\">\n                    <Form.Label>New Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Enter new Password\"\n                        className=\"col-6\"\n                        name=\"newPassword\"\n                        value={this.state.newPassword}\n                        onChange={this.handleChange}\n                    />\n                </Form.Group>\n                \n                <Form.Group controlId=\"formNewPasswordCheck\">\n                    <Form.Label>New Password Repeat</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Repeat new Password\"\n                        className=\"col-6\"\n                        name=\"newPasswordCheck\"\n                        value={this.state.newPasswordCheck}\n                        onChange={this.handleChange}\n                    />\n                </Form.Group>\n\n                <Form.Text className=\"mb-3 required\"> Required Fields</Form.Text>\n                <Button variant=\"success\" type=\"submit\">\n                    Submit\n            </Button>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {Redirect} from \"react-router-dom\"\nimport NewPasswordModal from '../components/NewPasswordModal'\n\nexport default class Header extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      completed: false,\n      showModal: false\n    }\n  }\n\n  onLogout = (event) => {\n    event.preventDefault()\n\n    localStorage.removeItem('token');\n    localStorage.removeItem('token')\n    this.setState({completed: true})\n  }\n\n  newPassword = (event) => {\n    event.preventDefault()\n\n    this.setState({showModal: true})\n  }\n\n  render() {\n    let closeModal = () => this.setState({showModal: false})\n    return (\n      <nav className=\"main-header navbar navbar-expand navbar-white navbar-light\">\n        {this.state.completed ? <Redirect to=\"/\" /> : null}\n        {this.state.showModal ? <NewPasswordModal show={true} onHide={closeModal}/> : null}\n        {/* Left navbar links */}\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <button\n              className=\"nav-link btn btn-link\"\n              data-widget=\"pushmenu\"\n              type=\"button\"\n              style={{border: 'none', background: 'none'}}\n            >\n              <i className=\"fas fa-bars\" />\n            </button>\n          </li>\n          {/* <li className=\"nav-item d-none d-sm-inline-block\">\n            <a href=\"index3.html\" className=\"nav-link\">\n              Home\n            </a>\n          </li>\n          <li className=\"nav-item d-none d-sm-inline-block\">\n            <a href=\"#\" className=\"nav-link\">\n              Contact\n            </a>\n          </li> */}\n        </ul>\n        {/* SEARCH FORM */}\n        {/* <form className=\"form-inline ml-3\">\n          <div className=\"input-group input-group-sm\">\n            <input\n              className=\"form-control form-control-navbar\"\n              type=\"search\"\n              placeholder=\"Search\"\n              aria-label=\"Search\"\n            />\n            <div className=\"input-group-append\">\n              <button className=\"btn btn-navbar\" type=\"submit\">\n                <i className=\"fas fa-search\" />\n              </button>\n            </div>\n          </div>\n        </form> */}\n        {/* Right navbar links */}\n        <ul className=\"navbar-nav ml-auto\">\n          {/* Messages Dropdown Menu */}\n          {/* <li className=\"nav-item dropdown\">\n            <a className=\"nav-link\" data-toggle=\"dropdown\" href=\"#\">\n              <i className=\"far fa-comments\" />\n              <span className=\"badge badge-danger navbar-badge\">3</span>\n            </a>\n            <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\n              <a href=\"#\" className=\"dropdown-item\">\n                //Message Start\n                <div className=\"media\">\n                  <img\n                    src={process.env.PUBLIC_URL + '/dist/img/user1-128x128.jpg'}\n                    alt=\"User Avatar\"\n                    className=\"img-size-50 mr-3 img-circle\"\n                  />\n                  <div className=\"media-body\">\n                    <h3 className=\"dropdown-item-title\">\n                      Brad Diesel\n                      <span className=\"float-right text-sm text-danger\">\n                        <i className=\"fas fa-star\" />\n                      </span>\n                    </h3>\n                    <p className=\"text-sm\">Call me whenever you can...</p>\n                    <p className=\"text-sm text-muted\">\n                      <i className=\"far fa-clock mr-1\" /> 4 Hours Ago\n                    </p>\n                  </div>\n                </div>\n                // Message End\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                // Message Start\n                <div className=\"media\">\n                  <img\n                    src={process.env.PUBLIC_URL + '/dist/img/user8-128x128.jpg'}\n                    alt=\"User Avatar\"\n                    className=\"img-size-50 img-circle mr-3\"\n                  />\n                  <div className=\"media-body\">\n                    <h3 className=\"dropdown-item-title\">\n                      John Pierce\n                      <span className=\"float-right text-sm text-muted\">\n                        <i className=\"fas fa-star\" />\n                      </span>\n                    </h3>\n                    <p className=\"text-sm\">I got your message bro</p>\n                    <p className=\"text-sm text-muted\">\n                      <i className=\"far fa-clock mr-1\" /> 4 Hours Ago\n                    </p>\n                  </div>\n                </div>\n                // Message End\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                // Message Start\n                <div className=\"media\">\n                  <img\n                    src={process.env.PUBLIC_URL + '/dist/img/user3-128x128.jpg'}\n                    alt=\"User Avatar\"\n                    className=\"img-size-50 img-circle mr-3\"\n                  />\n                  <div className=\"media-body\">\n                    <h3 className=\"dropdown-item-title\">\n                      Nora Silvester\n                      <span className=\"float-right text-sm text-warning\">\n                        <i className=\"fas fa-star\" />\n                      </span>\n                    </h3>\n                    <p className=\"text-sm\">The subject goes here</p>\n                    <p className=\"text-sm text-muted\">\n                      <i className=\"far fa-clock mr-1\" /> 4 Hours Ago\n                    </p>\n                  </div>\n                </div>\n                // Message End\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item dropdown-footer\">\n                See All Messages\n              </a>\n            </div>\n          </li> */}\n          {/* Notifications Dropdown Menu */}\n          <li className=\"nav-item dropdown\">\n            <button className=\"nav-link btn btn-link\" data-toggle=\"dropdown\" type=\"button\" style={{border: 'none', background: 'none'}}>\n              <i className=\"fas fa-user\" />\n              <span className=\"pl-1\">{JSON.parse(localStorage.getItem('user')).fullname}</span>\n              {/* <span className=\"badge badge-warning navbar-badge\">15</span> */}\n            </button>\n            <div className=\"dropdown-menu dropdown-menu-lg dropdown-menu-right\">\n              <span className=\"dropdown-header\">\n                Options\n              </span>\n              <div className=\"dropdown-divider\" />\n              <button onClick={this.newPassword} className=\"dropdown-item btn btn-link\" style={{border: 'none', background: 'none', textAlign: 'left', width: '100%'}}>\n                <i className=\"fas fa-key mr-2\" /> Change Password\n                {/* <span className=\"float-right text-muted text-sm\">3 mins</span> */}\n              </button>\n              <div className=\"dropdown-divider\" />\n              <button onClick={this.onLogout} className=\"dropdown-item btn btn-link\" style={{border: 'none', background: 'none', textAlign: 'left', width: '100%'}}>\n                <i className=\"fas fa-sign-out-alt mr-2\" /> Log out\n                {/* <span className=\"float-right text-muted text-sm\">12 hours</span> */}\n              </button>\n              {/* <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item\">\n                <i className=\"fas fa-file mr-2\" /> 3 new reports\n                <span className=\"float-right text-muted text-sm\">2 days</span>\n              </a>\n              <div className=\"dropdown-divider\" />\n              <a href=\"#\" className=\"dropdown-item dropdown-footer\">\n                See All Notifications\n              </a> */}\n            </div>\n          </li>\n          {/* <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              data-widget=\"control-sidebar\"\n              data-slide=\"true\"\n              href=\"#\"\n              role=\"button\"\n            >\n              <i className=\"fas fa-th-large\" />\n            </a>\n          </li> */}\n        </ul>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"main-footer\">\n        <strong className=\"mr-1\">\n          Copyright © 2025-2026 myambaado@gmail.com.\n        </strong>\n        All rights reserved.\n        <div className=\"float-right d-none d-sm-inline-block\">\n          <b>Version</b> 1.0.0\n        </div>\n      </footer>\n    );\n  }\n}\n","const $ = window.$;\n\nexport function loadTree() {\n    const trees = $('[data-widget=\"treeview\"]');\n    trees.Treeview('init');\n}","import React, { Component } from \"react\";\nimport { loadTree } from '../menuTreeHelper';\nimport {NavLink} from 'react-router-dom'\n\nexport default class SidebarAdmin extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {}\n    }\n  }\n\n  componentDidMount() {\n    let userData = JSON.parse(localStorage.getItem('user'))\n    this.setState({user: userData})\n    loadTree();\n  }\n\n  render() {\n    return (\n      <aside className=\"main-sidebar sidebar-dark-primary elevation-4\" >\n        {/* Brand Logo */}\n        <a href=\"/\" className=\"brand-link\">\n          <span className=\"brand-text font-weight-light ml-1\">HRMS Admin</span>\n        </a>\n        {/* Sidebar */}\n        <div className=\"sidebar\">\n          {/* Sidebar user panel (optional) */}\n          <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n            <div className=\"image\">\n              <img\n                src={process.env.PUBLIC_URL + '/user-64.png'}\n                className=\"img-circle elevation-2\"\n                alt=\"User Image\"\n              />\n            </div>\n            <div className=\"info\">\n              <NavLink to=\"/profile\" className=\"d-block text-decoration-none\">\n                {this.state.user.fullname || `${this.state.user.firstName} ${this.state.user.lastName}` || 'User'}\n              </NavLink>\n            </div>\n          </div>\n          {/* Sidebar Menu */}\n          <nav className=\"mt-2\">\n            <ul\n              className=\"nav nav-pills nav-sidebar flex-column\"\n              data-widget=\"treeview\"\n              role=\"menu\"\n              data-accordion=\"false\"\n            >\n              {/* Add icons to the links using the .nav-icon class\n         with font-awesome or any other icon font library */}\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-tachometer-alt\" />\n                  <p>\n                    Dashboard\n                    <span className=\"right badge badge-success\">Home</span>\n                  </p>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/departments\" className=\"nav-link\">\n                  <i className=\"nav-icon fa fa-building\" />\n                  <p>\n                    Departments\n                  </p>\n                </NavLink>\n              </li>\n              <li className=\"nav-item has-treeview\">\n                <NavLink to=\"/fake-url\" className=\"nav-link\" activeClassName=\"nav-link\">\n                  <i className=\"nav-icon fa fa-user\" />\n                  <p>\n                    Employee\n                    <i className=\"right fas fa-angle-left\" />\n                  </p>\n                </NavLink>\n                <ul className=\"nav nav-treeview\">\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/employee-add\" className=\"nav-link\">\n                      <i className=\"fa fa-user-plus nav-icon\" />\n                      <p>Add Employee</p>\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/employee-list\" className=\"nav-link\">\n                      <i className=\"fas fa-users nav-icon\" />\n                      <p>Employee List</p>\n                    </NavLink>\n                  </li>\n                </ul>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to=\"/job-list\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-briefcase\" />\n                  <p>\n                    Job List\n                  </p>\n                </NavLink>\n              </li>\n              <li className=\"nav-item has-treeview\">\n                <NavLink to=\"/fake-url\" className=\"nav-link\" activeClassName=\"nav-link\">\n                  <i className=\"nav-icon fa fa-rocket\" />\n                  <p>\n                    Applications\n                    <i className=\"right fas fa-angle-left\" />\n                  </p>\n                </NavLink>\n                <ul className=\"nav nav-treeview\">\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/application\" className=\"nav-link\">\n                      <i className=\"fa fa-plus nav-icon\" />\n                      <p>Add Application</p>\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/application-list\" className=\"nav-link\">\n                      <i className=\"fas fa-list-ul nav-icon\" />\n                      <p>Application List</p>\n                    </NavLink>\n                  </li>\n                </ul>\n              </li>\n              <li className=\"nav-item has-treeview\">\n                <NavLink to=\"/fake-url\" className=\"nav-link\" activeClassName=\"nav-link\">\n                  <i className=\"nav-icon fas fa-coins\" />\n                  <p>\n                    Payroll Management\n                    <i className=\"right fas fa-angle-left\" />\n                  </p>\n                </NavLink>\n                <ul className=\"nav nav-treeview\">\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/salary-details\" className=\"nav-link\">\n                      <i className=\"fas fa-coins nav-icon\" />\n                      <p>Manage Salary Details</p>\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/salary-list\" className=\"nav-link\">\n                      <i className=\"fas fa-users nav-icon\" />\n                      <p>Employee Salary List</p>\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/payment\" className=\"nav-link\">\n                      <i className=\"fas fa-money-check nav-icon\" />\n                      <p>Make Payment</p>\n                    </NavLink>\n                  </li>\n                </ul>\n              </li>\n              <li className=\"nav-item has-treeview\">\n                <NavLink to=\"/fake-url\" className=\"nav-link\" activeClassName=\"nav-link\">\n                  <i className=\"nav-icon fas fa-money-bill\" />\n                  <p>\n                    Expense Management\n                    <i className=\"right fas fa-angle-left\" />\n                  </p>\n                </NavLink>\n                <ul className=\"nav nav-treeview\">\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/expense\" className=\"nav-link\">\n                      <i className=\"fas fa-shopping-cart nav-icon\" />\n                      <p>Make Expense</p>\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/expense-report\" className=\"nav-link\">\n                      <i className=\"fas fa-file-invoice nav-icon\" />\n                      <p>Expense Report</p>\n                    </NavLink>\n                  </li>\n                </ul>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/announcement\" className=\"nav-link\">\n                  <i className=\"nav-icon fa fa-bell\" />\n                  <p>\n                    Announcements\n                  </p>\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n          {/* /.sidebar-menu */}\n        </div>\n        {/* /.sidebar */}\n      </aside>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { loadTree } from '../menuTreeHelper';\nimport {NavLink} from 'react-router-dom'\n\nexport default class SidebarManager extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {}\n    }\n  }\n\n  componentDidMount() {\n    let userData = JSON.parse(localStorage.getItem('user'))\n    this.setState({user: userData})\n    loadTree();\n  }\n\n  render() {\n    return (\n      <aside className=\"main-sidebar sidebar-dark-primary elevation-4\" >\n        {/* Brand Logo */}\n        <a href=\"/\" className=\"brand-link\">\n          <span className=\"brand-text font-weight-light ml-1\">HRMS Manager</span>\n        </a>\n        {/* Sidebar */}\n        <div className=\"sidebar\">\n          {/* Sidebar user panel (optional) */}\n          <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n            <div className=\"image\">\n              <img\n                src={process.env.PUBLIC_URL + '/user-64.png'}\n                className=\"img-circle elevation-2\"\n                alt=\"User Image\"\n              />\n            </div>\n            <div className=\"info\">\n              <NavLink to=\"/profile\" className=\"d-block text-decoration-none\">\n                {this.state.user.fullname || `${this.state.user.firstName} ${this.state.user.lastName}` || 'User'}\n              </NavLink>\n            </div>\n          </div>\n          {/* Sidebar Menu */}\n          <nav className=\"mt-2\">\n            <ul\n              className=\"nav nav-pills nav-sidebar flex-column\"\n              data-widget=\"treeview\"\n              role=\"menu\"\n              data-accordion=\"false\"\n            >\n              {/* Add icons to the links using the .nav-icon class\n         with font-awesome or any other icon font library */}\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-tachometer-alt\" />\n                  <p>\n                    Dashboard\n                    <span className=\"right badge badge-success\">Home</span>\n                  </p>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/employee-list\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-users\" />\n                  <p>\n                    My Employees\n                  </p>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink to=\"/job-list\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-briefcase\" />\n                  <p>\n                    Job List\n                  </p>\n                </NavLink>\n              </li>\n              <li className=\"nav-item has-treeview\">\n                <NavLink to=\"/fake-url\" className=\"nav-link\" activeClassName=\"nav-link\">\n                  <i className=\"nav-icon fa fa-rocket\" />\n                  <p>\n                    Applications\n                    <i className=\"right fas fa-angle-left\" />\n                  </p>\n                </NavLink>\n                <ul className=\"nav nav-treeview\">\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/application\" className=\"nav-link\">\n                      <i className=\"fa fa-plus nav-icon\" />\n                      <p>Add Application</p>\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/application-list\" className=\"nav-link\">\n                      <i className=\"fas fa-list-ul nav-icon\" />\n                      <p>Application List</p>\n                    </NavLink>\n                  </li>\n                </ul>\n              </li>\n              <li className=\"nav-item has-treeview\">\n                <NavLink to=\"/fake-url\" className=\"nav-link\" activeClassName=\"nav-link\">\n                  <i className=\"nav-icon fas fa-money-bill\" />\n                  <p>\n                    Expense Management\n                    <i className=\"right fas fa-angle-left\" />\n                  </p>\n                </NavLink>\n                <ul className=\"nav nav-treeview\">\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/expense\" className=\"nav-link\">\n                      <i className=\"fas fa-shopping-cart nav-icon\" />\n                      <p>Make Expense</p>\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/expense-report\" className=\"nav-link\">\n                      <i className=\"fas fa-file-invoice nav-icon\" />\n                      <p>Expense Report</p>\n                    </NavLink>\n                  </li>\n                </ul>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/announcement\" className=\"nav-link\">\n                  <i className=\"nav-icon fa fa-bell\" />\n                  <p>\n                    Announcements\n                  </p>\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n          {/* /.sidebar-menu */}\n        </div>\n        {/* /.sidebar */}\n      </aside>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { loadTree } from '../menuTreeHelper';\nimport {NavLink} from 'react-router-dom'\n\nexport default class SidebarEmployee extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {}\n    }\n  }\n\n  componentDidMount() {\n    let userData = JSON.parse(localStorage.getItem('user'))\n    this.setState({user: userData})\n    loadTree();\n  }\n\n  render() {\n    return (\n      <aside className=\"main-sidebar sidebar-dark-primary elevation-4\" >\n        {/* Brand Logo */}\n        <a href=\"/\" className=\"brand-link\">\n          <span className=\"brand-text font-weight-light ml-1\">HRMS Employee</span>\n        </a>\n        {/* Sidebar */}\n        <div className=\"sidebar\">\n          {/* Sidebar user panel (optional) */}\n          <div className=\"user-panel mt-3 pb-3 mb-3 d-flex\">\n            <div className=\"image\">\n              <img\n                src={process.env.PUBLIC_URL + '/user-64.png'}\n                className=\"img-circle elevation-2\"\n                alt=\"User Image\"\n              />\n            </div>\n            <div className=\"info\">\n              <NavLink to=\"/profile\" className=\"d-block text-decoration-none\">\n                {this.state.user.fullname || `${this.state.user.firstName} ${this.state.user.lastName}` || 'User'}\n              </NavLink>\n            </div>\n          </div>\n          {/* Sidebar Menu */}\n          <nav className=\"mt-2\">\n            <ul\n              className=\"nav nav-pills nav-sidebar flex-column\"\n              data-widget=\"treeview\"\n              role=\"menu\"\n              data-accordion=\"false\"\n            >\n              {/* Add icons to the links using the .nav-icon class\n         with font-awesome or any other icon font library */}\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-tachometer-alt\" />\n                  <p>\n                    Dashboard\n                    <span className=\"right badge badge-success\">Home</span>\n                  </p>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/salary-view\" className=\"nav-link\">\n                  <i className=\"nav-icon fas fa-coins\" />\n                  <p>\n                    My Salary Details\n                  </p>\n                </NavLink>\n              </li>\n              <li className=\"nav-item has-treeview\">\n                <NavLink to=\"/fake-url\" className=\"nav-link\" activeClassName=\"nav-link\">\n                  <i className=\"nav-icon fa fa-rocket\" />\n                  <p>\n                    Applications\n                    <i className=\"right fas fa-angle-left\" />\n                  </p>\n                </NavLink>\n                <ul className=\"nav nav-treeview\">\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/application\" className=\"nav-link\">\n                      <i className=\"fa fa-plus nav-icon\" />\n                      <p>Application</p>\n                    </NavLink>\n                  </li>\n                  <li className=\"nav-item\">\n                    <NavLink to=\"/application-list\" className=\"nav-link\">\n                      <i className=\"fas fa-list-ul nav-icon\" />\n                      <p>My Applications</p>\n                    </NavLink>\n                  </li>\n                </ul>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink exact to=\"/announcement\" className=\"nav-link\">\n                  <i className=\"nav-icon fa fa-bell\" />\n                  <p>\n                    Announcements\n                  </p>\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n          {/* /.sidebar-menu */}\n        </div>\n        {/* /.sidebar */}\n      </aside>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nexport default class Content extends Component {\n  render() {\n    return (\n      <div className=\"info-box \">\n        <span className={\"info-box-icon \" + this.props.color}>\n          <i className={this.props.icon} />\n        </span>\n        <div className=\"info-box-content\">\n          <span className=\"info-box-text\">{this.props.title}</span>\n          <span className=\"info-box-number\">{this.props.description}</span>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { Modal, Button, Form, Alert } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport { addEventToStorage } from '../utils/localStorage';\n\nexport default class AddEventModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      startDate: null,\n      endDate: null,\n      event: {},\n      showAlert: false,\n      done: false\n    };\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.startDate > this.state.endDate) {\n      toast.error(\"End Date should be after Start Date\");\n    } else {\n      let userId = JSON.parse(localStorage.getItem(\"user\")).id;\n      this.setState(\n        {\n          event: {\n            eventTitle: this.state.title,\n            eventDescription: this.state.description,\n            eventStartDate: moment(this.state.startDate).format(\n              \"YYYY-MM-DD HH:mm:ss\"\n            ),\n            eventEndDate: moment(this.state.endDate).format(\n              \"YYYY-MM-DD HH:mm:ss\"\n            ),\n            userId: userId,\n          },\n        },\n        () => {\n          try {\n            // Use localStorage instead of axios\n            addEventToStorage(this.state.event);\n            this.setState({done: true});\n            toast.success(\"Event added successfully!\");\n          } catch (err) {\n            toast.error(\"Failed to add event: \" + err.message);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    const {showAlert, done} = this.state  \n    return (\n      <Modal\n        {...this.props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add Event\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            {done ? <Redirect to=\"/\" /> : <></>}\n            <Form onSubmit={this.onSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label className=\"required\">Title</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter a Title\"\n                        className=\"col-6\"\n                        name=\"title\"\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                        required\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter a Description\"\n                        className=\"col-6\"\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.handleChange}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formStartDate\">\n                    <Form.Label className=\"required\">Start Date</Form.Label>\n                    <DatePicker\n                        selected={this.state.startDate}\n                        onChange={newStartDate => this.setState({ startDate: newStartDate })}\n                        showTimeSelect\n                        timeFormat=\"HH:mm\"\n                        name=\"startDate\"\n                        timeIntervals={30}\n                        timeCaption=\"time\"\n                        dateFormat=\"yyyy-MM-dd HH:mm:ss\"\n                        className=\"form-control ml-1\"\n                        placeholderText=\"Select Start Date\"\n                        autoComplete=\"off\"\n                        required\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formEndDate\">\n                    <Form.Label className=\"required\">End Date</Form.Label>\n                    <DatePicker\n                        selected={this.state.endDate}\n                        onChange={newEndDate => this.setState({ endDate: newEndDate })}\n                        showTimeSelect\n                        timeFormat=\"HH:mm\"\n                        name=\"endDate\"\n                        timeIntervals={30}\n                        timeCaption=\"time\"\n                        dateFormat=\"yyyy-MM-dd HH:mm:ss\"\n                        className=\"form-control ml-3\"\n                        placeholderText=\"Select End Date\"\n                        autoComplete=\"off\"\n                        required\n                    />\n                </Form.Group>\n\n                <Form.Text className=\"mb-3 required\"> Required Fields</Form.Text>\n                <Button variant=\"success\" type=\"submit\">\n                    Submit\n            </Button>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport { updateEvent, deleteEvent } from '../utils/localStorage'\n\nexport default class ShowEventPopup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        title: '',\n        description: '',\n        startDate: null,\n        endDate: null,\n        done: false\n    }\n  }\n\n  componentDidMount() {\n     this.setState({\n        id: this.props.data.id,\n        title: this.props.data.title,\n        description: this.props.data.description,\n        startDate: this.props.data.start,\n        endDate: this.props.data.end\n    }) \n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  deleteEvent = (e) => {\n    e.preventDefault()\n    try {\n      deleteEvent(this.state.id);\n      this.setState({done: true});\n      toast.success(\"Event deleted successfully!\");\n    } catch (err) {\n      toast.error(\"Failed to delete event: \" + err.message);\n    }\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.startDate > this.state.endDate) {\n      toast.error(\"End Date should be after Start Date\");\n    } else {\n      let userId = JSON.parse(localStorage.getItem(\"user\")).id;\n      this.setState(\n        {\n          event: {\n            eventTitle: this.state.title,\n            eventDescription: this.state.description,\n            eventStartDate: moment(this.state.startDate).format(\n              \"YYYY-MM-DD HH:mm:ss\"\n            ),\n            eventEndDate: moment(this.state.endDate).format(\n              \"YYYY-MM-DD HH:mm:ss\"\n            )\n          },\n        },\n        () => {\n          try {\n            updateEvent(this.state.id, this.state.event);\n            this.setState({done: true});\n            toast.success(\"Event updated successfully!\");\n          } catch (err) {\n            toast.error(\"Failed to update event: \" + err.message);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    const {showAlert, done} = this.state  \n    return (\n      <Modal\n        {...this.props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Event Details\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            {done ? <Redirect to=\"/\" /> : <></>}\n            <Form onSubmit={this.onSubmit}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Title <span style={{ color: \"red\" }}>*</span></Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter a Title\"\n                        className=\"col-6\"\n                        name=\"title\"\n                        value={this.state.title}\n                        onChange={this.handleChange}\n                        required\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Description</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter a Description\"\n                        className=\"col-6\"\n                        name=\"description\"\n                        value={this.state.description}\n                        onChange={this.handleChange}\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formStartDate mt-1\">\n                    <Form.Label className=\"required\">Start Date</Form.Label>\n                    <DatePicker\n                        selected={this.state.startDate}\n                        onChange={newStartDate => this.setState({ startDate: newStartDate })}\n                        showTimeSelect\n                        timeFormat=\"HH:mm\"\n                        name=\"startDate\"\n                        timeIntervals={30}\n                        timeCaption=\"time\"\n                        dateFormat=\"yyyy-MM-dd HH:mm:ss\"\n                        className=\"form-control ml-1\"\n                        placeholderText=\"Select Start Date\"\n                        autoComplete=\"off\"\n                        required\n                    />\n                </Form.Group>\n\n                <Form.Group controlId=\"formEndDate\">\n                    <Form.Label>End Date</Form.Label>\n                    <DatePicker\n                        selected={this.state.endDate}\n                        onChange={newEndDate => this.setState({ endDate: newEndDate })}\n                        showTimeSelect\n                        timeFormat=\"HH:mm\"\n                        name=\"endDate\"\n                        timeIntervals={30}\n                        timeCaption=\"time\"\n                        dateFormat=\"yyyy-MM-dd HH:mm:ss\"\n                        className=\"form-control ml-3\"\n                        placeholderText=\"Select End Date\"\n                        autoComplete=\"off\"\n                        required\n                    />\n                </Form.Group>\n\n                <Form.Text className=\"mb-3 required\">Required Fields</Form.Text>\n                <Button variant=\"success\" type=\"submit\">\n                    Submit\n            </Button>\n            </Form>\n            <Form onSubmit={this.deleteEvent}>\n                <Button variant=\"danger\" type=\"submit\" className=\"mt-2\">\n                    Delete\n                </Button>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport FullCalendar from \"@fullcalendar/react\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport { getEvents } from '../utils/localStorage';\nimport AddEventPopup from \"./AddEventPopup\";\nimport moment from \"moment\";\nimport ReactToolTip from \"react-tooltip\";\nimport ShowEventPopup from './ShowEventPopup'\n\nexport default class Calendar extends Component {\n  \n  _isMounted=false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {},\n      events: [],\n      showAddModel: false,\n      showModel: false,\n      selectedEvent: {}\n    };\n\n    this.handleEventClick = this.handleEventClick.bind(this)\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    if(this._isMounted) {\n      this.setState({ user: JSON.parse(localStorage.getItem(\"user\")) }, () => {\n        // Use localStorage instead of axios\n        const allEvents = getEvents();\n        const userEvents = allEvents.filter(event => event.userId == this.state.user.id);\n        \n        let newEvents = userEvents.map((x) => ({\n          title: x.eventTitle,\n          description: x.eventDescription,\n          start: x.eventStartDate,\n          end: x.eventEndDate,\n          id: x.id,\n          color: '#007bff',\n          textColor: 'white'\n        }));\n\n        for (var i in newEvents) {\n          newEvents[i].start = moment\n            (newEvents[i].start)\n            .format(\"YYYY-MM-DD HH:mm:ss\");\n          newEvents[i].end = moment\n            (newEvents[i].end)\n            .format(\"YYYY-MM-DD HH:mm:ss\");\n        }\n\n        this.setState({ events: [...newEvents] });\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  handleEventClick(info) {\n    this.setState({\n      selectedEvent: {\n        id: info.event.id,\n        title: info.event.title,\n        description: info.event.extendedProps.description,\n        start: info.event.start,\n        end: info.event.end\n      },\n      showModel: true\n    })\n  }\n\n  handleEventPositioned(info) {\n    info.el.setAttribute(\"title\", info.event.extendedProps.description ? info.event.extendedProps.description : 'No description');\n    ReactToolTip.rebuild();\n  }\n\n  render() {\n    let closeAddModel = () => this.setState({ showAddModel: false });\n    let closeShowModel = () => this.setState({showModel: false})\n\n    return (\n      <>\n        <FullCalendar\n          defaultView=\"dayGridMonth\"\n          plugins={[dayGridPlugin, interactionPlugin]}\n          eventClick={this.handleEventClick}\n          dateClick={() => this.setState({ showAddModel: true })}\n          events={this.state.events}\n          eventPositioned={this.handleEventPositioned}\n          eventTimeFormat= {{\n            hour: '2-digit',\n            minute: '2-digit',\n            meridiem: false,\n            hour12: false\n          }}\n          customButtons={{\n            button: {\n              text: \"Add Event\",\n              click: () => {\n                this.setState({showAddModel: true})\n              },\n            },\n          }}\n          header={{\n            left: \"prev,next today button\",\n            center: \"title\",\n            right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\",\n          }}\n        />\n        <AddEventPopup show={this.state.showAddModel} onHide={closeAddModel} />\n        {this.state.showModel ? (\n          <ShowEventPopup show={true} onHide={closeShowModel} data={this.state.selectedEvent}/>\n        ) : (<></>)}\n      </>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { getExpenses } from '../utils/localStorage';\n\nexport default class ExpenseChartsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chartData: {\n        labels: [],\n        datasets: []\n      },\n      expenseYear: 2025,\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    // Generate mock expense data for the selected year\n    const mockData = this.generateMockExpenseData(this.state.expenseYear);\n    let data = this.transformData(mockData);\n    let array = this.makeArrayStructure(data);\n    this.setState({ chartData: array });\n  };\n\n  generateMockExpenseData = (year) => {\n    const months = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    \n    // Generate reasonable expense data based on year\n    const baseExpenses = {\n      'January': 250, 'February': 180, 'March': 320, 'April': 210,\n      'May': 280, 'June': 350, 'July': 290, 'August': 310,\n      'September': 270, 'October': 340, 'November': 260, 'December': 300\n    };\n    \n    return months.map(month => ({\n      month: month,\n      expenses: baseExpenses[month] + Math.floor(Math.random() * 800) // Add some variation\n    }));\n  };\n\n  transformData = (data) => {\n    data.forEach((obj) => {\n      obj.expenses = parseInt(obj.expenses);\n    });\n    return data;\n  };\n\n  makeArrayStructure = (data) => {\n    let array = {\n      labels: data.map((d) => d.month),\n      datasets: [\n        {\n          data: [...data.map((d) => d.expenses)],\n          backgroundColor: \"#007fad\",\n        },\n      ],\n    };\n    return array;\n  };\n\n  onChange = (event) => {\n    this.setState({ expenseYear: event.target.value }, () => {\n      this.fetchData();\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"mt-1\" style={{ textAlign: \"center\" }}>\n          <span className=\"ml-4\">Select Year: </span>\n          <select onChange={this.onChange} value={this.state.expenseYear}>\n            <option value=\"2025\">2025</option>\n            <option value=\"2024\">2024</option>\n            <option value=\"2023\">2023</option>\n            <option value=\"2022\">2022</option>\n            <option value=\"2021\">2021</option>\n          </select>\n        </div>\n        <div>\n          <Bar\n            data={this.state.chartData}\n            height={300}\n            options={{\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      min: 0,\n                      stepSize: 300,\n                    },\n                  },\n                ],\n              },\n            }}\n            redraw\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { getPayments } from '../utils/localStorage';\n\nexport default class PaymentChartsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chartData: {\n        labels: [],\n        datasets: []\n      },\n      paymentYear: 2025,\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    // Generate mock payment data for the selected year\n    const mockData = this.generateMockPaymentData(this.state.paymentYear);\n    let data = this.transformData(mockData);\n    let array = this.makeArrayStructure(data);\n    this.setState({ chartData: array });\n  };\n\n  generateMockPaymentData = (year) => {\n    const months = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    \n    // Generate reasonable payment data based on year (salary payments)\n    const basePayments = {\n      'January': 1500, 'February': 1550, 'March': 1600, 'April': 1580,\n      'May': 1620, 'June': 1590, 'July': 1640, 'August': 1610,\n      'September': 1660, 'October': 1630, 'November': 1570, 'December': 1700\n    };\n    \n    return months.map(month => ({\n      month: month,\n      expenses: basePayments[month] + Math.floor(Math.random() * 1000) // Add some variation\n    }));\n  };\n\n  transformData = (data) => {\n    data.forEach((obj) => {\n      obj.expenses = parseInt(obj.expenses);\n    });\n    return data;\n  };\n\n  makeArrayStructure = (data) => {\n    let array = {\n      labels: data.map((d) => d.month),\n      datasets: [\n        {\n          data: [...data.map((d) => d.expenses)],\n          backgroundColor: \"#007fad\",\n        },\n      ],\n    };\n    return array;\n  };\n\n  onChange = (event) => {\n    this.setState({ paymentYear: event.target.value }, () => {\n      this.fetchData();\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"mt-1\" style={{ textAlign: \"center\" }}>\n          <span className=\"ml-4\">Select Year: </span>\n          <select onChange={this.onChange} value={this.state.paymentYear}>\n            <option value=\"2025\">2025</option>\n            <option value=\"2024\">2024</option>\n            <option value=\"2023\">2023</option>\n            <option value=\"2022\">2022</option>\n            <option value=\"2021\">2021</option>\n          </select>\n        </div>\n        <div>\n          <Bar\n            data={this.state.chartData}\n            height={300}\n            options={{\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      min: 0,\n                      stepSize: 2000,\n                    },\n                  },\n                ],\n              },\n            }}\n            redraw\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { getApplications } from '../utils/localStorage';\n\nexport default class RecentApplications extends React.Component {\n  \n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recentApplications: [],\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    //Fetch Applications Recent from localStorage\n    const applications = getApplications();\n    const recentApplications = applications\n      .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n      .slice(0, 5)\n      .map(app => ({\n        id: app.id,\n        type: app.type || 'Leave',\n        status: app.status || 'Pending',\n        user: {\n          fullName: app.employeeName || 'Unknown User'\n        }\n      }));\n    \n    if(this._isMounted) {\n      this.setState({ recentApplications: recentApplications });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"mt-1\" style={{ textAlign: \"center\" }}></div>\n        <div>\n          <ul>\n            {this.state.recentApplications.map((app) => (\n                <li style={{ listStyle: \"none\", height: '50px'}} key={app.id} className=\"mt-1 mb-2\">\n                  <h5>\n                    <div className=\"float-left mr-1\">\n                      <img src=\"/user-40.png\" alt=\"User avatar\"></img>\n                    </div>\n                    <span>{app.user.fullName} </span>\n                    <small>({app.type})</small>\n                    <div className=\"float-right mt-2 mr-3\">\n                      <small style={{\n                        color: (app.status === 'Approved' ? 'green' :\n                                app.status === 'Rejected' ? 'red' :\n                                'orange'\n                        )\n                      }}>{app.status}</small>\n                    </div>\n                    <p></p>\n                  </h5>\n                <hr className=\"mt-2 mb-2\"/>\n                </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport CalendarIcon from 'react-calendar-icon'\nimport { ThemeProvider } from \"styled-components\";\nimport { getAnnouncements } from '../utils/localStorage';\n\nexport default class RecentAnnouncements extends React.Component {\n  \n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recentAnnouncements: [],\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    //Fetch Recent Announcements from localStorage\n    const announcements = getAnnouncements();\n    // Get the 5 most recent announcements\n    const recentAnnouncements = announcements\n      .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n      .slice(0, 5)\n      .map(announcement => ({\n        id: announcement.id,\n        announcementTitle: announcement.title,\n        announcementDescription: announcement.description,\n        createdAt: announcement.createdAt || new Date().toISOString(),\n        department: { departmentName: announcement.department || 'General' }\n      }));\n    \n    if(this._isMounted) {\n      this.setState({ recentAnnouncements: recentAnnouncements });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const theme = {\n        calendarIcon: {\n          textColor: \"white\", // text color of the header and footer\n          primaryColor: \"#0da472\", // background of the header and footer\n          backgroundColor: \"#fafafa\"\n        }\n      };\n\n      const days = [\"Monday\", \"Tuesday\", \"Wendesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n      const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n\n    return (\n        <div className=\"card\">\n        <div className=\"mt-1\" style={{ textAlign: \"center\" }}></div>\n          <ul>\n            {this.state.recentAnnouncements.map((announcement) => (\n                <li style={{ listStyle: \"none\"}} key={announcement.id} className=\"mb-2 mt-1\">\n                    <div className=\"float-left mr-2\">\n                        <time datetime=\"2014-09-20\" className=\"icon p-0\">\n                            <em>{days[new Date(announcement.createdAt).getDay()]}</em>\n                            <strong>{monthNames[new Date(announcement.createdAt).getMonth()]}</strong>\n                            <span>{new Date(announcement.createdAt).getDate()}</span>\n                        </time>\n                    </div>\n                    <span><strong>{announcement.announcementTitle}</strong> ({announcement.department?.departmentName || 'General'})</span>\n                    <br className=\"p-1\"/>\n                    <small>{announcement.announcementDescription}</small>\n                    <hr  className=\" pt-2 pb-1 mb-0\"/>\n                </li>\n            ))}\n          </ul>\n      </div>\n    );\n  }\n}\n","/**\n * Currency utility functions for Tanzanian Shilling (TSh)\n */\n\n/**\n * Format amount with TSh currency symbol and proper number formatting\n * @param {number} amount - The amount to format\n * @returns {string} - Formatted currency string\n */\nexport const formatCurrency = (amount) => {\n  if (amount === null || amount === undefined || isNaN(amount)) {\n    return 'TSh 0';\n  }\n  return `TSh ${Number(amount).toLocaleString()}`;\n};\n\n/**\n * Format amount for input fields (without currency symbol)\n * @param {number} amount - The amount to format\n * @returns {string} - Formatted number string\n */\nexport const formatAmount = (amount) => {\n  if (amount === null || amount === undefined || isNaN(amount)) {\n    return '0';\n  }\n  return Number(amount).toLocaleString();\n};\n\n/**\n * Parse formatted currency string back to number\n * @param {string} currencyString - The formatted currency string\n * @returns {number} - Parsed number\n */\nexport const parseCurrency = (currencyString) => {\n  if (!currencyString) return 0;\n  \n  // Remove TSh prefix and any commas, then parse\n  const cleanString = currencyString.replace(/TSh\\s?|,/g, '');\n  const parsed = parseFloat(cleanString);\n  \n  return isNaN(parsed) ? 0 : parsed;\n};\n\n/**\n * Get currency symbol\n * @returns {string} - Currency symbol\n */\nexport const getCurrencySymbol = () => {\n  return 'TSh';\n};\n\n/**\n * Get currency name\n * @returns {string} - Currency name\n */\nexport const getCurrencyName = () => {\n  return 'Tanzanian Shilling';\n};\n","import React, { Component } from \"react\";\n\nimport \"../App.css\";\nimport Infobox from \"./infobox\";\nimport Calendar from \"./Calendar\";\nimport ExpenseChartsPage from \"./ExpenseChartsPage\";\nimport PaymentChartsPage from \"./PaymentChartsPage\";\nimport RecentApplciations from \"./RecentApplications\";\nimport RecentAnnouncements from \"./RecentAnnouncements\";\nimport { getEmployees, getExpenses, getPayments } from \"../utils/localStorage\";\nimport { formatCurrency } from \"../utils/currency\";\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalEmployees: 0,\n      totalExpenses: 0,\n      totalPayments: 0,\n      recentApplications: [],\n    };\n  }\n\n  componentDidMount() {\n    // Get data from localStorage\n    let employees = getEmployees();\n    if (employees.length === 0) {\n      // Initialize with default employees if empty\n      const defaultEmployees = [\n        { id: 1, firstName: 'Admin', lastName: 'User', department: 'IT', salary: 1200000 },\n        { id: 2, firstName: 'John', lastName: 'Manager', department: 'HR', salary: 1500000 },\n        { id: 3, firstName: 'Jane', lastName: 'Employee', department: 'Sales', salary: 800000 },\n        { id: 4, firstName: 'John', lastName: 'Doe', department: 'IT', salary: 1100000 },\n        { id: 5, firstName: 'Jane', lastName: 'Smith', department: 'Marketing', salary: 900000 }\n      ];\n      localStorage.setItem('hrms_employees', JSON.stringify(defaultEmployees));\n      employees = defaultEmployees;\n    }\n\n    let expenses = getExpenses();\n    if (expenses.length === 0) {\n      // Initialize with reasonable expense data for 2025\n      const defaultExpenses = [\n        { id: 1, amount: 250000, description: 'Office Rent', date: '2025-01-15', department: 'Administration' },\n        { id: 2, amount: 80000, description: 'Equipment Purchase', date: '2025-02-10', department: 'IT' },\n        { id: 3, amount: 120000, description: 'Marketing Campaign', date: '2025-03-05', department: 'Marketing' },\n        { id: 4, amount: 60000, description: 'Training Programs', date: '2025-04-20', department: 'HR' },\n        { id: 5, amount: 95000, description: 'Utilities', date: '2025-05-12', department: 'Administration' },\n        { id: 6, amount: 180000, description: 'Software Licenses', date: '2025-06-08', department: 'IT' },\n        { id: 7, amount: 75000, description: 'Travel Expenses', date: '2025-07-15', department: 'Sales' },\n        { id: 8, amount: 110000, description: 'Office Supplies', date: '2025-08-22', department: 'Administration' },\n        { id: 9, amount: 220000, description: 'Equipment Maintenance', date: '2025-09-10', department: 'IT' }\n      ];\n      localStorage.setItem('hrms_expenses', JSON.stringify(defaultExpenses));\n      expenses = defaultExpenses;\n    }\n\n    let payments = getPayments();\n    if (payments.length === 0) {\n      // Initialize with reasonable payment data for 2025\n      const defaultPayments = [\n        { id: 1, amount: 15000, description: 'January Salaries', date: '2025-01-31', type: 'Salary' },\n        { id: 2, amount: 15500, description: 'February Salaries', date: '2025-02-28', type: 'Salary' },\n        { id: 3, amount: 16000, description: 'March Salaries', date: '2025-03-31', type: 'Salary' },\n        { id: 4, amount: 15800, description: 'April Salaries', date: '2025-04-30', type: 'Salary' },\n        { id: 5, amount: 16200, description: 'May Salaries', date: '2025-05-31', type: 'Salary' },\n        { id: 6, amount: 10000, description: 'June Salaries', date: '2025-06-30', type: 'Salary' },\n        { id: 7, amount: 10000, description: 'July Salaries', date: '2025-07-31', type: 'Salary' },\n        { id: 8, amount: 1610000, description: 'August Salaries', date: '2025-08-31', type: 'Salary' },\n        { id: 9, amount: 10000, description: 'September Salaries', date: '2025-09-30', type: 'Salary' }\n      ];\n      localStorage.setItem('hrms_payments', JSON.stringify(defaultPayments));\n      payments = defaultPayments;\n    }\n\n    // Calculate totals\n    const totalEmployees = employees.length;\n    const totalExpenses = expenses.reduce((sum, expense) => sum + (expense.amount || 0), 0);\n    const totalPayments = payments.reduce((sum, payment) => sum + (payment.amount || 0), 0);\n\n    this.setState({\n      totalEmployees,\n      totalExpenses,\n      totalPayments\n    });\n  }\n  render() {\n    return (\n      <div>\n        {/* First Row with small info-boxes */}\n        <div className=\"row pt-4\">\n          {/* First info-box */}\n          <div className=\"col-md-4 col-sm-6 col-xs-12\">\n            <Infobox\n              title=\"Total Employees\"\n              description={this.state.totalEmployees}\n              color=\"bg-success\"\n              icon=\"fa fa-users\"\n            />\n          </div>\n          {/* Second info-box */}\n          <div className=\"col-md-4 col-sm-6 col-xs-12\">\n            <Infobox\n              title=\"Total Expenses\"\n              description={formatCurrency(this.state.totalExpenses)}\n              color=\"bg-warning\"\n              icon=\"fa fa-wallet\"\n            />\n          </div>\n          {/* Third info-box */}\n          <div className=\"col-md-4 col-sm-6 col-xs-12\">\n            <Infobox\n              title=\"Total Payments\"\n              description={formatCurrency(this.state.totalPayments)}\n              color=\"bg-danger\"\n              icon=\"fa fa-coins\"\n            />\n          </div>\n        </div>\n        {/* Second Row with Calendar and Expense Report */}\n        <div className=\"row pt-4\">\n          {/* Calendar */}\n          <div className=\"col-sm-6\">\n            <Calendar />\n            <div className=\"panel panel-default\">\n              <div\n                className=\"panel-heading with-border\"\n                style={{ backgroundColor: \"#515e73\", color: \"white\" }}\n              >\n                <h3 className=\"panel-title\">Recent Applications</h3>\n              </div>\n              <RecentApplciations />\n            </div>\n          </div>\n          {/* Expense Report & Recent Applications */}\n          <div className=\"col-md-6\">\n            <div className=\"panel panel-default\">\n              <div\n                className=\"panel-heading with-border\"\n                style={{ backgroundColor: \"#515e73\", color: \"white\" }}\n              >\n                <h3 className=\"panel-title\">Expense Report</h3>\n              </div>\n              <ExpenseChartsPage />\n            </div>\n            <div className=\"panel panel-default\">\n              <div\n                className=\"panel-heading with-border\"\n                style={{ backgroundColor: \"#515e73\", color: \"white\" }}\n              >\n                <h3 className=\"panel-title\">Payment Report</h3>\n              </div>\n              <PaymentChartsPage />\n            </div>\n            <div className=\"panel panel-default\">\n              <div\n                className=\"panel-heading with-border\"\n                style={{ backgroundColor: \"#515e73\", color: \"white\" }}\n              >\n                <h3 className=\"panel-title\">Recent Announcements</h3>\n              </div>\n              <RecentAnnouncements />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import * as React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { getExpenses, getUsers } from '../../utils/localStorage';\n\nexport default class ExpenseChartsPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chartData: [],\n      expenseYear: 2021,\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    let deptId = JSON.parse(localStorage.getItem(\"user\")).departmentId;\n    \n    // Use localStorage instead of axios\n    const allExpenses = getExpenses();\n    const allUsers = getUsers();\n    \n    // Filter expenses by department\n    const deptExpenses = allExpenses.filter(expense => {\n        const user = allUsers.find(u => u.id == expense.userId);\n        return user && user.departmentId == deptId;\n    });\n    \n    // Filter expenses by year\n    const yearExpenses = deptExpenses.filter(expense => \n        new Date(expense.date).getFullYear() == this.state.expenseYear\n    );\n    \n    // Group expenses by month\n    const monthlyExpenses = {};\n    yearExpenses.forEach(expense => {\n        const month = new Date(expense.date).getMonth();\n        if (!monthlyExpenses[month]) {\n            monthlyExpenses[month] = 0;\n        }\n        monthlyExpenses[month] += parseInt(expense.amount || 0);\n    });\n    \n    // Transform data to chart format\n    const data = Object.keys(monthlyExpenses).map(month => ({\n        month: this.getMonthName(parseInt(month)),\n        expenses: monthlyExpenses[month]\n    }));\n    \n    let array = this.makeArrayStructure(data);\n    this.setState({ chartData: array });\n  };\n\n  getMonthName = (monthIndex) => {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n                   \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    return months[monthIndex];\n  };\n\n  transformData = (data) => {\n    data.forEach((obj) => {\n      obj.expenses = parseInt(obj.expenses);\n    });\n    return data;\n  };\n\n  makeArrayStructure = (data) => {\n    let array = {\n      labels: data.map((d) => d.month),\n      datasets: [\n        {\n          data: [...data.map((d) => d.expenses)],\n          backgroundColor: \"#007fad\",\n        },\n      ],\n    };\n    return array;\n  };\n\n  onChange = (event) => {\n    this.setState({ expenseYear: event.target.value }, () => {\n      this.fetchData();\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"mt-1\" style={{ textAlign: \"center\" }}>\n          <span className=\"ml-4\">Select Year: </span>\n          <select onChange={this.onChange} value={this.state.expenseYear}>\n            <option value=\"2021\">2021</option>\n            <option value=\"2020\">2020</option>\n            <option value=\"2019\">2019</option>\n            <option value=\"2018\">2018</option>\n            <option value=\"2017\">2017</option>\n          </select>\n        </div>\n        <div>\n          <Bar\n            data={this.state.chartData}\n            height={300}\n            options={{\n              maintainAspectRatio: false,\n              legend: {\n                display: false,\n              },\n              scales: {\n                yAxes: [\n                  {\n                    ticks: {\n                      min: 0,\n                      stepSize: 300,\n                    },\n                  },\n                ],\n              },\n            }}\n            redraw\n          />\n        </div>\n      </div>\n    );\n  }\n}","import * as React from \"react\";\nimport { getApplications, getUsers } from '../../utils/localStorage';\n\nexport default class RecentApplications extends React.Component {\n  \n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recentApplications: [],\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    let deptId = JSON.parse(localStorage.getItem('user')).departmentId\n    \n    // Fetch Applications Recent from localStorage\n    const allApplications = getApplications();\n    const allUsers = getUsers();\n    \n    // Filter applications by department\n    const deptApplications = allApplications.filter(app => {\n        const user = allUsers.find(u => u.id == app.userId);\n        return user && user.departmentId == deptId;\n    });\n    \n    // Sort by creation date and take the 5 most recent\n    const recentApplications = deptApplications\n      .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n      .slice(0, 5)\n      .map(app => {\n        const user = allUsers.find(u => u.id == app.userId);\n        return {\n          ...app,\n          user: user ? { fullName: user.fullName || `${user.firstName} ${user.lastName}` } : { fullName: 'Unknown User' }\n        };\n      });\n    \n    if(this._isMounted) {\n      this.setState({ recentApplications: recentApplications });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"mt-1\" style={{ textAlign: \"center\" }}></div>\n        <div>\n          <ul>\n            {this.state.recentApplications.map((app) => (\n                <li style={{ listStyle: \"none\", height: '50px'}} key={app.id} className=\"mt-1 mb-2\">\n                  <h5>\n                    <div className=\"float-left mr-1\">\n                      <img src={process.env.PUBLIC_URL + '/user-40.png'}></img>\n                    </div>\n                    <span>{app.user.fullName} </span>\n                    <small>({app.type})</small>\n                    <div className=\"float-right mt-2 mr-3\">\n                      <small style={{\n                        color: (app.status === 'Approved' ? 'green' :\n                                app.status === 'Rejected' ? 'red' :\n                                'orange'\n                        )\n                      }}>{app.status}</small>\n                    </div>\n                    <p></p>\n                  </h5>\n                <hr className=\"mt-2 mb-2\"/>\n                </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nimport \"../../App.css\";\nimport Infobox from \"../infobox\";\nimport Calendar from \"../Calendar\";\nimport ExpenseChartsPage from \"../manager/ExpenseChartsPage\";\nimport RecentApplications from \"../manager/RecentApplications\";\nimport RecentAnnouncements from \"../RecentAnnouncements\";\nimport { getUsers, getExpenses } from '../../utils/localStorage';\n\nexport default class DashboardManager extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalEmployees: 0,\n      totalExpenses: 0,\n      totalPayments: 0,\n      recentApplications: [],\n    };\n  }\n\n  componentDidMount() {\n    let departmentId = JSON.parse(localStorage.getItem(\"user\")).departmentId;\n    \n    // Fetch Employees Total from localStorage\n    const allUsers = getUsers();\n    const departmentUsers = allUsers.filter(user => user.departmentId == departmentId);\n    this.setState({ totalEmployees: departmentUsers.length });\n\n    // Fetch Expenses Total from localStorage\n    const allExpenses = getExpenses();\n    const departmentExpenses = allExpenses.filter(expense => {\n      // We need to find the user's department for each expense\n      const user = allUsers.find(u => u.id == expense.userId);\n      return user && user.departmentId == departmentId;\n    });\n    \n    if (departmentExpenses.length > 0) {\n      const totalExpenses = departmentExpenses.reduce((sum, expense) => sum + parseInt(expense.amount || 0), 0);\n      this.setState({ totalExpenses: totalExpenses });\n    }\n  }\n  \n  render() {\n    return (\n      <div>\n        {/* First Row with small info-boxes */}\n        <div className=\"row pt-4\">\n          {/* First info-box */}\n          <div className=\"col-md-4 col-sm-6 col-xs-12\">\n            <Infobox\n              title=\"Department Employees\"\n              description={this.state.totalEmployees}\n              color=\"bg-success\"\n              icon=\"fa fa-users\"\n            />\n          </div>\n          {/* Second info-box */}\n          <div className=\"col-md-4 col-sm-6 col-xs-12\">\n            <Infobox\n              title=\"Department Expenses\"\n              description={this.state.totalExpenses + \" TZS\"}\n              color=\"bg-warning\"\n              icon=\"fa fa-wallet\"\n            />\n          </div>\n        </div>\n        {/* Second Row with Calendar and Expense Report */}\n        <div className=\"row pt-4\">\n          {/* Calendar */}\n          <div className=\"col-sm-6\">\n            <Calendar />\n          </div>\n          {/* Expense Report & Recent Applications */}\n          <div className=\"col-md-6\">\n            <div className=\"panel panel-default\">\n              <div\n                className=\"panel-heading with-border\"\n                style={{ backgroundColor: \"#515e73\", color: \"white\" }}\n              >\n                <h3 className=\"panel-title\">Department Expense Report</h3>\n              </div>\n              <ExpenseChartsPage />\n            </div>\n            <div className=\"panel panel-default\">\n              <div\n                className=\"panel-heading with-border\"\n                style={{ backgroundColor: \"#515e73\", color: \"white\" }}\n              >\n                <h3 className=\"panel-title\">Recent Applications</h3>\n              </div>\n              <RecentApplications />\n            </div>\n            <div className=\"panel panel-default\">\n              <div\n                className=\"panel-heading with-border\"\n                style={{ backgroundColor: \"#515e73\", color: \"white\" }}\n              >\n                <h3 className=\"panel-title\">Recent Announcements</h3>\n              </div>\n              <RecentAnnouncements />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import * as React from \"react\";\nimport { getApplications } from '../../utils/localStorage';\n\nexport default class RecentApplications extends React.Component {\n  \n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recentApplications: [],\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    let userId = JSON.parse(localStorage.getItem('user')).id\n    \n    // Fetch Applications Recent from localStorage\n    const allApplications = getApplications();\n    \n    // Filter applications by user ID\n    const userApplications = allApplications.filter(app => app.userId == userId);\n    \n    // Sort by creation date and take the 5 most recent\n    const recentApplications = userApplications\n      .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n      .slice(0, 5);\n    \n    if(this._isMounted) {\n      this.setState({ recentApplications: recentApplications });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    return (\n      <div className=\"card\">\n        <div className=\"mt-1\" style={{ textAlign: \"center\" }}></div>\n        <div>\n          <ul>\n            {this.state.recentApplications.map((app) => (\n                <li style={{ listStyle: \"none\", height: '50px'}} key={app.id} className=\"mt-1 mb-2\">\n                  <h5>\n                    <div className=\"float-left mr-1\">\n                      <img src={process.env.PUBLIC_URL + '/user-40.png'}></img>\n                    </div>\n                    <span>{app.user ? app.user.fullName : 'Unknown User'} </span>\n                    <small>({app.type})</small>\n                    <div className=\"float-right mt-2 mr-3\">\n                      <small style={{\n                        color: (app.status === 'Approved' ? 'green' :\n                                app.status === 'Rejected' ? 'red' :\n                                'orange'\n                        )\n                      }}>{app.status}</small>\n                    </div>\n                    <p></p>\n                  </h5>\n                <hr className=\"mt-2 mb-2\"/>\n                </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}","import * as React from \"react\";\nimport CalendarIcon from 'react-calendar-icon'\nimport { ThemeProvider } from \"styled-components\";\nimport { getAnnouncements } from '../utils/localStorage';\n\nexport default class RecentAnnouncements extends React.Component {\n  \n  _isMounted = false;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recentAnnouncements: [],\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    //Fetch Recent Announcements from localStorage\n    const announcements = getAnnouncements();\n    // Get the 5 most recent announcements\n    const recentAnnouncements = announcements\n      .sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt))\n      .slice(0, 5)\n      .map(announcement => ({\n        id: announcement.id,\n        announcementTitle: announcement.title,\n        announcementDescription: announcement.description,\n        createdAt: announcement.createdAt\n      }));\n    \n    if(this._isMounted) {\n      this.setState({ recentAnnouncements: recentAnnouncements });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const theme = {\n        calendarIcon: {\n          textColor: \"white\", // text color of the header and footer\n          primaryColor: \"#0da472\", // background of the header and footer\n          backgroundColor: \"#fafafa\"\n        }\n      };\n\n      const days = [\"Monday\", \"Tuesday\", \"Wendesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"]\n      const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n\n    return (\n        <div className=\"card\">\n        <div className=\"mt-1\" style={{ textAlign: \"center\" }}></div>\n          <ul>\n            {this.state.recentAnnouncements.map((announcement) => (\n                <li style={{ listStyle: \"none\"}} key={announcement.id} className=\"mb-2 mt-1\">\n                    <div className=\"float-left mr-2\">\n                        <time datetime=\"2014-09-20\" className=\"icon p-0\">\n                            <em>{days[new Date(announcement.createdAt).getDay()]}</em>\n                            <strong>{monthNames[new Date(announcement.createdAt).getMonth()]}</strong>\n                            <span>{new Date(announcement.createdAt).getDate()}</span>\n                        </time>\n                    </div>\n                    <span><strong>{announcement.announcementTitle}</strong></span>\n                    <br className=\"p-1\"/>\n                    <small>{announcement.announcementDescription}</small>\n                    <hr  className=\" pt-2 pb-1 mb-0\"/>\n                </li>\n            ))}\n          </ul>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Row, Col, Form } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport { getUsers, getDepartments } from '../../utils/localStorage'\n\nexport default class EmployeeViewEmployee extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {},\n      department: {\n        departmentName: null\n      },\n      job: {\n        jobTitle: null,\n      },\n      userPersonalInfo: {\n        dateOfBirth: null,\n        gender: null,\n        maritalStatus: null,\n        fatherName: null,\n        country: null,\n        address: null,\n        mobile: null,\n        emailAddress: null\n      },\n      userFinancialInfo: {\n        bankName: null,\n        accountName: null,\n        accountNumber: null,\n        iban: null\n      },\n      falseRedirect: false,\n      editRedirect: false\n    };\n  }\n\n  componentDidMount() {\n        // Use localStorage instead of axios\n        const allUsers = getUsers();\n        const departments = getDepartments();\n        \n        const userId = JSON.parse(localStorage.getItem('user')).id;\n        const user = allUsers.find(u => u.id == userId);\n        \n        if (user) {\n            this.setState({user: user}, () => {\n                // Set department info\n                const department = departments.find(dept => dept.id == user.departmentId);\n                if (department) {\n                    this.setState({department: { departmentName: department.departmentName }});\n                }\n                \n                // Set current job\n                if(user.jobs) {\n                    let jobs = user.jobs\n                    jobs.map(job => {\n                        if(new Date(job.startDate) <= Date.now() && new Date(job.endDate) >= Date.now()) {\n                            this.setState({job: { jobTitle: job.jobTitle }})\n                        }\n                    })\n                }\n                \n                // Set personal info\n                if(user.dateOfBirth || user.gender || user.maritalStatus || user.fatherName || \n                   user.country || user.city || user.address || user.mobile || user.email) {\n                    this.setState({\n                        userPersonalInfo: {\n                            dateOfBirth: user.dateOfBirth ? moment(user.dateOfBirth).format('D MMM YYYY') : null,\n                            gender: user.gender,\n                            maritalStatus: user.maritalStatus,\n                            fatherName: user.fatherName,\n                            country: user.country,\n                            city: user.city,\n                            address: user.address,\n                            mobile: user.mobile,\n                            emailAddress: user.email\n                        }\n                    });\n                }\n                \n                // Set financial info\n                if(user.bankName || user.accountName || user.accountNumber || user.iban) {\n                    this.setState({\n                        userFinancialInfo: {\n                            bankName: user.bankName,\n                            accountName: user.accountName,\n                            accountNumber: user.accountNumber,\n                            iban: user.iban\n                        }\n                    });\n                }\n            })\n        }\n  }\n\n\n  render() {\n    return (\n        <Card>\n            <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\", fontSize: '17px' }}>My Profile</Card.Header>\n            <Card.Body>\n                <Card.Title><strong>{this.state.user.fullName || `${this.state.user.firstName} ${this.state.user.lastName}`}</strong></Card.Title>\n                <Card.Text>\n                    <Col lg={12}>\n                        <Row className=\"pt-4\">\n                            <Col lg={3}>\n                                <img className=\"img-circle elevation-1 bp-2\" src={process.env.PUBLIC_URL + '/user-128.png'}></img>\n                            </Col>\n                            <Col className=\"pt-4\" lg={9}>\n                                <div className=\"emp-view-list\">\n                                    <ul>\n                                        <li><span>Employee ID: </span> {this.state.user.id}</li>\n                                        <li><span>Department: </span> {this.state.department.departmentName}</li>\n                                        <li><span>Job Title: </span> {this.state.job.jobTitle}</li>\n                                        <li><span>Role: </span>{this.state.user.role==='ROLE_ADMIN' ? 'Admin' : this.state.user.role==='ROLE_MANAGER' ? 'Manager' : 'Employee'}</li>\n                                    </ul>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col sm={6}>\n                                <Card className=\"secondary-card emp-view\">\n                                    <Card.Header>Personal Details</Card.Header>\n                                    <Card.Body>\n                                        <Card.Text id=\"emp-view-personal-dashboard\">\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    Date of Birth: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userPersonalInfo.dateOfBirth}\n                                                </span>\n                                            </Form.Group>\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    Gender: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userPersonalInfo.gender}\n                                                </span>\n                                            </Form.Group>\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    Marital Status: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userPersonalInfo.maritalStatus}\n                                                </span>\n                                            </Form.Group>\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    Father's Name: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userPersonalInfo.fatherName}\n                                                </span>\n                                            </Form.Group>\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                            <Col sm={6}>\n                                <Card className=\"secondary-card emp-view\">\n                                    <Card.Header>Contact Details</Card.Header>\n                                    <Card.Body>\n                                        <Card.Text id=\"emp-view-contact-dashboard\">\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    Location: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userPersonalInfo.country}, {this.state.userPersonalInfo.city}\n                                                </span>\n                                            </Form.Group>\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    Address: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userPersonalInfo.address}\n                                                </span>\n                                            </Form.Group>\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    Mobile: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userPersonalInfo.mobile} {this.state.userPersonalInfo.phone ? (' (' + this.state.userPersonalInfo.phone + ')') : null} \n                                                </span>\n                                            </Form.Group>\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    Email Address: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userPersonalInfo.emailAddress}\n                                                </span>\n                                            </Form.Group>\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col cm={6}>\n                                <Card className=\"secondary-card\">\n                                    <Card.Header>Bank Information</Card.Header>\n                                    <Card.Body>\n                                        <Card.Text id=\"emp-view-bank-dashboard\">\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    Bank Name: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userFinancialInfo.bankName}\n                                                </span>\n                                            </Form.Group>\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    Account Name: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userFinancialInfo.accountName}\n                                                </span>\n                                            </Form.Group>\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    Account Number: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userFinancialInfo.accountNumber}\n                                                </span>\n                                            </Form.Group>\n                                            <Form.Group as={Row}>\n                                                <Form.Label className=\"label\">\n                                                    IBAN: \n                                                </Form.Label>\n                                                <span>\n                                                    {this.state.userFinancialInfo.iban}\n                                                </span>\n                                            </Form.Group>\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                            <Col sm={6}>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    );\n  }\n}","import React, { Component } from \"react\";\n\nimport \"../../App.css\";\nimport Calendar from \"../Calendar\";\nimport RecentApplciations from \"../employee/RecentApplications\"\nimport RecentAnnouncements from '../RecentAnnouncementsManagerEmp'\nimport EmployeeViewDashboard from './EmployeeViewDashboard'\n\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      totalEmployees: 0,\n      totalExpenses: 0,\n      totalPayments: 0,\n      recentApplications: []\n    }\n  }\n\n\n\n  componentDidMount() {\n      let departmentId = JSON.parse(localStorage.getItem('user')).departmentId;\n\n  }\n  render() {    \n    return (\n      <div>\n        {/* Second Row with Calendar and Expense Report */}\n        <div className=\"row pt-4\">\n          {/* Calendar */}\n          <div className=\"col-sm-6\">\n            <EmployeeViewDashboard />\n            <div className=\"panel panel-default\">\n              <div className=\"panel-heading with-border\" style={{ \"backgroundColor\": \"#515e73\", color: \"white\" }}>\n                <h3 className=\"panel-title\">Recent Announcements</h3>\n              </div>\n              <RecentAnnouncements />\n            </div>\n          </div>\n          {/* Expense Report & Recent Applications */}\n          <div className=\"col-md-6\">\n            {/* <div className=\"panel panel-default\">\n              <div className=\"panel-heading with-border\" style={{ \"backgroundColor\": \"#515e73\", color: \"white\" }}>\n                <h3 className=\"panel-title\">My Recent Applications</h3>\n              </div>\n              <RecentApplciations />\n            </div> */}\n            <Calendar />\n            <div className=\"panel panel-default\">\n              <div className=\"panel-heading with-border\" style={{ \"backgroundColor\": \"#515e73\", color: \"white\" }}>\n                <h3 className=\"panel-title\">My Recent Applications</h3>\n              </div>\n              <RecentApplciations />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class Layout extends Component {\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <section className=\"content\">\n          <div className=\"container-fluid\">\n            {this.props.children}\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { Modal, Alert, Button } from \"react-bootstrap\";\nimport { toast } from 'react-toastify'\nimport { deleteEmployee } from '../utils/localStorage'\n\nexport default class DeleteModal extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            redirect: false\n        }\n    }\n\n    onDelete = (event) => {\n        event.preventDefault()\n\n        try {\n            deleteEmployee(this.props.data.id);\n            this.setState({redirect: true});\n            toast.success(\"Employee deleted successfully!\");\n        } catch (err) {\n            toast.error(\"Failed to delete employee: \" + err.message);\n        }\n    }\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        {this.state.redirect ? (<Redirect to=\"/employee-list\" />) : (<></>)}\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Warning\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            Are you sure you want to delete Employee: {this.props.data.fullName}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={this.onDelete}>Delete</Button>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Badge, Button, Form, Modal } from \"react-bootstrap\";\nimport {Redirect} from 'react-router-dom'\nimport MaterialTable from 'material-table'\nimport DeleteModal from './DeleteModal'\nimport { getEmployees, deleteEmployee } from '../utils/localStorage'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nexport default class EmployeeList extends Component {\n  \n  constructor(props) {\n    super(props)\n\n    this.state = {\n      users: [],\n      selectedUser: null,\n      viewRedirect: false,\n      editRedirect: false,\n      deleteModal: false\n    }\n  }\n\n  componentDidMount() {\n    const employees = getEmployees();\n    // Transform data to match expected format\n    const transformedEmployees = employees.map(emp => ({\n      id: emp.id,\n      fullName: `${emp.firstName} ${emp.lastName}`,\n      department: { departmentName: emp.department },\n      jobs: [{ jobTitle: emp.position, startDate: emp.hireDate, endDate: '2030-12-31' }],\n      user_personal_info: { mobile: emp.phone || 'N/A' },\n      active: emp.status === 'active',\n      status: emp.status || 'inactive'\n    }));\n    this.setState({ users: transformedEmployees });\n  }\n\n  onView = (user) => {\n    return (event) => {\n      event.preventDefault()\n\n      this.setState({selectedUser: user, viewRedirect: true})\n    } \n  }\n\n  onEdit = (user) => {\n    return (event) => {\n      event.preventDefault()\n\n      this.setState({selectedUser: user, editRedirect: true})\n    }\n  }\n\n  onDelete = user => {\n    return event => {\n      event.preventDefault()\n\n      this.setState({selectedUser: user, deleteModal: true})\n    }\n  }\n\n  render() {\n\n    let closeDeleteModel = () => this.setState({deleteModal: false})\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-4\">\n        {this.state.viewRedirect ? (<Redirect to={{pathname: '/employee-view', state: {selectedUser: this.state.selectedUser}}}></Redirect>) : (<></>)}\n        {this.state.editRedirect ? (<Redirect to={{pathname: '/employee-edit', state: {selectedUser: this.state.selectedUser}}}></Redirect>) : (<></>)}\n        {this.state.deleteModal ? (\n          <DeleteModal show={true} onHide={closeDeleteModel} data={this.state.selectedUser} />\n        ) :(<></>)}\n        <h4>\n          <a className=\"fa fa-plus mb-2 ml-2\" href=\"/employee-add\">\n            Add Employee\n          </a>\n        </h4>\n        <div className=\"col-sm-12\">\n          <Card>\n            <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\" }}>\n              <div className=\"panel-title\">\n                <strong>Employee List</strong>\n              </div>\n            </Card.Header>\n            <Card.Body>\n              <ThemeProvider theme={theme}>\n                <MaterialTable \n                  columns={[\n                    {title: 'EMP ID', field: 'id'},\n                    {title: 'Full Name', field: 'fullName'},\n                    {title: 'Department', field: 'department.departmentName'},\n                    {\n                      title: 'Job Title', \n                      field: 'jobs',\n                      render: rowData => (\n                        rowData.jobs.map((job, index) => {\n                          if(new Date(job.startDate).setHours(0) <= Date.now() && new Date(job.endDate).setHours(24) >= Date.now()) {\n                            return job.jobTitle\n                          }\n                        })\n                      )\n                    },\n                    {title: 'Mobile', field: 'user_personal_info.mobile'},\n                    {\n                      title: 'Status', \n                      field: 'status',\n                      render: rowData => (\n                        rowData.status === 'active' ? (\n                          <Badge pill variant=\"success\">Active</Badge>\n                        ) : (\n                          <Badge pill variant=\"warning\">Inactive</Badge>\n                        )\n                      )\n                    },\n                    {\n                      title: 'View',\n                      render: rowData => (\n                        <Form>\n                          <Button size=\"sm\" variant=\"info\" onClick={this.onView(rowData)}><i className=\"far fa-address-card\"></i></Button>\n                        </Form>\n                      )\n                    },\n                    {\n                      title: 'Action',\n                      render: rowData => (\n                        <>\n                          <Button size=\"sm\" variant=\"info\" className=\"mr-2\" onClick={this.onEdit(rowData)}><i className=\"far fa-edit\"></i>Edit</Button>\n                          {rowData.id !== JSON.parse(localStorage.getItem('user')).id ? (\n                            <Button size=\"sm\" variant=\"danger\" className=\"ml-1\" onClick={this.onDelete(rowData)}><i className=\"far fa-bin\"></i>Delete</Button>\n                          ):(<></>)}\n                        </>\n                      )\n                    }\n                  ]}\n                  data={this.state.users}\n                  options={{\n                    rowStyle: (rowData, index) => {\n                      if(index%2) {\n                        return {backgroundColor: '#f2f2f2'}\n                      }\n                    },\n                    pageSize: 10,\n                    pageSizeOptions: [10, 20, 30, 50, 75, 100]\n                  }}\n                  title=\"Employees\"\n                />\n              </ThemeProvider>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Badge, Button, Form, Modal } from \"react-bootstrap\";\nimport {Redirect} from 'react-router-dom'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { getUsers, getDepartments } from '../../utils/localStorage'\n\nexport default class EmployeeList extends Component {\n  \n  constructor(props) {\n    super(props)\n\n    this.state = {\n      users: [],\n      selectedUser: null,\n      viewRedirect: false,\n      viewSalaryRedirect: false,\n      editRedirect: false,\n      deleteModal: false\n    }\n  }\n\n  componentDidMount() {\n      let deptId = JSON.parse(localStorage.getItem('user')).departmentId\n      \n      // Use localStorage instead of axios\n      const allUsers = getUsers();\n      const departments = getDepartments();\n      \n      // Filter users by department\n      const deptUsers = allUsers.filter(user => user.departmentId == deptId);\n      \n      // Format users data to match expected structure\n      const formattedUsers = deptUsers.map(user => {\n          const department = departments.find(dept => dept.id == user.departmentId);\n          return {\n              ...user,\n              fullName: user.fullName || `${user.firstName} ${user.lastName}`,\n              department: department ? { departmentName: department.departmentName } : { departmentName: 'Unknown' },\n              user_personal_info: {\n                  mobile: user.mobile\n              },\n              active: user.active !== undefined ? user.active : 1\n          };\n      });\n      \n      this.setState({users: formattedUsers})\n  }\n\n  onView = (user) => {\n    return (event) => {\n      event.preventDefault()\n\n      this.setState({selectedUser: user, viewRedirect: true})\n    } \n  }\n\n  onSalaryView = (user) => {\n    return (event) => {\n      event.preventDefault()\n\n      this.setState({selectedUser: {user: {id: user.id}}, viewSalaryRedirect: true})\n    } \n  }\n\n  render() {\n\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-4\">\n        {this.state.viewRedirect ? (<Redirect to={{pathname: '/employee-view', state: {selectedUser: this.state.selectedUser}}}></Redirect>) : (<></>)}\n        {this.state.viewSalaryRedirect ? (<Redirect to={{pathname: '/salary-view', state: {selectedUser: this.state.selectedUser}}}></Redirect>) : (<></>)}\n        <div className=\"col-sm-12\">\n          <Card>\n            <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\" }}>\n              <div className=\"panel-title\">\n                <strong>Employee List</strong>\n              </div>\n            </Card.Header>\n            <Card.Body>\n              <ThemeProvider theme={theme}>\n                <MaterialTable \n                  columns={[\n                    {title: 'EMP ID', field: 'id'},\n                    {title: 'Full Name', field: 'fullName'},\n                    {title: 'Department', field: 'department.departmentName'},\n                    {\n                      title: 'Job Title', \n                      field: 'jobs',\n                      render: rowData => (\n                        rowData.jobs && rowData.jobs.map((job, index) => {\n                          if(new Date(job.startDate).setHours(0) <= Date.now() && new Date(job.endDate).setHours(24) >= Date.now()) {\n                            return job.jobTitle\n                          }\n                          return null;\n                        })\n                      )\n                    },\n                    {title: 'Mobile', field: 'user_personal_info.mobile'},\n                    {\n                      title: 'Status', \n                      field: 'active',\n                      render: rowData => (\n                        rowData.active ? (\n                          <Badge pill variant=\"success\">Active</Badge>\n                        ) : (\n                          <Badge pill variant=\"danger\">Inactive</Badge>\n                        )\n                      )\n                    },\n                    {\n                      title: 'View',\n                      render: rowData => (\n                        <Form>\n                          <Button size=\"sm\" variant=\"info\" onClick={this.onView(rowData)}><i className=\"far fa-address-card\"></i></Button>\n                          <Button className=\"ml-2\" size=\"sm\" variant=\"info\" onClick={this.onSalaryView(rowData)}><i className=\"fas fa-money-bill-wave\"></i></Button>\n                        </Form>\n                      )\n                    }\n                  ]}\n                  data={this.state.users}\n                  options={{\n                    rowStyle: (rowData, index) => {\n                      if(index%2) {\n                        return {backgroundColor: '#f2f2f2'}\n                      }\n                    },\n                    pageSize: 10,\n                    pageSizeOptions: [10, 20, 30, 50, 75, 100]\n                  }}\n                  title=\"Employees\"\n                />\n              </ThemeProvider>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport DatePicker from \"react-datepicker\";\nimport moment from \"moment\";\nimport { getDepartments, addUser } from '../utils/localStorage';\n\nexport default class EmployeeAdd extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fistname: \"\",\n      lastname: \"\",\n      dateOfBirth: \"\",\n      gender: \"\",\n      maritalStatus: \"\",\n      fathername: \"\",\n      idNumber: \"\",\n      bankName: \"\",\n      accountName: \"\",\n      accountNumber: \"\",\n      iBan: \"\",\n      address: \"\",\n      country: \"\",\n      city: \"\",\n      mobile: null,\n      phone: null,\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      role: \"\",\n      department: \"\",\n      departmentId: null,\n      startDate: \"\",\n      endDate: \"\",\n      departments: [],\n      jobTitle: null,\n      joiningDate: \"\",\n      file: null,\n      hasError: false,\n      errMsg: \"\",\n      completed: false,\n    };\n  }\n\n  componentDidMount() {\n    const departments = getDepartments();\n    this.setState({ departments: departments });\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  fileSelectedHandler = (event) => {\n    this.setState({\n      file: event.target.files[0],\n    });\n  };\n\n  onSubmit = (e) => {\n    this.setState({ hasError: false, errorMsg: \"\", completed: false });\n\n    let user = {\n      username: this.state.username,\n      password: 1234,\n      fullname: this.state.fistname + \" \" + this.state.lastname,\n      role: this.state.role,\n      departmentId: this.state.departmentId,\n      active: 1,\n    };\n\n    e.preventDefault();\n    \n    try {\n      const newUser = {\n        ...user,\n        id: Date.now(),\n        dateOfBirth: this.state.dateOfBirth,\n        gender: this.state.gender,\n        maritalStatus: this.state.maritalStatus,\n        fatherName: this.state.fathername,\n        idNumber: this.state.idNumber,\n        address: this.state.address,\n        city: this.state.city,\n        country: this.state.country,\n        mobile: this.state.mobile,\n        phone: this.state.phone,\n        emailAddress: this.state.email,\n        bankName: this.state.bankName,\n        accountName: this.state.accountName,\n        accountNumber: this.state.accountNumber,\n        iban: this.state.iBan\n      };\n\n      addUser(newUser);\n      toast.success(\"Employee has been added successfully!\");\n      // Reset form\n      this.setState({\n        fistname: \"\",\n        lastname: \"\",\n        dateOfBirth: \"\",\n        gender: \"\",\n        maritalStatus: \"\",\n        fathername: \"\",\n        idNumber: \"\",\n        bankName: \"\",\n        accountName: \"\",\n        accountNumber: \"\",\n        iBan: \"\",\n        address: \"\",\n        country: \"\",\n        city: \"\",\n        mobile: null,\n        phone: null,\n        email: \"\",\n        username: \"\",\n        password: \"\",\n        role: \"\",\n        department: \"\",\n        departmentId: null,\n        startDate: \"\",\n        endDate: \"\",\n        jobTitle: null,\n        joiningDate: \"\",\n        file: null,\n      });\n    } catch (err) {\n      toast.error(\"Error adding employee: \" + err.message);\n    }\n  };\n\n  pushDepartments = () => {\n    let items = [];\n    this.state.departments.map((dept, index) => {\n      items.push(\n        <option key={index} value={dept.id}>\n          {dept.departmentName}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <div className=\"row\">\n          {/* Main Card */}\n          <Card className=\"col-sm-12 main-card\">\n            <Card.Header>\n              <b>Add Employee</b>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"row\">\n                {/* Personal Details Card */}\n                <div className=\"col-sm-6\">\n                  <Card className=\"secondary-card\">\n                    <Card.Header>Personal Details</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        <Form.Group controlId=\"formFirstName\">\n                          <Form.Label className=\"text-muted required\">\n                            First Name\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter first Name\"\n                            name=\"fistname\"\n                            value={this.state.fistname}\n                            onChange={this.handleChange}\n                            required\n                          />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formLastName\">\n                          <Form.Label className=\"text-muted required\">\n                            Last Name\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter last Name\"\n                            name=\"lastname\"\n                            value={this.state.lastname}\n                            onChange={this.handleChange}\n                            required\n                          />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formDateofBirth\">\n                          <Form.Label className=\"text-muted required\">\n                            Date of Birth\n                          </Form.Label>\n                          <Form.Row>\n                            <DatePicker\n                              selected={this.state.dateOfBirth}\n                              onChange={(dateOfBirth) =>\n                                this.setState({ dateOfBirth })\n                              }\n                              showMonthDropdown\n                              showYearDropdown\n                              dropdownMode=\"select\"\n                              timeFormat=\"HH:mm\"\n                              name=\"dateOfBirth\"\n                              timeIntervals={30}\n                              timeCaption=\"time\"\n                              dateFormat=\"yyyy-MM-dd\"\n                              className=\"form-control ml-1\"\n                              placeholderText=\"Select Date Of Birth\"\n                              autoComplete=\"off\"\n                              required\n                            />\n                          </Form.Row>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formGender\">\n                          <Form.Label className=\"text-muted required\">\n                            Gender\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            value={this.state.gender}\n                            onChange={this.handleChange}\n                            name=\"gender\"\n                            required\n                          >\n                            <option value=\"\">Choose...</option>\n                            <option value=\"male\">Male</option>\n                            <option value=\"female\">Female</option>\n                          </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formMaritalStatus\">\n                          <Form.Label className=\"text-muted required\">\n                            Marital Status\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            value={this.state.maritalStatus}\n                            onChange={this.handleChange}\n                            name=\"maritalStatus\"\n                            required\n                          >\n                            <option value=\"\">Choose...</option>\n                            <option value=\"married\">Married</option>\n                            <option value=\"single\">Single</option>\n                          </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formFatherName\">\n                          <Form.Label className=\"text-muted required\">\n                            Father's name\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Father's Name\"\n                            name=\"fathername\"\n                            value={this.state.fathername}\n                            onChange={this.handleChange}\n                            required\n                          />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formId\">\n                          <Form.Label className=\"text-muted required\">\n                            ID Number\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter ID Number\"\n                            name=\"idNumber\"\n                            value={this.state.idNumber}\n                            onChange={this.handleChange}\n                            required\n                          />\n                        </Form.Group>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Card className=\"secondary-card\">\n                    <Card.Header>Contact Details</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        <Form.Group controlId=\"formPhysicalAddress\">\n                          <Form.Label className=\"text-muted required\">\n                            Physical Address\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.address}\n                            onChange={this.handleChange}\n                            name=\"address\"\n                            placeholder=\"Enter Address\"\n                            required\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formCountry\">\n                          <Form.Label className=\"text-muted required\">\n                            Country\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.country}\n                            onChange={this.handleChange}\n                            name=\"country\"\n                            placeholder=\"Enter Country\"\n                            required\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formCity\">\n                          <Form.Label className=\"text-muted required\">\n                            City\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.city}\n                            onChange={this.handleChange}\n                            name=\"city\"\n                            placeholder=\"Enter City\"\n                            required\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formMobile\">\n                          <Form.Label className=\"text-muted required\">\n                            Mobile\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.mobile}\n                            onChange={this.handleChange}\n                            name=\"mobile\"\n                            placeholder=\"Enter Mobile\"\n                            required\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formPhone\">\n                          <Form.Label className=\"text-muted\">Phone</Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.phone}\n                            onChange={this.handleChange}\n                            name=\"phone\"\n                            placeholder=\"Enter Phone\"\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formEmail\">\n                          <Form.Label className=\"text-muted required\">\n                            Email\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            name=\"email\"\n                            placeholder=\"Enter Email\"\n                            required\n                          />\n                        </Form.Group>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-6\">\n                  <Card className=\"secondary-card\">\n                    <Card.Header>Bank Information</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        <Form.Group controlId=\"formBankName\">\n                          <Form.Label className=\"text-muted\">\n                            Bank Name\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.bankName}\n                            onChange={this.handleChange}\n                            name=\"bankName\"\n                            placeholder=\"Enter Bank name\"\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formAccountName\">\n                          <Form.Label className=\"text-muted\">\n                            Account Name\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.accountName}\n                            onChange={this.handleChange}\n                            name=\"accountName\"\n                            placeholder=\"Enter Account name\"\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formAccountNumber\">\n                          <Form.Label className=\"text-muted\">\n                            Account Number\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.accountNumber}\n                            onChange={this.handleChange}\n                            name=\"accountNumber\"\n                            placeholder=\"Enter Account number\"\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formIban\">\n                          <Form.Label className=\"text-muted\">iBan</Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.iBan}\n                            onChange={this.handleChange}\n                            name=\"iBan\"\n                            placeholder=\"Enter Iban\"\n                          />\n                        </Form.Group>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Card className=\"secondary-card\">\n                    <Card.Header>Official Status</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        <Form.Group controlId=\"formEmployeeId\">\n                          <Form.Label className=\"text-muted required\">\n                            Employee ID\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.username}\n                            onChange={this.handleChange}\n                            name=\"username\"\n                            placeholder=\"Enter Username\"\n                            required\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formPassword\">\n                          <Form.Label className=\"text-muted required\">\n                            Password\n                          </Form.Label>\n                          <Form.Control\n                            type=\"password\"\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                            name=\"password\"\n                            placeholder=\"Enter Password\"\n                            required\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formDepartment\">\n                          <Form.Label className=\"text-muted required\">\n                            Department\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            value={this.state.departmentId}\n                            onChange={this.handleChange}\n                            name=\"departmentId\"\n                            required\n                          >\n                            <option value=\"\" defaultValue>\n                              Choose...\n                            </option>\n                            {this.pushDepartments()}\n                          </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"formRole\">\n                          <Form.Label className=\"text-muted required\">\n                            Role\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            value={this.state.role}\n                            onChange={this.handleChange}\n                            name=\"role\"\n                            required\n                          >\n                            <option value=\"\">Choose...</option>\n                            <option value=\"ROLE_ADMIN\">Admin</option>\n                            <option value=\"ROLE_MANAGER\">Manager</option>\n                            <option value=\"ROLE_EMPLOYEE\">Employee</option>\n                          </Form.Control>\n                        </Form.Group>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                  <Button variant=\"primary\" type=\"submit\" block>\n                    Submit\n                  </Button>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-6\">\n                  <Card className=\"secondary-card\">\n                    <Card.Header>Job</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        <Form.Group controlId=\"formJobTitle\">\n                          <Form.Label className=\"text-muted required\">\n                            Job Title\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.jobTitle}\n                            onChange={this.handleChange}\n                            name=\"jobTitle\"\n                            placeholder=\"Enter Job Title\"\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formJobStart\">\n                          <Form.Label className=\"text-muted required\">\n                            Start Date\n                          </Form.Label>\n                          <Form.Row>\n                            <DatePicker\n                              selected={this.state.startDate}\n                              onChange={(startDate) =>\n                                this.setState({ startDate })\n                              }\n                              dropdownMode=\"select\"\n                              timeFormat=\"HH:mm\"\n                              name=\"startDate\"\n                              timeCaption=\"time\"\n                              dateFormat=\"yyyy-MM-dd\"\n                              className=\"form-control ml-1\"\n                              placeholderText=\"Select Date Of Birth\"\n                              autoComplete=\"off\"\n                              required\n                            />\n                          </Form.Row>\n                        </Form.Group>\n                        <Form.Group controlId=\"formJobEnd\">\n                          <Form.Label className=\"text-muted required\">\n                            End Date\n                          </Form.Label>\n                          <Form.Row>\n                            <DatePicker\n                              selected={this.state.endDate}\n                              onChange={(endDate) => this.setState({ endDate })}\n                              dropdownMode=\"select\"\n                              timeFormat=\"HH:mm\"\n                              name=\"endDate\"\n                              timeCaption=\"time\"\n                              dateFormat=\"yyyy-MM-dd\"\n                              className=\"form-control ml-1\"\n                              placeholderText=\"Select Date Of Birth\"\n                              autoComplete=\"off\"\n                            />\n                          </Form.Row>\n                        </Form.Group>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </div>\n      </Form>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Row, Col, Form } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport { getUsers } from '../utils/localStorage'\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {},\n      department: {\n        departmentName: null\n      },\n      job: {\n        jobTitle: null,\n      },\n      userPersonalInfo: {\n        dateOfBirth: null,\n        gender: null,\n        maritalStatus: null,\n        fatherName: null,\n        country: null,\n        address: null,\n        mobile: null,\n        emailAddress: null\n      },\n      userFinancialInfo: {\n        bankName: null,\n        accountName: null,\n        accountNumber: null,\n        iban: null\n      },\n      falseRedirect: false,\n      editRedirect: false\n    };\n  }\n\n  componentDidMount() {\n      if(this.props.location.state) {\n          // Use localStorage instead of axios\n          const allUsers = getUsers();\n          const user = allUsers.find(u => u.id == this.props.location.state.selectedUser.id);\n          \n          if (user) {\n              this.setState({user: user}, () => {\n                  // Simulate job data if needed\n                  if(user.jobs) {\n                      let jobs = user.jobs\n                      jobs.map(job => {\n                          if(new Date(job.startDate) <= Date.now() && new Date(job.endDate) >= Date.now()) {\n                              this.setState({job: job})\n                          }\n                      })\n                  }\n                  // Simulate department data if needed\n                  if(user.department) {\n                      this.setState({department: user.department})\n                  }\n                  // Simulate personal info if needed\n                  if(user.user_personal_info) {\n                      if(user.user_personal_info.dateOfBirth) {\n                          user.user_personal_info.dateOfBirth = moment(user.user_personal_info.dateOfBirth).format('D MMM YYYY')\n                      }\n                      this.setState({userPersonalInfo: user.user_personal_info})\n                  }\n                  // Simulate financial info if needed\n                  if(user.user_financial_info) {\n                      this.setState({userFinancialInfo: user.user_financial_info})\n                  }\n              })\n          } else {\n              this.setState({falseRedirect: true})\n          }\n      } else {\n          this.setState({falseRedirect: true})\n      }\n  }\n\n  onEdit = () => {\n    this.setState({editRedirect: true})\n  }\n\n  render() {\n    return (\n        <div className=\"container-fluid pt-3\">\n            {this.state.falseRedirect ? <Redirect to=\"/\" /> : (<></>)}\n            {this.state.editRedirect ? (<Redirect to={{pathname: \"/employee-edit\", state: {selectedUser: this.state.user}}} />) : null}\n            <Row>\n                <Col sm={12}>\n                    <Card>\n                        <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\", fontSize: '17px' }}>Employee Detail <Form className=\"float-right\"><span style={{cursor: 'pointer'}} onClick={this.onEdit}><i className=\"far fa-edit\"></i> Edit</span></Form></Card.Header>\n                        <Card.Body>\n                            <Card.Title><strong>{this.state.user.fullName}</strong></Card.Title>\n                            <Card.Text>\n                                <Col lg={12}>\n                                    <Row className=\"pt-4\">\n                                        <Col lg={3}>\n                                            <img className=\"img-circle elevation-1 bp-2\" src={process.env.PUBLIC_URL + '/user-128.png'}></img>\n                                        </Col>\n                                        <Col className=\"pt-4\" lg={9}>\n                                            <div className=\"emp-view-list\">\n                                                <ul>\n                                                    <li><span>Employee ID: </span> {this.state.user.id}</li>\n                                                    <li><span>Department: </span> {this.state.department.departmentName}</li>\n                                                    <li><span>Job Title: </span> {this.state.job.jobTitle}</li>\n                                                    <li><span>Role: </span>{this.state.user.role==='ROLE_ADMIN' ? 'Admin' : this.state.user.role==='ROLE_MANAGER' ? 'Manager' : 'Employee'}</li>\n                                                </ul>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col sm={6}>\n                                            <Card className=\"secondary-card emp-view\">\n                                                <Card.Header>Personal Details</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text id=\"emp-view-personal\">\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Date of Birth: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.dateOfBirth}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Gender: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.gender}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Marital Status: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.maritalStatus}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Father's Name: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.fatherName}\n                                                            </span>\n                                                        </Form.Group>\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <Card className=\"secondary-card emp-view\">\n                                                <Card.Header>Contact Details</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text id=\"emp-view-contact\">\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Location: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.country}, {this.state.userPersonalInfo.city}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Address: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.address}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Mobile: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.mobile} {this.state.userPersonalInfo.phone ? (' (' + this.state.userPersonalInfo.phone + ')') : null} \n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Email Address: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.emailAddress}\n                                                            </span>\n                                                        </Form.Group>\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col cm={6}>\n                                            <Card className=\"secondary-card\">\n                                                <Card.Header>Bank Information</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text id=\"emp-view-bank\">\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Bank Name: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.bankName}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Account Name: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.accountName}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Mobile: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.accountNumber}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                IBAN: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.iban}\n                                                            </span>\n                                                        </Form.Group>\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                        <Col sm={6}>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Row, Col, Form } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport { getUsers, getDepartments } from '../../utils/localStorage'\n\nexport default class EmployeeViewEmployee extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {},\n      department: {\n        departmentName: null\n      },\n      job: {\n        jobTitle: null,\n      },\n      userPersonalInfo: {\n        dateOfBirth: null,\n        gender: null,\n        maritalStatus: null,\n        fatherName: null,\n        country: null,\n        address: null,\n        mobile: null,\n        emailAddress: null\n      },\n      userFinancialInfo: {\n        bankName: null,\n        accountName: null,\n        accountNumber: null,\n        iban: null\n      },\n      falseRedirect: false,\n      editRedirect: false\n    };\n  }\n\n  componentDidMount() {\n        // Use localStorage instead of axios\n        const allUsers = getUsers();\n        const departments = getDepartments();\n        \n        const userId = JSON.parse(localStorage.getItem('user')).id;\n        const user = allUsers.find(u => u.id == userId);\n        \n        if (user) {\n            this.setState({user: user}, () => {\n                // Set department info\n                const department = departments.find(dept => dept.id == user.departmentId);\n                if (department) {\n                    this.setState({department: { departmentName: department.departmentName }});\n                }\n                \n                // Set current job\n                if(user.jobs) {\n                    let jobs = user.jobs\n                    jobs.map(job => {\n                        if(new Date(job.startDate) <= Date.now() && new Date(job.endDate) >= Date.now()) {\n                            this.setState({job: { jobTitle: job.jobTitle }})\n                        }\n                    })\n                }\n                \n                // Set personal info\n                if(user.dateOfBirth || user.gender || user.maritalStatus || user.fatherName || \n                   user.country || user.city || user.address || user.mobile || user.email) {\n                    this.setState({\n                        userPersonalInfo: {\n                            dateOfBirth: user.dateOfBirth ? moment(user.dateOfBirth).format('D MMM YYYY') : null,\n                            gender: user.gender,\n                            maritalStatus: user.maritalStatus,\n                            fatherName: user.fatherName,\n                            country: user.country,\n                            city: user.city,\n                            address: user.address,\n                            mobile: user.mobile,\n                            emailAddress: user.email\n                        }\n                    });\n                }\n                \n                // Set financial info\n                if(user.bankName || user.accountName || user.accountNumber || user.iban) {\n                    this.setState({\n                        userFinancialInfo: {\n                            bankName: user.bankName,\n                            accountName: user.accountName,\n                            accountNumber: user.accountNumber,\n                            iban: user.iban\n                        }\n                    });\n                }\n            })\n        }\n  }\n\n\n  render() {\n    return (\n        <div className=\"container-fluid pt-3\">\n            <Row>\n                <Col sm={12}>\n                    <Card>\n                        <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\", fontSize: '17px' }}>My Profile</Card.Header>\n                        <Card.Body>\n                            <Card.Title><strong>{this.state.user.fullName || `${this.state.user.firstName} ${this.state.user.lastName}`}</strong></Card.Title>\n                            <Card.Text>\n                                <Col lg={12}>\n                                    <Row className=\"pt-4\">\n                                        <Col lg={3}>\n                                            <img className=\"img-circle elevation-1 bp-2\" src={process.env.PUBLIC_URL + '/user-128.png'}></img>\n                                        </Col>\n                                        <Col className=\"pt-4\" lg={9}>\n                                            <div className=\"emp-view-list\">\n                                                <ul>\n                                                    <li><span>Employee ID: </span> {this.state.user.id}</li>\n                                                    <li><span>Department: </span> {this.state.department.departmentName}</li>\n                                                    <li><span>Job Title: </span> {this.state.job.jobTitle}</li>\n                                                    <li><span>Role: </span>{this.state.user.role==='ROLE_ADMIN' ? 'Admin' : this.state.user.role==='ROLE_MANAGER' ? 'Manager' : 'Employee'}</li>\n                                                </ul>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col sm={6}>\n                                            <Card className=\"secondary-card emp-view\">\n                                                <Card.Header>Personal Details</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text id=\"emp-view-personal\">\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Date of Birth: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.dateOfBirth}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Gender: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.gender}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Marital Status: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.maritalStatus}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Father's Name: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.fatherName}\n                                                            </span>\n                                                        </Form.Group>\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <Card className=\"secondary-card emp-view\">\n                                                <Card.Header>Contact Details</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text id=\"emp-view-contact\">\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Location: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.country}, {this.state.userPersonalInfo.city}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Address: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.address}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Mobile: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.mobile} {this.state.userPersonalInfo.phone ? (' (' + this.state.userPersonalInfo.phone + ')') : null} \n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Email Address: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.emailAddress}\n                                                            </span>\n                                                        </Form.Group>\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col cm={6}>\n                                            <Card className=\"secondary-card\">\n                                                <Card.Header>Bank Information</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text id=\"emp-view-bank\">\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Bank Name: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.bankName}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Account Name: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.accountName}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Account Number: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.accountNumber}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                IBAN: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.iban}\n                                                            </span>\n                                                        </Form.Group>\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                        <Col sm={6}>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Row, Col, Form, Button } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport { getUsers, getDepartments } from '../../utils/localStorage'\n\nexport default class EmployeeView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {\n        id: null,\n        fullName: null,\n        role: null\n      },\n      department: {\n        departmentName: null\n      },\n      job: {\n        jobTitle: null\n      },\n      userPersonalInfo: {\n        dateOfBirth: null,\n        gender: null,\n        maritalStatus: null,\n        fatherName: null,\n        country: null,\n        city: null,\n        address: null,\n        mobile: null,\n        phone: null,\n        emailAddress: null\n      },\n      userFinancialInfo: {\n        bankName: null,\n        accountName: null,\n        accountNumber: null,\n        iban: null\n      },\n      falseRedirect: false,\n      editRedirect: false\n    };\n  }\n\n  componentDidMount() {\n      if(this.props.location.state) {\n          // Use localStorage instead of axios\n          const allUsers = getUsers();\n          const departments = getDepartments();\n          \n          const user = allUsers.find(u => u.id == this.props.location.state.selectedUser.id);\n          \n          if (user) {\n              this.setState({user: user}, () => {\n                  // Set department info\n                  const department = departments.find(dept => dept.id == user.departmentId);\n                  if (department) {\n                      this.setState({department: { departmentName: department.departmentName }});\n                  }\n                  \n                  // Set job info (if available)\n                  if(user.jobs) {\n                      let jobs = user.jobs\n                      jobs.map(job => {\n                          if(new Date(job.startDate) <= Date.now() && new Date(job.endDate) >= Date.now()) {\n                              this.setState({job: { jobTitle: job.jobTitle }})\n                          }\n                      })\n                  }\n                  \n                  // Set personal info\n                  if(user.dateOfBirth || user.gender || user.maritalStatus || user.fatherName || \n                     user.country || user.city || user.address || user.mobile || user.phone || user.email) {\n                      this.setState({\n                          userPersonalInfo: {\n                              dateOfBirth: user.dateOfBirth ? moment(user.dateOfBirth).format('D MMM YYYY') : null,\n                              gender: user.gender,\n                              maritalStatus: user.maritalStatus,\n                              fatherName: user.fatherName,\n                              country: user.country,\n                              city: user.city,\n                              address: user.address,\n                              mobile: user.mobile,\n                              phone: user.phone,\n                              emailAddress: user.email\n                          }\n                      });\n                  }\n                  \n                  // Set financial info\n                  if(user.bankName || user.accountName || user.accountNumber || user.iban) {\n                      this.setState({\n                          userFinancialInfo: {\n                              bankName: user.bankName,\n                              accountName: user.accountName,\n                              accountNumber: user.accountNumber,\n                              iban: user.iban\n                          }\n                      });\n                  }\n              })\n          } else {\n              this.setState({falseRedirect: true})\n          }\n      } else {\n          this.setState({falseRedirect: true})\n      }\n  }\n\n  onEdit = () => {\n    this.setState({editRedirect: true})\n  }\n\n  render() {\n    return (\n        <div className=\"container-fluid pt-3\">\n            {this.state.falseRedirect ? <Redirect to=\"/\" /> : (<></>)}\n            {this.state.editRedirect ? (<Redirect to={{pathname: \"/employee-edit\", state: {selectedUser: this.state.user}}} />) : null}\n            <Row>\n                <Col sm={12}>\n                    <Card>\n                        <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\", fontSize: '17px' }}>Employee Detail </Card.Header>\n                        <Card.Body>\n                            <Card.Title><strong>{this.state.user.fullName || `${this.state.user.firstName} ${this.state.user.lastName}`}</strong></Card.Title>\n                            <Card.Text>\n                                <Col lg={12}>\n                                    <Row className=\"pt-4\">\n                                        <Col lg={3}>\n                                            <img className=\"img-circle elevation-1 bp-2\" src={process.env.PUBLIC_URL + '/user-128.png'}></img>\n                                        </Col>\n                                        <Col className=\"pt-4\" lg={9}>\n                                            <div className=\"emp-view-list\">\n                                                <ul>\n                                                    <li><span>Employee ID: </span> {this.state.user.id}</li>\n                                                    <li><span>Department: </span> {this.state.department.departmentName}</li>\n                                                    <li><span>Job Title: </span> {this.state.job.jobTitle}</li>\n                                                    <li><span>Role: </span>{this.state.user.role==='ROLE_ADMIN' ? 'Admin' : this.state.user.role==='ROLE_MANAGER' ? 'Manager' : 'Employee'}</li>\n                                                </ul>\n                                            </div>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col sm={6}>\n                                            <Card className=\"secondary-card emp-view\">\n                                                <Card.Header>Personal Details</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text id=\"emp-view-personal\">\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Date of Birth: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.dateOfBirth}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Gender: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.gender}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Marital Status: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.maritalStatus}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Father's Name: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.fatherName}\n                                                            </span>\n                                                        </Form.Group>\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                        <Col sm={6}>\n                                            <Card className=\"secondary-card emp-view\">\n                                                <Card.Header>Contact Details</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text id=\"emp-view-contact\">\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Location: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.country}, {this.state.userPersonalInfo.city}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Address: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.address}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Mobile: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.mobile} {this.state.userPersonalInfo.phone ? (' (' + this.state.userPersonalInfo.phone + ')') : null} \n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Email Address: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userPersonalInfo.emailAddress}\n                                                            </span>\n                                                        </Form.Group>\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col cm={6}>\n                                            <Card className=\"secondary-card\">\n                                                <Card.Header>Bank Information</Card.Header>\n                                                <Card.Body>\n                                                    <Card.Text id=\"emp-view-bank\">\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Bank Name: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.bankName}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Account Name: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.accountName}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                Account Number: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.accountNumber}\n                                                            </span>\n                                                        </Form.Group>\n                                                        <Form.Group as={Row}>\n                                                            <Form.Label className=\"label\">\n                                                                IBAN: \n                                                            </Form.Label>\n                                                            <span>\n                                                                {this.state.userFinancialInfo.iban}\n                                                            </span>\n                                                        </Form.Group>\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Form, Button, Alert } from \"react-bootstrap\";\nimport { Redirect, NavLink } from 'react-router-dom'\nimport DatePicker from \"react-datepicker\";\nimport moment from 'moment'\nimport { getDepartments, getUsers, updateUserInStorage } from '../utils/localStorage'\n\nexport default class EmployeeEdit extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        user: {\n            id: null,\n            fullName: '',\n            role: null,\n            active: null,\n            departmentId: null\n        },\n        userPersonalInfo: {\n            id: null,\n            dateOfBirth: null,\n            gender: '',\n            maritalStatus: '',\n            fatherName: '',\n            idNumber: '',\n            address: '',\n            city: '',\n            country: '',\n            mobile: '',\n            phone: null,\n            emailAddress: ''\n        },\n        userFinancialInfo: {\n            id: null,\n            bankName: '',\n            accountName: '',\n            accountNumber: '',\n            iban: ''\n        },\n        department: {\n          departmentId: null,\n          departmentName: null\n        },\n        departments: [],\n        job: {\n          id: null,\n          jobTitle: null,\n          startDate: null,\n          endDate: null\n        },\n        hasError: false,\n        errMsg: \"\",\n        completed: false,\n        falseRedirect: false\n    };\n  }\n\n  componentDidMount() {\n      if(this.props.location.state) {\n          const users = getUsers();\n          const user = users.find(u => u.id == this.props.location.state.selectedUser.id);\n          \n          if(user) {\n              this.setState({\n                  user: {\n                      id: user.id,\n                      fullName: user.fullName || `${user.firstName} ${user.lastName}`,\n                      role: user.role,\n                      active: user.active,\n                      departmentId: user.departmentId\n                  },\n                  userPersonalInfo: {\n                      dateOfBirth: user.dateOfBirth ? moment(user.dateOfBirth).toDate() : null,\n                      gender: user.gender || '',\n                      maritalStatus: user.maritalStatus || '',\n                      fatherName: user.fatherName || '',\n                      idNumber: user.idNumber || '',\n                      address: user.address || '',\n                      city: user.city || '',\n                      country: user.country || '',\n                      mobile: user.mobile || '',\n                      phone: user.phone || '',\n                      emailAddress: user.emailAddress || user.email || ''\n                  },\n                  userFinancialInfo: {\n                      bankName: user.bankName || '',\n                      accountName: user.accountName || '',\n                      accountNumber: user.accountNumber || '',\n                      iban: user.iban || ''\n                  }\n              });\n          }\n\n          const departments = getDepartments();\n          this.setState({departments: departments});\n      } else {\n          this.setState({falseRedirect: true})\n      }\n  }\n\n  handleChangeUser = (event) => {\n    const { value, name } = event.target;\n    this.setState(prevState => ({\n      user: {\n        ...prevState.user,\n        [name]: value\n      },\n    }));\n  };\n\n  handleChangeJob = (event) => {\n    const { value, name } = event.target;\n    this.setState(prevState => ({\n      job : {\n        ...prevState.job,\n        [name]: value\n      },\n    }));\n  };\n\n  handleChangeDepartment = (event) => {\n    const { value, name } = event.target;\n    this.setState(prevState => ({\n      department: {\n        ...prevState.department,\n        [name]: value\n      },\n    }));\n  };\n\n  handleChangeUserPersonal = (event) => {\n    const { value, name } = event.target;\n    this.setState(prevState => ({\n      userPersonalInfo: {\n        ...prevState.userPersonalInfo,\n        [name]: value\n      },\n    }));\n  };\n\n  handleChangeUserFinancial = (event) => {\n    const { value, name } = event.target;\n    this.setState(prevState => ({\n      userFinancialInfo: {\n        ...prevState.userFinancialInfo,\n        [name]: value\n      },\n    }));\n  };\n\n  pushDepartments = () => {\n    let items= []\n    this.state.departments.map((dept, index) => {\n      items.push(<option key={index} value={dept.id}>{dept.departmentName}</option>)\n    })\n    return items;\n  }\n\n  onSubmit = (e) => {\n\n    e.preventDefault()\n\n    this.setState({hasError: false, errorMsg: \"\", completed: false})\n\n    let user = {\n      fullName: this.state.user.fullName, \n      role: this.state.user.role,\n      departmentId: this.state.user.departmentId,\n      active: this.state.user.active\n    }\n\n    try {\n      const updatedUser = {\n        ...user,\n        id: this.state.user.id,\n        dateOfBirth: this.state.userPersonalInfo.dateOfBirth ? moment(this.state.userPersonalInfo.dateOfBirth).format('YYYY-MM-DD') : null,\n        gender: this.state.userPersonalInfo.gender,\n        maritalStatus: this.state.userPersonalInfo.maritalStatus,\n        fatherName: this.state.userPersonalInfo.fatherName,\n        idNumber: this.state.userPersonalInfo.idNumber,\n        address: this.state.userPersonalInfo.address,\n        city: this.state.userPersonalInfo.city,\n        country: this.state.userPersonalInfo.country,\n        mobile: this.state.userPersonalInfo.mobile,\n        phone: this.state.userPersonalInfo.phone,\n        emailAddress: this.state.userPersonalInfo.emailAddress,\n        bankName: this.state.userFinancialInfo.bankName,\n        accountName: this.state.userFinancialInfo.accountName,\n        accountNumber: this.state.userFinancialInfo.accountNumber,\n        iban: this.state.userFinancialInfo.iban\n      };\n\n      updateUserInStorage(updatedUser);\n      this.setState({ completed: true });\n    } catch (err) {\n      this.setState({ hasError: true, errMsg: err.message });\n    }\n  }\n\n  render() {\n    if(this.state.user.id === null || this.state.userPersonalInfo.id === null || this.state.userFinancialInfo.id === null) {\n      return <p>Loading...</p>\n    }\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <div className=\"row\">\n        {this.state.falseRedirect ? (<Redirect to=\"/\" />) : null}\n          {this.state.hasError ? (\n            <Alert variant=\"danger\" className=\"m-3\" block>\n              {this.state.errMsg}\n            </Alert>\n          ): \n          this.state.completed ? (\n            <Redirect to=\"employee-list\" />\n          ) : (<></>)}\n\n          {/* Main Card */}\n          <Card className=\"col-sm-12 main-card\">\n            <Card.Header>\n              <b>Add Employee</b>\n            </Card.Header>\n            <Card.Body>\n              <div className=\"row\">\n                {/* Personal Details Card */}\n                <div className=\"col-sm-6\">\n                  <Card className=\"secondary-card\">\n                    <Card.Header>Personal Details</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        <Form.Group controlId=\"formFullName\">\n                          <Form.Label className=\"text-muted required\">\n                            Full Name\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter first Name\"\n                            name=\"fullName\"\n                            value={this.state.user.fullName}\n                            onChange={this.handleChangeUser}\n                            required\n                          />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formDateofBirth\">\n                          <Form.Label className=\"text-muted required\">\n                            Date of Birth\n                          </Form.Label>\n                          <Form.Row>\n                            <DatePicker\n                              selected={this.state.userPersonalInfo.dateOfBirth}\n                              onChange={dateOfBirth => this.setState(prevState => ({\n                                  userPersonalInfo: {\n                                    ...prevState.userPersonalInfo,\n                                    dateOfBirth: dateOfBirth\n                                  }\n                                }))}\n                              showMonthDropdown\n                              showYearDropdown\n                              dropdownMode=\"select\"\n                              name=\"dateOfBirth\"\n                              dateFormat=\"yyyy-MM-dd\"\n                              className=\"form-control ml-1\"\n                              placeholderText=\"Select Date Of Birth\"\n                              autoComplete=\"off\"\n                              required\n                            />\n                          </Form.Row>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formGender\">\n                          <Form.Label className=\"text-muted required\">\n                            Gender\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            value={this.state.userPersonalInfo.gender}\n                            onChange={this.handleChangeUserPersonal}\n                            name=\"gender\"\n                            required\n                          >\n                            <option value=\"\">Choose...</option>\n                            <option value=\"Male\">Male</option>\n                            <option value=\"Female\">Female</option>\n                          </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formMaritalStatus\">\n                          <Form.Label className=\"text-muted required\">\n                            Marital Status\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            value={this.state.userPersonalInfo.maritalStatus}\n                            onChange={this.handleChangeUserPersonal}\n                            name=\"maritalStatus\"\n                            required\n                          >\n                            <option value=\"\">Choose...</option>\n                            <option value=\"Married\">Married</option>\n                            <option value=\"Single\">Single</option>\n                          </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formFatherName\">\n                          <Form.Label className=\"text-muted required\">\n                            Father's name\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter Father's Name\"\n                            name=\"fatherName\"\n                            value={this.state.userPersonalInfo.fatherName}\n                            onChange={this.handleChangeUserPersonal}\n                            required\n                          />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formId\">\n                          <Form.Label className=\"text-muted required\">\n                            ID Number\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter ID Number\"\n                            name=\"idNumber\"\n                            value={this.state.userPersonalInfo.idNumber}\n                            onChange={this.handleChangeUserPersonal}\n                            required\n                          />\n                        </Form.Group>\n\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Card className=\"secondary-card\">\n                    <Card.Header>Contact Details</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        <Form.Group controlId=\"formPhysicalAddress\">\n                          <Form.Label className=\"text-muted required\">\n                            Physical Address\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.userPersonalInfo.address}\n                            onChange={this.handleChangeUserPersonal} \n                            name=\"address\"\n                            placeholder=\"Enter Address\"\n                            required\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formCountry\">\n                          <Form.Label className=\"text-muted required\">\n                            Country\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.userPersonalInfo.country}\n                            onChange={this.handleChangeUserPersonal}\n                            name=\"country\"\n                            placeholder=\"Enter Country\"\n                            required\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formCity\">\n                          <Form.Label className=\"text-muted required\">\n                            City\n                          </Form.Label>\n                          <Form.Control \n                            type=\"text\" \n                            value={this.state.userPersonalInfo.city}\n                            onChange={this.handleChangeUserPersonal}\n                            name=\"city\"\n                            placeholder=\"Enter City\" \n                            required\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formMobile\">\n                          <Form.Label className=\"text-muted required\">\n                            Mobile\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.userPersonalInfo.mobile}\n                            onChange={this.handleChangeUserPersonal}\n                            name=\"mobile\"\n                            placeholder=\"Enter Mobile\"\n                            required\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formPhone\">\n                          <Form.Label className=\"text-muted\">\n                            Phone\n                          </Form.Label>\n                          <Form.Control \n                            type=\"text\" \n                            value={this.state.userPersonalInfo.phone || ''}\n                            onChange={this.handleChangeUserPersonal}\n                            name=\"phone\"\n                            placeholder=\"Enter Phone\" \n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formEmail\">\n                          <Form.Label className=\"text-muted required\">\n                            Email\n                          </Form.Label>\n                          <Form.Control \n                            type=\"text\" \n                            value={this.state.userPersonalInfo.emailAddress}\n                            onChange={this.handleChangeUserPersonal}\n                            name=\"emailAddress\"\n                            placeholder=\"Enter Email\" \n                            required\n                          />\n                        </Form.Group>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"col-sm-6\">\n                  <Card className=\"secondary-card\">\n                    <Card.Header>Bank Information</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        <Form.Group controlId=\"formBankName\">\n                          <Form.Label className=\"text-muted\">\n                            Bank Name\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.userFinancialInfo.bankName}\n                            onChange={this.handleChangeUserFinancial}\n                            name=\"bankName\"\n                            placeholder=\"Enter Bank name\"\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formAccountName\">\n                          <Form.Label className=\"text-muted\">\n                            Account Name\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.userFinancialInfo.accountName}\n                            onChange={this.handleChangeUserFinancial}\n                            name=\"accountName\"\n                            placeholder=\"Enter Account name\"\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formAccountNumber\">\n                          <Form.Label className=\"text-muted\">\n                            Account Number\n                          </Form.Label>\n                          <Form.Control\n                            type=\"text\"\n                            value={this.state.userFinancialInfo.accountNumber}\n                            onChange={this.handleChangeUserFinancial}\n                            name=\"accountNumber\"\n                            placeholder=\"Enter Account number\"\n                          />\n                        </Form.Group>\n                        <Form.Group controlId=\"formIban\">\n                          <Form.Label className=\"text-muted\">IBAN </Form.Label>\n                          <Form.Control \n                            type=\"text\" \n                            value={this.state.userFinancialInfo.iban}\n                            onChange={this.handleChangeUserFinancial}\n                            name=\"iban\"\n                            placeholder=\"Enter Iban\" \n                          />\n                        </Form.Group>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                </div>\n                <div className=\"col-sm-6\">\n                  <Card className=\"secondary-card\">\n                    <Card.Header>Official Status</Card.Header>\n                    <Card.Body>\n                      <Card.Text>\n                        <Form.Group controlId=\"formEmployeeId\">\n                          <Form.Label className=\"text-muted\">\n                            Employee ID\n                          </Form.Label>\n                          <div>{this.state.user.username}</div>\n                        </Form.Group>\n                        <Form.Group controlId=\"formDepartment\">\n                          <Form.Label className=\"text-muted required\">\n                            Department\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            value={this.state.user.departmentId}\n                            onChange={this.handleChangeUser}\n                            name=\"departmentId\"\n                            required\n                          >\n                            {this.pushDepartments()}\n                          </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"formRole\">\n                          <Form.Label className=\"text-muted required\">\n                            Role\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            value={this.state.user.role || ''}\n                            onChange={this.handleChangeUser}\n                            name=\"role\"\n                            required\n                          >\n                            <option value=\"\">Choose...</option>\n                            <option value=\"ROLE_EMPLOYEE\">Employee</option>\n                            <option value=\"ROLE_MANAGER\">Manager</option>\n                            <option value=\"ROLE_ADMIN\">Admin</option>\n                          </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"formActive\">\n                          <Form.Label className=\"text-muted required\">\n                            Status\n                          </Form.Label>\n                          <Form.Control\n                            as=\"select\"\n                            value={this.state.user.active}\n                            onChange={this.handleChangeUser}\n                            name=\"active\"\n                            required\n                          >\n                            <option value=\"\">Choose...</option>\n                            <option value={false}>Inactive</option>\n                            <option value={true}>Active</option>\n                          </Form.Control>\n                        </Form.Group>\n                      </Card.Text>\n                    </Card.Body>\n                  </Card>\n                  <Button variant=\"primary\" type=\"submit\" block>\n                    Submit\n                  </Button>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </div>\n      </Form>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Form, Button } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport { Redirect } from 'react-router-dom'\nimport { addDepartment } from \"../utils/localStorage\";\n\nexport default class DepartmentAdd extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      departmentName: \"\",\n      hasError: false,\n      errMsg: \"\",\n      completed: false\n    };\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault()\n\n    this.setState({ hasError: false, errorMsg: \"\", completed: false });\n\n    let department = {\n      name: this.state.departmentName,\n      description: `${this.state.departmentName} Department`\n    };\n\n    try {\n      addDepartment(department);\n      this.setState({\n        departmentName: '',\n        hasError: false,\n        errMsg: ''\n      });\n      toast.success(\"Department added successfully!\");\n    } catch (error) {\n      toast.error(\"Failed to add department. Department might already exist.\");\n      window.scrollTo(0, 0);\n    }\n  };\n\n  render() {\n    return (\n      <Card className=\"mb-3 secondary-card\">\n          <Card.Header>\n            <b>Add Department</b>\n          </Card.Header>\n          <Card.Body>\n            <Card.Text>\n              <Form onSubmit={this.onSubmit}>\n                <Form.Group controlId=\"formDepartmentName\">\n                  <Form.Label className=\"text-muted mb-2\">\n                    Department Name\n                  </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter Department Name\"\n                        name=\"departmentName\"\n                        style={{width: \"50%\"}}\n                        value={this.state.departmentName}\n                        onChange={this.handleChange}\n                        required\n                        />\n                </Form.Group>\n                <Button variant=\"primary\" type=\"submit\" className=\"mt-2\">\n                  Add\n                </Button>\n              </Form>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport { updateDepartment } from '../utils/localStorage'\n\nexport default class AddEventModel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      departmentName: \"\",\n      id: null,\n      event: {},\n      showAlert: false,\n      errorMsg: \"\",\n      done: false\n    };\n  }\n\n  componentDidMount() {\n      this.setState({\n          departmentName: this.props.data.departmentName,\n          id:  this.props.data.id\n        })\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    let data = {\n        departmentName: this.state.departmentName\n    }\n\n    try {\n      updateDepartment(this.state.id, data);\n      this.setState({done: true});\n      toast.success(\"Department updated successfully!\");\n    } catch (err) {\n      toast.error(\"Failed to update department: \" + err.message);\n    }\n  };\n\n  render() {\n    const {showAlert, done} = this.state  \n    return (\n      <Modal\n        {...this.props}\n        size=\"sm\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Edit Department\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            {done ? <Redirect to=\"/departments\" /> : <></>}\n            <Form onSubmit={this.onSubmit}>\n                <Form.Group controlId=\"formDepartmentName\">\n                    <Form.Label className=\"mb-2\">Department Name</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        className=\"col-8\"\n                        name=\"departmentName\"\n                        value={this.state.departmentName}\n                        onChange={this.handleChange}\n                        autoComplete=\"off\"\n                        required\n                    />\n                </Form.Group>\n\n                <Button variant=\"success\" type=\"submit\" className=\"mt-2\">\n                    Submit\n            </Button>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { Modal, Alert, Button } from \"react-bootstrap\";\n\n\nexport default class AlertModal extends Component {\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Warning\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            This Department has Employees. Transfer Employees to a new Department first.\n            <br />\n            <a href=\"/employee-list\">Employee List</a>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport { Redirect, NavLink } from 'react-router-dom'\nimport AddDepartment from './DepartmentAdd'\nimport EditDepartmentModal from './EditDepartmentModal'\nimport { getDepartments, deleteDepartment, getEmployees } from '../utils/localStorage'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport AlertModal from './AlertModal'\n\nexport default class DepartmentList extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            departments: [],\n            jobs: [],\n            selectedDepartment: null,\n            hasError: false,\n            errorMsg: '',\n            completed: false,\n            showEditModel: false,\n            showAlertModel: false\n        }\n    }\n\n    componentDidMount() {\n        // Force initialization if departments are empty\n        let departments = getDepartments();\n        if (departments.length === 0) {\n            const defaultDepartments = [\n                { id: 1, departmentName: 'Human Resources', description: 'HR Department', createdAt: new Date().toISOString() },\n                { id: 2, departmentName: 'Information Technology', description: 'IT Department', createdAt: new Date().toISOString() },\n                { id: 3, departmentName: 'Sales', description: 'Sales Department', createdAt: new Date().toISOString() },\n                { id: 4, departmentName: 'Marketing', description: 'Marketing Department', createdAt: new Date().toISOString() },\n                { id: 5, departmentName: 'Finance', description: 'Finance Department', createdAt: new Date().toISOString() }\n            ];\n            localStorage.setItem('hrms_departments', JSON.stringify(defaultDepartments));\n            departments = defaultDepartments;\n        }\n        \n        // Transform data to match expected format - departments already have departmentName\n        const transformedDepartments = departments.map(dept => ({\n            id: dept.id,\n            departmentName: dept.departmentName, // Fixed: use departmentName instead of name\n            users: [] // Will be populated if needed\n        }));\n        console.log('DEBUG: DepartmentList departments:', transformedDepartments);\n        this.setState({departments: transformedDepartments});\n    }\n\n    onEdit (department) {\n        return event=> {\n            event.preventDefault()\n            \n            this.setState({selectedDepartment: department, showEditModel: true})\n        }\n    }\n\n    onDelete (department) {\n        return event => {\n            event.preventDefault()\n\n            // Check if any employees are in this department\n            const employees = getEmployees();\n            const employeesInDept = employees.filter(emp => emp.department === department.departmentName);\n            \n            if(employeesInDept.length > 0) {\n                this.setState({showAlertModel: true})\n            } else {\n                const success = deleteDepartment(department.id);\n                if (success) {\n                    // Refresh the department list\n                    const departments = getDepartments();\n                    const transformedDepartments = departments.map(dept => ({\n                        id: dept.id,\n                        departmentName: dept.departmentName,\n                        users: []\n                    }));\n                    this.setState({departments: transformedDepartments});\n                    toast.success(\"Department deleted successfully!\");\n                } else {\n                    toast.error(\"Failed to delete department\");\n                }\n            }\n        }\n    }\n    \n  render() {\n    let closeEditModel = () => this.setState({showEditModel: false})\n    let closeAlertModel = () => this.setState({showAlertModel: false})\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-2\">\n        <div className=\"row\">\n            <div className=\"col-sm-12\">\n                <AddDepartment />\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-sm-12\">\n            <Card className=\"main-card\">\n                <Card.Header>\n                <div className=\"panel-title\">\n                    <strong>Department List</strong>\n                </div>\n                </Card.Header>\n                <Card.Body>\n                    <ThemeProvider theme={theme}>\n                    <MaterialTable\n                            columns={[\n                                {title: 'DEPT ID', field: 'id'},\n                                {title: 'Department Name', field: 'departmentName'},\n                                {\n                                    title: 'Jobs', \n                                    render: dept => (\n                                        <NavLink to={{ pathname: '/job-list', state: {selectedDepartment: dept.id}}}>Go to Job List</NavLink>\n                                    )\n                                },\n                                {\n                                    title: 'Action',\n                                    render: rowData => (\n                                        <Form className=\"row\">\n                                            <div className=\"col pl-5\">\n                                                <Button size=\"sm\" variant=\"info\" onClick={this.onEdit(rowData)}><i className=\"fas fa-edit\"></i>Edit</Button>\n                                            </div>\n                                            <div className=\"col pr-5\">\n                                                <Button onClick={this.onDelete(rowData)} size=\"sm\" variant=\"danger\"><i className=\"fas fa-trash\"></i>Delete</Button>\n                                            </div>\n                                        </Form>\n                                    )\n                                }\n                            ]}\n                            data={this.state.departments}\n                            \n                            options={{\n                                rowStyle: (rowData, index) => {\n                                    if(index%2) {\n                                        return {backgroundColor: '#f2f2f2'}\n                                    }\n                                },\n                                pageSize: 8,\n                                pageSizeOptions: [5, 10, 20, 30, 50, 75, 100]\n                            }}\n                            title=\"Departments\"\n                    />\n                    </ThemeProvider>\n                </Card.Body>\n            </Card>\n            {this.state.showEditModel ? (\n                <EditDepartmentModal show={true} onHide={closeEditModel} data={this.state.selectedDepartment} />\n            ) : this.state.showAlertModel ? (\n                <AlertModal show={true} onHide={closeAlertModel} />\n            ) : (<></>)}\n            </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport { getApplications, getEmployees, setItem, STORAGE_KEYS } from '../utils/localStorage';\nimport moment from 'moment'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nexport default class ApplicationList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      applications: [],\n      selectedApplications: null,\n      done: false,\n      hasError: false,\n      errorMsg: \"\",\n      completed: false,\n      showModel: false,\n    };\n  }\n\n  componentDidMount() {\n    // Force initialization of applications and employees if empty\n    let applications = getApplications();\n    if (applications.length === 0) {\n      const defaultApplications = [\n        {\n          id: 1,\n          employeeId: 4,\n          employeeName: 'John Doe',\n          type: 'Leave',\n          reason: 'Annual Leave',\n          startDate: '2024-01-20',\n          endDate: '2024-01-25',\n          status: 'pending',\n          createdAt: new Date().toISOString()\n        },\n        {\n          id: 2,\n          employeeId: 5,\n          employeeName: 'Jane Smith',\n          type: 'Leave',\n          reason: 'Medical Leave',\n          startDate: '2024-02-10',\n          endDate: '2024-02-15',\n          status: 'pending',\n          createdAt: new Date().toISOString()\n        },\n        {\n          id: 3,\n          employeeId: 3,\n          employeeName: 'Jane Employee',\n          type: 'Leave',\n          reason: 'Personal Leave',\n          startDate: '2024-03-05',\n          endDate: '2024-03-08',\n          status: 'approved',\n          createdAt: new Date().toISOString()\n        }\n      ];\n      localStorage.setItem('hrms_applications', JSON.stringify(defaultApplications));\n      applications = defaultApplications;\n    }\n\n    let employees = getEmployees();\n    if (employees.length === 0) {\n      const defaultEmployees = [\n        {\n          id: 1,\n          firstName: 'Admin',\n          lastName: 'User',\n          email: 'admin@hrms.com',\n          phone: '+255 123 456 789',\n          department: 'Information Technology',\n          position: 'System Administrator',\n          salary: 1200000,\n          hireDate: '2023-01-15',\n          status: 'active'\n        },\n        {\n          id: 2,\n          firstName: 'John',\n          lastName: 'Manager',\n          email: 'manager@hrms.com',\n          phone: '+255 987 654 321',\n          department: 'Human Resources',\n          position: 'HR Manager',\n          salary: 1500000,\n          hireDate: '2022-06-10',\n          status: 'active'\n        },\n        {\n          id: 3,\n          firstName: 'Jane',\n          lastName: 'Employee',\n          email: 'jane.employee@hrms.com',\n          phone: '+255 555 123 456',\n          department: 'Sales',\n          position: 'Sales Representative',\n          salary: 800000,\n          hireDate: '2023-03-20',\n          status: 'active'\n        },\n        {\n          id: 4,\n          firstName: 'John',\n          lastName: 'Doe',\n          email: 'john.doe@hrms.com',\n          phone: '+255 444 789 123',\n          department: 'Information Technology',\n          position: 'Software Developer',\n          salary: 1100000,\n          hireDate: '2023-05-15',\n          status: 'active'\n        },\n        {\n          id: 5,\n          firstName: 'Jane',\n          lastName: 'Smith',\n          email: 'jane.smith@hrms.com',\n          phone: '+255 333 456 789',\n          department: 'Marketing',\n          position: 'Marketing Specialist',\n          salary: 900000,\n          hireDate: '2023-07-01',\n          status: 'active'\n        }\n      ];\n      localStorage.setItem('hrms_employees', JSON.stringify(defaultEmployees));\n      employees = defaultEmployees;\n    }\n    \n    // Transform data to match expected format\n    const transformedApplications = applications.map(app => {\n      const employee = employees.find(emp => emp.id === app.employeeId);\n      return {\n        id: app.id,\n        user: {\n          id: app.employeeId,\n          fullName: app.employeeName || (employee ? `${employee.firstName} ${employee.lastName}` : 'Unknown')\n        },\n        startDate: moment(app.startDate).format('YYYY-MM-DD'),\n        endDate: moment(app.endDate).format('YYYY-MM-DD'),\n        type: app.type,\n        reason: app.reason,\n        status: app.status || 'pending'\n      };\n    });\n    \n    console.log('DEBUG: ApplicationList transformed applications:', transformedApplications);\n    this.setState({ applications: transformedApplications });\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onApprove = (app) => {\n    return (event) => {\n      event.preventDefault();\n\n      // Update application status in localStorage\n      const applications = getApplications();\n      const updatedApplications = applications.map(application => \n        application.id === app.id ? { ...application, status: 'approved' } : application\n      );\n      localStorage.setItem('hrms_applications', JSON.stringify(updatedApplications));\n      \n      // Update state to reflect changes immediately\n      const transformedApplications = this.state.applications.map(application => \n        application.id === app.id ? { ...application, status: 'approved' } : application\n      );\n      this.setState({ applications: transformedApplications });\n      \n      console.log('DEBUG: Application approved:', app.id);\n    };\n  }\n\n  onReject = (app) => {\n    return (event) => {\n      event.preventDefault();\n\n      // Update application status in localStorage\n      const applications = getApplications();\n      const updatedApplications = applications.map(application => \n        application.id === app.id ? { ...application, status: 'rejected' } : application\n      );\n      localStorage.setItem('hrms_applications', JSON.stringify(updatedApplications));\n      \n      // Update state to reflect changes immediately\n      const transformedApplications = this.state.applications.map(application => \n        application.id === app.id ? { ...application, status: 'rejected' } : application\n      );\n      this.setState({ applications: transformedApplications });\n      \n      console.log('DEBUG: Application rejected:', app.id);\n    };\n  }\n\n\n  render() {\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-5\">\n        <div className=\"col-sm-12\">\n          <Card>\n            <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\" }}>\n              <div className=\"panel-title\">\n                <strong>Application List</strong>\n              </div>\n            </Card.Header>\n            <Card.Body>\n              <ThemeProvider theme={theme}>\n                <MaterialTable\n                    columns={[\n                        {title: 'APP ID', field: 'id'},\n                        {title: 'Full Name', field: 'user.fullName'},\n                        {title: 'Start Date', field: 'startDate'},\n                        {title: 'End Date', field: 'endDate'},\n                        {title: 'Leave Type', field: 'type'},\n                        {title: 'Comments', field: 'reason'},\n                        {\n                            title: 'Status', \n                            field: 'status',\n                            render: rowData => (\n                                <Button size=\"sm\" variant={\n                                  rowData.status.toLowerCase() === 'approved' ? \"success\" : \n                                  rowData.status.toLowerCase() === 'pending' ? \"warning\" : \n                                  \"danger\"\n                                }>\n                                  {rowData.status.charAt(0).toUpperCase() + rowData.status.slice(1)}\n                                </Button>\n                            )\n                        },\n                        {\n                            title: 'Action',\n                            render: rowData => {\n                              const currentUser = JSON.parse(localStorage.getItem('user') || '{}');\n                              const isOwnApplication = rowData.user.id == currentUser.id;\n                              const isPending = rowData.status.toLowerCase() === 'pending';\n                              \n                              if (!isOwnApplication && isPending) {\n                                return (\n                                  <>\n                                    <Button \n                                      onClick={this.onApprove(rowData)} \n                                      variant=\"success\" \n                                      size=\"sm\" \n                                      className=\"mr-2\"\n                                    >\n                                      <i className=\"fas fa-check\"></i> Approve\n                                    </Button>\n                                    <Button \n                                      onClick={this.onReject(rowData)} \n                                      variant=\"danger\" \n                                      size=\"sm\" \n                                      className=\"ml-2\"\n                                    >\n                                      <i className=\"fas fa-times\"></i> Reject\n                                    </Button>\n                                  </>\n                                );\n                              }\n                              return <span className=\"text-muted\">No actions available</span>;\n                            }\n                        }\n                    ]}\n                    data={this.state.applications}\n                    \n                    options={{\n                    rowStyle: (rowData, index) => {\n                      if(index%2) {\n                        return {backgroundColor: '#f2f2f2'}\n                      }\n                    },\n                    pageSize: 10,\n                    pageSizeOptions: [10, 20, 30, 50, 75, 100]\n                  }}\n                    title=\"Applications\"\n                />\n              </ThemeProvider>\n            </Card.Body>\n          </Card>\n        </div>\n        {this.state.hasError ? (\n          <Alert variant=\"danger\" className=\"m-3\" block>\n            {this.state.errMsg}\n          </Alert>\n        ) : this.state.completed ? (\n          <Redirect to=\"/application-list\" />\n        ) : (\n          <></>\n        )}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport moment from 'moment'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { toast } from 'react-toastify';\nimport { getApplications, getUsers, updateApplication } from '../../utils/localStorage'\n\nexport default class ApplicationList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      applications: [],\n      selectedApplications: null,\n      done: false,\n      hasError: false,\n      errorMsg: \"\",\n      completed: false,\n      showModel: false,\n    };\n  }\n\n  componentDidMount() {\n      let deptId = JSON.parse(localStorage.getItem('user')).departmentId\n      // Use localStorage instead of axios\n      const allApplications = getApplications();\n      const allUsers = getUsers();\n      \n      // Filter applications by department\n      const deptApplications = allApplications.filter(app => {\n          const user = allUsers.find(u => u.id == app.userId);\n          return user && user.departmentId == deptId;\n      });\n      \n      // Format dates and add user info\n      const formattedApplications = deptApplications.map(app => {\n          const user = allUsers.find(u => u.id == app.userId);\n          return {\n              ...app,\n              user: user ? { fullName: user.fullName || `${user.firstName} ${user.lastName}` } : { fullName: 'Unknown User' },\n              startDate: moment(app.startDate).format('YYYY-MM-DD'),\n              endDate: moment(app.endDate).format('YYYY-MM-DD')\n          };\n      });\n      \n      this.setState({ applications: formattedApplications });\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onApprove(app) {\n    return (event) => {\n      event.preventDefault();\n      \n      try {\n        // Update application status in localStorage\n        const updatedApplication = updateApplication(app.id, { status: 'Approved' });\n        \n        if (updatedApplication) {\n          // Update the state to reflect the change\n          const updatedApplications = this.state.applications.map(application => \n            application.id === app.id ? { ...application, status: 'Approved' } : application\n          );\n          \n          this.setState({ applications: updatedApplications });\n          toast.success(\"Application approved successfully!\");\n        } else {\n          toast.error(\"Failed to approve application.\");\n        }\n      } catch (err) {\n        toast.error(\"Failed to approve application: \" + err.message);\n      }\n    };\n  }\n\n  onReject(app) {\n    return (event) => {\n      event.preventDefault()\n      \n      try {\n        // Update application status in localStorage\n        const updatedApplication = updateApplication(app.id, { status: 'Rejected' });\n        \n        if (updatedApplication) {\n          // Update the state to reflect the change\n          const updatedApplications = this.state.applications.map(application => \n            application.id === app.id ? { ...application, status: 'Rejected' } : application\n          );\n          \n          this.setState({ applications: updatedApplications });\n          toast.success(\"Application rejected successfully!\");\n        } else {\n          toast.error(\"Failed to reject application.\");\n        }\n      } catch (err) {\n        toast.error(\"Failed to reject application: \" + err.message);\n      }\n    }\n  }\n\n\n  render() {\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-5\">\n        <div className=\"col-sm-12\">\n          <Card>\n            <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\" }}>\n              <div className=\"panel-title\">\n                <strong>Application List</strong>\n              </div>\n            </Card.Header>\n            <Card.Body>\n              <ThemeProvider theme={theme}>\n                <MaterialTable\n                    columns={[\n                        {title: 'APP ID', field: 'id'},\n                        {title: 'Full Name', field: 'user.fullName'},\n                        {title: 'Start Date', field: 'startDate'},\n                        {title: 'End Date', field: 'endDate'},\n                        {title: 'Leave Type', field: 'type'},\n                        {title: 'Comments', field: 'reason'},\n                        {\n                            title: 'Status', \n                            field: 'status',\n                            render: rowData => (\n                                <Button size=\"sm\" variant={rowData.status==='Approved' ? \"success\" : rowData.status==='Pending' ? \"warning\" : \"danger\"}>{rowData.status}</Button>\n                            )\n                        },\n                        {\n                            title: 'Action',\n                            render: rowData => (\n                              rowData.user.id != JSON.parse(localStorage.getItem('user')).id ? (\n                                rowData.status===\"Pending\" ? (\n                                  <>\n                                    <Button onClick={this.onApprove(rowData)} variant=\"success\" size=\"sm\" className=\"mr-2\"><i className=\"fas fa-edit\"></i>Approve</Button>\n                                    <Button onClick={this.onReject(rowData)} variant=\"danger\" size=\"sm\" className=\"ml-2\"><i className=\"fas fa-trash\"></i>Reject</Button>\n                                  </>\n                                ) : null\n                              ) : null\n                            )\n                        }\n                    ]}\n                    data={this.state.applications}\n                    \n                    options={{\n                    rowStyle: (rowData, index) => {\n                      if(index%2) {\n                        return {backgroundColor: '#f2f2f2'}\n                      }\n                    },\n                    pageSize: 10,\n                    pageSizeOptions: [10, 20, 30, 50, 75, 100]\n                  }}\n                    title=\"Applications\"\n                />\n              </ThemeProvider>\n            </Card.Body>\n          </Card>\n        </div>\n        {this.state.hasError ? (\n          <Alert variant=\"danger\" className=\"m-3\" block>\n            {this.state.errMsg}\n          </Alert>\n        ) : this.state.completed ? (\n          <Redirect to=\"/application-list\" />\n        ) : (\n          <></>\n        )}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport moment from 'moment'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { getApplications } from '../../utils/localStorage'\n\nexport default class ApplicationList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      applications: [],\n      selectedApplications: null,\n      done: false,\n      hasError: false,\n      errorMsg: \"\",\n      completed: false,\n      showModel: false,\n    };\n  }\n\n  componentDidMount() {\n      let userId = JSON.parse(localStorage.getItem('user')).id\n      // Use localStorage instead of axios\n      const allApplications = getApplications();\n      const userApplications = allApplications.filter(app => app.userId == userId);\n      \n      // Format dates\n      const formattedApplications = userApplications.map(app => ({\n        ...app,\n        startDate: moment(app.startDate).format('YYYY-MM-DD'),\n        endDate: moment(app.endDate).format('YYYY-MM-DD')\n      }));\n      \n      this.setState({ applications: formattedApplications });\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-5\">\n        <div className=\"col-sm-12\">\n          <Card>\n            <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\" }}>\n              <div className=\"panel-title\">\n                <strong>Application List</strong>\n              </div>\n            </Card.Header>\n            <Card.Body>\n              <ThemeProvider theme={theme}>\n                <MaterialTable\n                    columns={[\n                        {title: 'APP ID', field: 'id'},\n                        {title: 'Full Name', field: 'user.fullName'},\n                        {title: 'Start Date', field: 'startDate'},\n                        {title: 'End Date', field: 'endDate'},\n                        {title: 'Leave Type', field: 'type'},\n                        {title: 'Comments', field: 'reason'},\n                        {\n                            title: 'Status', \n                            field: 'status',\n                            render: rowData => (\n                                <Button size=\"sm\" variant={rowData.status==='Approved' ? \"success\" : rowData.status==='Pending' ? \"warning\" : \"danger\"}>{rowData.status}</Button>\n                            )\n                        }\n                    ]}\n                    data={this.state.applications}\n                    \n                    options={{\n                    rowStyle: (rowData, index) => {\n                      if(index%2) {\n                        return {backgroundColor: '#f2f2f2'}\n                      }\n                    },\n                    pageSize: 10,\n                    pageSizeOptions: [10, 20, 30, 50, 75, 100]\n                  }}\n                    title=\"Applications\"\n                />\n              </ThemeProvider>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Form, Button } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport { Redirect } from 'react-router-dom'\nimport DatePicker from 'react-datepicker'\nimport { addApplicationToStorage } from '../utils/localStorage';\n\nexport default class Application extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      type: \"\",\n      startDate: null,\n      endDate: null,\n      reason: \"\",\n      hasError: false,\n      errMsg: \"\",\n      completed: false\n    };\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault()\n\n    this.setState({ hasError: false, errorMsg: \"\", completed: false });\n\n    let userId = JSON.parse(localStorage.getItem('user')).id\n\n    let application = {\n        type: this.state.type,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        status: 'Pending',\n        reason: this.state.reason,\n        userId: userId\n    };\n\n    try {\n      addApplicationToStorage(application);\n      this.setState({completed: true});\n      toast.success(\"Application submitted successfully!\");\n    } catch (err) {\n      toast.error(\"Failed to submit application: \" + err.message);\n      window.scrollTo(0, 0);\n    }\n  };\n  \n  render() {\n      return (\n          <div className=\"container-fluid pt-4\">\n            {this.state.completed ? (\n                <Redirect to=\"/application-list\" />\n            ) : (<></>)}\n            <Card className=\"mb-3 main-card\">\n                <Card.Header>\n                    <b>Make Application</b>\n                </Card.Header>\n                <Card.Body>\n                    <Card.Text>\n                    <Form onSubmit={this.onSubmit}>\n                        <Form.Group controlId=\"formDepartmentName\">\n                        <Form.Label>\n                            Type\n                        </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                name=\"type\"\n                                style={{width: \"50%\"}}\n                                value={this.state.type}\n                                onChange={this.handleChange}\n                                required\n                            >\n                                <option value=\"\">Choose one</option>\n                                <option value=\"normal\">Normal</option>\n                                <option value=\"illness\">Illness</option>\n                                <option value=\"student\">Student</option>\n                                <option value=\"marriage\">Marriage</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Start Date</Form.Label>\n                            <Form.Row>\n                                <DatePicker \n                                    selected={this.state.startDate}\n                                    className=\"form-control ml-1\"\n                                    onChange={newDate => this.setState({startDate: newDate})}\n                                    required\n                                />\n                            </Form.Row>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>End Date</Form.Label>\n                            <Form.Row>\n                                <DatePicker \n                                    selected={this.state.endDate}\n                                    className=\"form-control ml-1\"\n                                    onChange={newDate => this.setState({endDate: newDate})}\n                                    required\n                                />\n                            </Form.Row>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Reason <span className=\"text-muted\">(Comments)</span></Form.Label>\n                            <Form.Control \n                                type=\"text\"\n                                name=\"reason\"\n                                value={this.state.reason}\n                                onChange={this.handleChange}\n                            />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\" className=\"mt-2\">\n                        Add\n                        </Button>\n                    </Form>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n          </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { Modal, Button, Form, Alert } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport { getDepartments, getUsers, addJobToStorage } from '../utils/localStorage'\n\n\nexport default class JobAddModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: null,\n      jobTitle: \"\",\n      startDate: null,\n      endDate: null,\n      departments: [],\n      users: [],\n      selectedDepartment: null,\n      selectedUser: null,\n      showAlert: false,\n      errorMsg: \"\",\n      done: false\n    };\n  }\n\n  componentDidMount() {\n    this.fetchDepartments() \n  }\n\n  fetchDepartments = () => {\n    // Force initialization - always set departments\n    const defaultDepartments = [\n      { id: 1, departmentName: 'Human Resources', description: 'HR Department', createdAt: new Date().toISOString() },\n      { id: 2, departmentName: 'Information Technology', description: 'IT Department', createdAt: new Date().toISOString() },\n      { id: 3, departmentName: 'Sales', description: 'Sales Department', createdAt: new Date().toISOString() },\n      { id: 4, departmentName: 'Marketing', description: 'Marketing Department', createdAt: new Date().toISOString() },\n      { id: 5, departmentName: 'Finance', description: 'Finance Department', createdAt: new Date().toISOString() }\n    ];\n    \n    // Always set in localStorage and state\n    localStorage.setItem('hrms_departments', JSON.stringify(defaultDepartments));\n    console.log('DEBUG: Setting departments in JobAddModal:', defaultDepartments);\n    this.setState({departments: defaultDepartments}, () => {\n      console.log('DEBUG: JobAddModal departments state:', this.state.departments);\n    });\n  }\n\n  fetchUsers = () => {\n    // Force initialization of users if empty\n    let allUsers = getUsers();\n    if (allUsers.length === 0) {\n      const defaultUsers = [\n        {\n          id: 1,\n          username: 'admin',\n          email: 'admin@hrms.com',\n          password: 'admin123',\n          role: 'admin',\n          firstName: 'Admin',\n          lastName: 'User',\n          department: 'Information Technology',\n          departmentId: 2,\n          position: 'System Administrator'\n        },\n        {\n          id: 2,\n          username: 'manager',\n          email: 'manager@hrms.com',\n          password: 'manager123',\n          role: 'manager',\n          firstName: 'John',\n          lastName: 'Manager',\n          department: 'Human Resources',\n          departmentId: 1,\n          position: 'HR Manager'\n        },\n        {\n          id: 3,\n          username: 'employee',\n          email: 'employee@hrms.com',\n          password: 'employee123',\n          role: 'employee',\n          firstName: 'Jane',\n          lastName: 'Employee',\n          department: 'Sales',\n          departmentId: 3,\n          position: 'Sales Representative'\n        },\n        {\n          id: 4,\n          username: 'john.doe',\n          email: 'john.doe@hrms.com',\n          password: 'password123',\n          role: 'employee',\n          firstName: 'John',\n          lastName: 'Doe',\n          department: 'Information Technology',\n          departmentId: 2,\n          position: 'Software Developer'\n        },\n        {\n          id: 5,\n          username: 'jane.smith',\n          email: 'jane.smith@hrms.com',\n          password: 'password123',\n          role: 'employee',\n          firstName: 'Jane',\n          lastName: 'Smith',\n          department: 'Marketing',\n          departmentId: 4,\n          position: 'Marketing Specialist'\n        }\n      ];\n      localStorage.setItem('hrms_users', JSON.stringify(defaultUsers));\n      allUsers = defaultUsers;\n    }\n    \n    console.log('DEBUG: All users loaded:', allUsers);\n    console.log('DEBUG: Selected department ID:', this.state.selectedDepartment);\n    console.log('DEBUG: Selected department type:', typeof this.state.selectedDepartment);\n    \n    // Convert selectedDepartment to number for proper comparison\n    const selectedDeptId = parseInt(this.state.selectedDepartment);\n    \n    const departmentUsers = allUsers.filter(user => {\n      console.log('DEBUG: Comparing user departmentId:', user.departmentId, 'with selected:', selectedDeptId);\n      return user.departmentId === selectedDeptId;\n    });\n    \n    console.log('DEBUG: Filtered users for department', selectedDeptId, ':', departmentUsers);\n    this.setState({users: departmentUsers});\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onDepartmentChange = (event) => {\n    console.log('DEBUG: Department changed to:', event.target.value);\n    this.setState({selectedDepartment: event.target.value}, () => {\n        console.log('DEBUG: State updated, now fetching users for department:', this.state.selectedDepartment);\n        this.fetchUsers()\n    })\n  }\n\n  onUserChange = (event) => {\n    this.setState({selectedUser: event.target.value})\n  }\n\n  pushDepartments = () => {\n      let items = []\n      this.state.departments.map((dept, index) => {\n        items.push(<option key={index} value={dept.id}>{dept.departmentName}</option>)\n      })\n      return items\n  }\n\n  pushUsers = () => {\n      let items = []\n      console.log('DEBUG: pushUsers called, users array:', this.state.users);\n      console.log('DEBUG: users array length:', this.state.users.length);\n      this.state.users.map((user, index) => {\n          const fullName = `${user.firstName} ${user.lastName}`;\n          console.log('DEBUG: Adding user option:', fullName, 'with ID:', user.id);\n          items.push(<option key={index} value={user.id}>{fullName}</option>)\n      })\n      console.log('DEBUG: Total user options created:', items.length);\n      return items\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    if (!this.state.selectedDepartment || !this.state.selectedUser || !this.state.jobTitle || !this.state.startDate || !this.state.endDate) {\n      toast.error('Please fill in all required fields');\n      return;\n    }\n\n    let job = {\n        jobTitle: this.state.jobTitle,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n        userId: this.state.selectedUser,\n        departmentId: this.state.selectedDepartment,\n        status: 'Active',\n        createdAt: new Date().toISOString()\n    }\n\n    try {\n      addJobToStorage(job);\n      this.setState({done: true});\n      toast.success(\"Job added successfully!\");\n    } catch (error) {\n      toast.error('Failed to add job. Please try again.');\n    }\n  };\n\n  render() {\n    const {showAlert, done} = this.state  \n    return (\n      <Modal\n        {...this.props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Add Job\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form onSubmit={this.onSubmit}>\n                <Form.Group>\n                    <Form.Label className=\"mb-2 required\">Select Department</Form.Label>\n                    <Form.Control \n                        as=\"select\"\n                        className=\"form-control\"\n                        value={this.state.selectedDepartment || \"\"}\n                        onChange={this.onDepartmentChange}\n                    >\n                        <option value=\"\">Choose one...</option>\n                        {this.pushDepartments()}\n                    </Form.Control>\n                </Form.Group>\n                {this.state.selectedDepartment ? (\n                    <Form.Group>\n                        <Form.Label>Select User</Form.Label>\n                        <Form.Control\n                            as=\"select\"\n                            className=\"form-control\"\n                            value={this.state.selectedUser || ''}\n                            onChange={this.onUserChange}\n                        >\n                            <option value=\"\">Choose one...</option>\n                            {this.pushUsers()}\n                        </Form.Control>\n                    </Form.Group>\n                ): null}\n                {done ? <Redirect to={{pathname: '/job-list', state: {selectedDepartment: this.state.departmentId}}} /> : <></>}\n                <Form.Group controlId=\"formJobTitle\">\n                    <Form.Label className=\"mb-2 required\">Job Title</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        className=\"col-8\"\n                        name=\"jobTitle\"\n                        value={this.state.jobTitle}\n                        onChange={this.handleChange}\n                        autoComplete=\"off\"\n                        required\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"formStartDate\">\n                    <Form.Label className=\"mb-2 required\">Job Start Date</Form.Label>\n                     <DatePicker\n                              selected={this.state.startDate}\n                              onChange={startDate => this.setState({startDate: startDate})}\n                              minDate={Date.now()}\n                              dateFormat=\"yyyy-MM-dd\"\n                              className=\"form-control ml-1\"\n                              placeholderText=\"Select Start Date\"\n                              autoComplete=\"off\"\n                              required\n                            />\n                </Form.Group>\n                <Form.Group controlId=\"fromEndDate\">\n                    <Form.Label className=\"mb-2 required\">Job End Date</Form.Label>\n                     <DatePicker\n                              selected={this.state.endDate}\n                              onChange={endDate => this.setState({endDate: endDate})}\n                              minDate={Date.now()}\n                              dateFormat=\"yyyy-MM-dd\"\n                              className=\"form-control ml-1\"\n                              placeholderText=\"Select Start Date\"\n                              autoComplete=\"off\"\n                              required\n                            />\n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\" className=\"mt-2\">\n                    Submit\n            </Button>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { Modal, Button, Form, Alert } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport { updateJob } from '../utils/localStorage'\n\nexport default class JobEditModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: null,\n      jobTitle: \"\",\n      startDate: null,\n      endDate: null,\n      showAlert: false,\n      errorMsg: \"\",\n      done: false\n    };\n  }\n\n  componentDidMount() {\n      this.setState({\n          id: this.props.data.id,\n          jobTitle: this.props.data.jobTitle,\n          startDate:  moment(new Date(this.props.data.startDate)).toDate(),\n          endDate: moment(new Date(this.props.data.endDate)).toDate(),\n          departmentId: this.props.data.user.departmentId\n        })\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    let job = {\n        jobTitle: this.state.jobTitle,\n        startDate: this.state.startDate,\n        endDate: this.state.endDate,\n    }\n\n    try {\n      updateJob(this.state.id, job);\n      this.setState({done: true});\n      toast.success(\"Job updated successfully!\");\n    } catch (err) {\n      toast.error(\"Failed to update job: \" + err.message);\n    }\n  };\n\n  render() {\n    const {showAlert, done} = this.state  \n    return (\n      <Modal\n        {...this.props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Edit Job\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form onSubmit={this.onSubmit}>\n            {done ? <Redirect to={{pathname: '/job-list', state: {selectedDepartment: this.state.departmentId}}} /> : <></>}\n                <Form.Group controlId=\"formJobTitle\">\n                    <Form.Label className=\"mb-2 required\">Job Title</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        className=\"col-8\"\n                        name=\"jobTitle\"\n                        value={this.state.jobTitle}\n                        onChange={this.handleChange}\n                        autoComplete=\"off\"\n                        required\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"formStartDate\">\n                    <Form.Label className=\"mb-2 required\">Job Start Date</Form.Label>\n                     <DatePicker\n                              selected={this.state.startDate}\n                              onChange={startDate => this.setState({startDate: startDate})}\n                              showMonthDropdown\n                              showYearDropdown\n                              dropdownMode=\"select\"\n                              name=\"startDate\"\n                              dateFormat=\"yyyy-MM-dd\"\n                              className=\"form-control ml-1\"\n                              placeholderText=\"Select Start Date\"\n                              autoComplete=\"off\"\n                              required\n                            />\n                </Form.Group>\n                <Form.Group controlId=\"fromEndDate\">\n                    <Form.Label className=\"mb-2 required\">Job End Date</Form.Label>\n                     <DatePicker\n                              selected={this.state.endDate}\n                              onChange={endDate => this.setState({endDate: endDate})}\n                              showMonthDropdown\n                              showYearDropdown\n                              dropdownMode=\"select\"\n                              name=\"endDate\"\n                              dateFormat=\"yyyy-MM-dd\"\n                              className=\"form-control ml-1\"\n                              placeholderText=\"Select Start Date\"\n                              autoComplete=\"off\"\n                              required\n                            />\n                </Form.Group>\n                <Button variant=\"success\" type=\"submit\" className=\"mt-2\">\n                    Submit\n            </Button>\n            </Form>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { Modal, Alert, Button } from \"react-bootstrap\";\nimport { toast } from 'react-toastify'\nimport { deleteJob } from '../utils/localStorage'\n\nexport default class JobDeleteModal extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            redirect: false\n        }\n    }\n\n    onDelete = (event) => {\n        event.preventDefault()\n\n        try {\n            deleteJob(this.props.data.id);\n            this.setState({redirect: true})\n            toast.success(\"Job deleted successfully!\");\n        } catch (err) {\n            toast.error(\"Failed to delete job: \" + err.message);\n        }\n    }\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n          {this.state.redirect ? (<Redirect to=\"/job-list\" />) : null}\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Warning\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            By deleting a Job you will also delete all of its payment records as well! Are you sure?\n            <br />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"danger\" onClick={this.onDelete}>Delete</Button>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    )\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert, Badge } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport JobAddModal from './JobAddModal'\nimport JobEditModal from './JobEditModal'\nimport JobDeleteModal from './JobDeleteModal'\nimport moment from 'moment'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport AlertModal from './AlertModal'\nimport { getDepartments, getUsers, getSalaryDetails, updateSalaryDetails } from '../utils/localStorage'\n\nexport default class SalaryDetails extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            departments: [],\n            selectedDepartment: null,\n            selectedUser: null,\n            financialId: null,\n            users: [],\n            salaryBasic: 0,\n            allowanceHouseRent: 0,\n            allowanceMedical: 0,\n            allowanceSpecial: 0,\n            allowanceFuel: 0,\n            allowancePhoneBill: 0,\n            allowanceOther: 0,\n            deductionTax: 0,\n            deductionOther: 0,\n            hasError: false,\n            errMsg: \"\",\n            completed: false\n        }\n    }\n\n    componentDidMount() {\n        // Force initialization - always set departments\n        const defaultDepartments = [\n            { id: 1, departmentName: 'Human Resources', description: 'HR Department', createdAt: new Date().toISOString() },\n            { id: 2, departmentName: 'Information Technology', description: 'IT Department', createdAt: new Date().toISOString() },\n            { id: 3, departmentName: 'Sales', description: 'Sales Department', createdAt: new Date().toISOString() },\n            { id: 4, departmentName: 'Marketing', description: 'Marketing Department', createdAt: new Date().toISOString() },\n            { id: 5, departmentName: 'Finance', description: 'Finance Department', createdAt: new Date().toISOString() }\n        ];\n        \n        // Always set in localStorage and state\n        localStorage.setItem('hrms_departments', JSON.stringify(defaultDepartments));\n        console.log('DEBUG: Setting departments in SalaryDetails:', defaultDepartments);\n        \n        this.setState({departments: defaultDepartments}, () => {\n            console.log('DEBUG: Departments state set:', this.state.departments);\n            if(this.props.location.state) {\n                this.setState({selectedDepartment: this.props.location.state.selectedUser.departmentId}, () => {\n                    this.fetchData()\n                })\n                this.setState({selectedUser: this.props.location.state.selectedUser.id}, () => {\n                    this.pushChanges()\n                })\n            }\n        });\n    }\n\n    pushChanges = () => {\n        const salaryDetails = getSalaryDetails();\n        const userSalary = salaryDetails.find(salary => salary.userId == this.state.selectedUser);\n        \n        if (userSalary) {\n            this.setState(prevState => ({\n                ...prevState,\n                financialId: userSalary.id,\n                ...userSalary\n            }));\n        } else {\n            // Initialize default salary structure for user\n            const defaultSalary = {\n                id: Date.now(),\n                userId: this.state.selectedUser,\n                employmentType: 'Full Time',\n                salaryBasic: 0,\n                allowanceHouseRent: 0,\n                allowanceMedical: 0,\n                allowanceSpecial: 0,\n                allowanceFuel: 0,\n                allowancePhoneBill: 0,\n                allowanceOther: 0,\n                deductionTax: 0,\n                deductionOther: 0\n            };\n            this.setState(prevState => ({\n                ...prevState,\n                financialId: defaultSalary.id,\n                ...defaultSalary\n            }));\n        }\n    }\n\n    fetchData = () => {\n        // Force initialization of users if empty\n        let allUsers = getUsers();\n        if (allUsers.length === 0) {\n            const defaultUsers = [\n                {\n                    id: 1,\n                    username: 'admin',\n                    email: 'admin@hrms.com',\n                    password: 'admin123',\n                    role: 'admin',\n                    firstName: 'Admin',\n                    lastName: 'User',\n                    department: 'Information Technology',\n                    departmentId: 2,\n                    position: 'System Administrator'\n                },\n                {\n                    id: 2,\n                    username: 'manager',\n                    email: 'manager@hrms.com',\n                    password: 'manager123',\n                    role: 'manager',\n                    firstName: 'John',\n                    lastName: 'Manager',\n                    department: 'Human Resources',\n                    departmentId: 1,\n                    position: 'HR Manager'\n                },\n                {\n                    id: 3,\n                    username: 'employee',\n                    email: 'employee@hrms.com',\n                    password: 'employee123',\n                    role: 'employee',\n                    firstName: 'Jane',\n                    lastName: 'Employee',\n                    department: 'Sales',\n                    departmentId: 3,\n                    position: 'Sales Representative'\n                },\n                {\n                    id: 4,\n                    username: 'john.doe',\n                    email: 'john.doe@hrms.com',\n                    password: 'password123',\n                    role: 'employee',\n                    firstName: 'John',\n                    lastName: 'Doe',\n                    department: 'Information Technology',\n                    departmentId: 2,\n                    position: 'Software Developer'\n                },\n                {\n                    id: 5,\n                    username: 'jane.smith',\n                    email: 'jane.smith@hrms.com',\n                    password: 'password123',\n                    role: 'employee',\n                    firstName: 'Jane',\n                    lastName: 'Smith',\n                    department: 'Marketing',\n                    departmentId: 4,\n                    position: 'Marketing Specialist'\n                }\n            ];\n            localStorage.setItem('hrms_users', JSON.stringify(defaultUsers));\n            allUsers = defaultUsers;\n        }\n        \n        const departmentUsers = allUsers.filter(user => \n            user.departmentId == this.state.selectedDepartment\n        );\n        console.log('DEBUG: SalaryDetails filtered users for department', this.state.selectedDepartment, ':', departmentUsers);\n        this.setState({users: departmentUsers});\n    }\n\n    fetchDataAll = () => {\n        // Force initialization of users if empty\n        let allUsers = getUsers();\n        if (allUsers.length === 0) {\n            const defaultUsers = [\n                {\n                    id: 1,\n                    username: 'admin',\n                    email: 'admin@hrms.com',\n                    password: 'admin123',\n                    role: 'admin',\n                    firstName: 'Admin',\n                    lastName: 'User',\n                    department: 'Information Technology',\n                    departmentId: 2,\n                    position: 'System Administrator'\n                },\n                {\n                    id: 2,\n                    username: 'manager',\n                    email: 'manager@hrms.com',\n                    password: 'manager123',\n                    role: 'manager',\n                    firstName: 'John',\n                    lastName: 'Manager',\n                    department: 'Human Resources',\n                    departmentId: 1,\n                    position: 'HR Manager'\n                },\n                {\n                    id: 3,\n                    username: 'employee',\n                    email: 'employee@hrms.com',\n                    password: 'employee123',\n                    role: 'employee',\n                    firstName: 'Jane',\n                    lastName: 'Employee',\n                    department: 'Sales',\n                    departmentId: 3,\n                    position: 'Sales Representative'\n                },\n                {\n                    id: 4,\n                    username: 'john.doe',\n                    email: 'john.doe@hrms.com',\n                    password: 'password123',\n                    role: 'employee',\n                    firstName: 'John',\n                    lastName: 'Doe',\n                    department: 'Information Technology',\n                    departmentId: 2,\n                    position: 'Software Developer'\n                },\n                {\n                    id: 5,\n                    username: 'jane.smith',\n                    email: 'jane.smith@hrms.com',\n                    password: 'password123',\n                    role: 'employee',\n                    firstName: 'Jane',\n                    lastName: 'Smith',\n                    department: 'Marketing',\n                    departmentId: 4,\n                    position: 'Marketing Specialist'\n                }\n            ];\n            localStorage.setItem('hrms_users', JSON.stringify(defaultUsers));\n            allUsers = defaultUsers;\n        }\n        console.log('DEBUG: SalaryDetails all users:', allUsers);\n        this.setState({users: allUsers});\n    }\n\n    pushDepartments = () => {\n        let items= []\n        items.push(<option key={584390} value=\"all\">All departments</option>)\n        this.state.departments.map((dept, index) => {\n            if(this.state.selectedDepartment == dept.id) {\n                items.push(<option key={index} value={dept.id} defaultValue>{dept.departmentName}</option>)\n            } else {\n                items.push(<option key={index} value={dept.id}>{dept.departmentName}</option>)\n            }\n        })\n        return items\n    }\n\n    pushUsers = () => {\n        let items = []\n        \n        this.state.users.map((user, index) => {\n            const fullName = `${user.firstName} ${user.lastName}`;\n            items.push(<option key={index} value={user.id}>{fullName}</option>)\n        })\n\n        return items\n    }\n\n    handleDepartmentChange = (event) => {\n        this.setState({selectedDepartment: event.target.value}, () => {\n            if(this.state.selectedDepartment === \"all\") {\n                this.fetchDataAll()\n            } else {\n                this.fetchData()\n            }\n        })\n    }\n\n    handleUserChange = (event) => {\n        this.setState({selectedUser: event.target.value}, () => {\n            this.pushChanges();\n        });\n    }\n\n    handleChangeEmploymentType = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: +value\n        })\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault()\n\n        let data = {\n            employmentType: this.state.employmentType,\n            salaryBasic: this.state.salaryBasic,\n            salaryGross: this.salaryGross,\n            salaryNet: this.salaryNet,\n            allowanceHouseRent: this.state.allowanceHouseRent,\n            allowanceMedical: this.state.allowanceMedical,\n            allowanceSpecial: this.state.allowanceSpecial,\n            allowanceFuel: this.state.allowanceFuel,\n            allowancePhoneBill: this.state.allowancePhoneBill,\n            allowanceOther: this.state.allowanceOther,\n            allowanceTotal: this.state.allowanceHouseRent + this.state.allowanceMedical + this.state.allowanceSpecial +\n                            this.state.allowanceFuel + this.state.allowancePhoneBill + this.state.allowanceOther,\n            deductionTax: this.state.deductionTax,\n            deductionOther: this.state.deductionOther,\n            deductionTotal: this.state.deductionTax + this.state.deductionOther,\n            salaryGross: this.state.salaryBasic + this.state.allowanceHouseRent + \n                        this.state.allowanceMedical + this.state.allowanceSpecial + \n                        this.state.allowancePhoneBill + this.state.allowanceFuel + \n                        this.state.allowanceOther,\n            salaryNet: this.state.salaryBasic + this.state.allowanceHouseRent + \n                        this.state.allowanceMedical + this.state.allowanceSpecial + \n                        this.state.allowancePhoneBill + this.state.allowanceFuel + \n                        this.state.allowanceOther - this.state.deductionTax - this.state.deductionOther\n        }\n\n        try {\n            updateSalaryDetails(this.state.financialId, data);\n            this.setState({completed: true});\n            window.scrollTo(0, 0);\n        } catch (error) {\n            this.setState({hasError: true, errMsg: 'Failed to update salary details. Please try again.'});\n            window.scrollTo(0, 0);\n        }\n    }\n\n    onEdit (job) {\n        return event=> {\n            event.preventDefault()\n            \n            this.setState({selectedJob: job, showEditModel: true})\n        }\n    }\n    \n  render() {\n\n    let salaryGross = this.state.salaryBasic + this.state.allowanceHouseRent + \n                      this.state.allowanceMedical + this.state.allowanceSpecial + \n                      this.state.allowancePhoneBill + this.state.allowanceFuel + \n                      this.state.allowanceOther\n\n    let deductionTotal = this.state.deductionTax + this.state.deductionOther\n\n    let salaryNet = salaryGross - deductionTotal\n\n    return (\n      <div className=\"container-fluid pt-2\">\n        <div className=\"row\">\n\n          {this.state.hasError ? (\n            <Alert variant=\"danger\" className=\"m-3\" block>\n              {this.state.errMsg}\n            </Alert>\n          ): \n          this.state.completed ? (\n            <Alert variant=\"success\" className=\"m-3\" block>\n              Financial Infromation have been updated.\n            </Alert>\n          ) : (<></>)}\n\n            <div className=\"col-sm-12\">\n                <Card className=\"main-card\">\n                    <Card.Header><div className=\"required\">Manage Salary Details</div></Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            <Form onSubmit={this.onSubmit}>\n                                <Form.Group>\n                                    <Form.Label>Select Department: </Form.Label>\n                                    <Form.Control\n                                        as=\"select\"\n                                        className=\"select-css\"\n                                        value={this.state.selectedDepartment}\n                                        onChange={this.handleDepartmentChange}\n                                    >\n                                        <option key={34432432} value=\"\">Choose one...</option>\n                                        {this.pushDepartments()}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Select User: </Form.Label>\n                                    <Form.Control\n                                        as=\"select\" \n                                        className=\"select-css\"\n                                        value={this.state.selectedUser || ''}\n                                        onChange={this.handleUserChange}\n                                    >\n                                        <option value=\"\">Choose one...</option>\n                                        {this.pushUsers()}\n                                    </Form.Control>\n                                </Form.Group>\n                            </Form>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n        {this.state.selectedUser ? (\n            <Form onSubmit={this.onSubmit}>\n                <div className=\"row\">\n                    <div className=\"col-sm-12\">\n                        <Card className=\"main-card\">\n                            <Card.Header>Salary Details</Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    <Form.Group>\n                                        <Form.Label className=\"required\">Employment Type </Form.Label>\n                                        <Form.Control\n                                            as=\"select\"\n                                            className=\"select-css\"\n                                            value={this.state.employmentType}\n                                            onChange={this.handleChangeEmploymentType}\n                                            name=\"employmentType\"\n                                        >\n                                            <option value=\"\">Choose one...</option>\n                                            <option value=\"Full Time\">Full Time</option>\n                                            <option value=\"Part Time\">Part Time</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label className=\"required\">Basic Salary</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            value={this.state.salaryBasic}\n                                            onChange={this.handleChange}\n                                            name=\"salaryBasic\"\n                                        />\n                                    </Form.Group>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-6\">\n                        <Card className=\"main-card\">\n                            <Card.Header>Allowances</Card.Header>\n                            <Card.Body>\n                                <Card.Text>\n                                    <Form.Group>\n                                        <Form.Label>House Rent Allowance</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            value={this.state.allowanceHouseRent}\n                                            onChange={this.handleChange}\n                                            name=\"allowanceHouseRent\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Medical Allowance</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            value={this.state.allowanceMedical}\n                                            onChange={this.handleChange}\n                                            name=\"allowanceMedical\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Special Allowance</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            value={this.state.allowanceSpecial}\n                                            onChange={this.handleChange}\n                                            name=\"allowanceSpecial\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Fuel Allowance</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            value={this.state.allowanceFuel}\n                                            onChange={this.handleChange}\n                                            name=\"allowanceFuel\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Phone Bill Allowance</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            value={this.state.allowancePhoneBill}\n                                            onChange={this.handleChange}\n                                            name=\"allowancePhoneBill\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Other Allowance</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            value={this.state.allowanceOther}\n                                            onChange={this.handleChange}\n                                            name=\"allowanceOther\"\n                                        />\n                                    </Form.Group>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </div>\n                    <div className=\"col-sm-6\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                <Card className=\"main-card\">\n                                    <Card.Header>Deductions</Card.Header>\n                                    <Card.Body>\n                                        <Card.Text>\n                                            <Form.Group>\n                                                <Form.Label>Tax Deduction</Form.Label>\n                                                <Form.Control \n                                                    type=\"number\"\n                                                    value={this.state.deductionTax}\n                                                    onChange={this.handleChange}\n                                                    name=\"deductionTax\"\n                                                />\n                                            </Form.Group>\n                                            <Form.Group>\n                                                <Form.Label>Other Deduction</Form.Label>\n                                                <Form.Control \n                                                    type=\"number\"\n                                                    value={this.state.deductionOther}\n                                                    onChange={this.handleChange}\n                                                    name=\"deductionOther\"\n                                                />\n                                            </Form.Group>\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                <Card className=\"main-card\">\n                                    <Card.Header>Total Salary Details</Card.Header>\n                                    <Card.Body>\n                                        <Card.Text>\n                                            <Form.Group>\n                                                <Form.Label>Gross Salary</Form.Label>\n                                                <Form.Control \n                                                    type=\"number\"\n                                                    value={salaryGross}\n                                                    readOnly\n                                                />\n                                            </Form.Group>\n                                            <Form.Group>\n                                                <Form.Label>Total Deductions</Form.Label>\n                                                <Form.Control \n                                                    type=\"number\"\n                                                    value={deductionTotal}\n                                                    readOnly\n                                                />\n                                            </Form.Group>\n                                            <Form.Group>\n                                                <Form.Label>Net Salary</Form.Label>\n                                                <Form.Control \n                                                    type=\"number\"\n                                                    value={salaryNet}\n                                                    readOnly\n                                                />\n                                            </Form.Group>\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </div>\n                        </div>\n                        <div className=\"row mb-2\">\n                            <Button type=\"submit\" block>Submit</Button>\n                        </div>\n                    </div>\n                </div>\n            </Form>\n        ) : null}\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Badge, Button, Form, Modal } from \"react-bootstrap\";\nimport {Redirect} from 'react-router-dom'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { getSalaryDetails, getUsers } from '../utils/localStorage'\n\nexport default class SalaryList extends Component {\n  \n  constructor(props) {\n    super(props)\n\n    this.state = {\n      financialInformations: [],\n      selectedUser: null,\n      editRedirect: false,\n      deleteModal: false\n    }\n  }\n\n  componentDidMount() {\n    // Force initialization of users and salary details if empty\n    let users = getUsers();\n    if (users.length === 0) {\n      const defaultUsers = [\n        {\n          id: 1,\n          username: 'admin',\n          email: 'admin@hrms.com',\n          password: 'admin123',\n          role: 'admin',\n          firstName: 'Admin',\n          lastName: 'User',\n          department: 'Information Technology',\n          departmentId: 2,\n          position: 'System Administrator'\n        },\n        {\n          id: 2,\n          username: 'manager',\n          email: 'manager@hrms.com',\n          password: 'manager123',\n          role: 'manager',\n          firstName: 'John',\n          lastName: 'Manager',\n          department: 'Human Resources',\n          departmentId: 1,\n          position: 'HR Manager'\n        },\n        {\n          id: 3,\n          username: 'employee',\n          email: 'employee@hrms.com',\n          password: 'employee123',\n          role: 'employee',\n          firstName: 'Jane',\n          lastName: 'Employee',\n          department: 'Sales',\n          departmentId: 3,\n          position: 'Sales Representative'\n        },\n        {\n          id: 4,\n          username: 'john.doe',\n          email: 'john.doe@hrms.com',\n          password: 'password123',\n          role: 'employee',\n          firstName: 'John',\n          lastName: 'Doe',\n          department: 'Information Technology',\n          departmentId: 2,\n          position: 'Software Developer'\n        },\n        {\n          id: 5,\n          username: 'jane.smith',\n          email: 'jane.smith@hrms.com',\n          password: 'password123',\n          role: 'employee',\n          firstName: 'Jane',\n          lastName: 'Smith',\n          department: 'Marketing',\n          departmentId: 4,\n          position: 'Marketing Specialist'\n        }\n      ];\n      localStorage.setItem('hrms_users', JSON.stringify(defaultUsers));\n      users = defaultUsers;\n    }\n\n    let salaryDetails = getSalaryDetails();\n    if (salaryDetails.length === 0) {\n      const defaultSalaryDetails = [\n        {\n          id: 1,\n          userId: 1,\n          employmentType: 'Full Time',\n          salaryBasic: 800000,\n          allowanceHouseRent: 200000,\n          allowanceMedical: 50000,\n          allowanceSpecial: 100000,\n          allowanceFuel: 75000,\n          allowancePhoneBill: 25000,\n          allowanceOther: 50000,\n          deductionTax: 120000,\n          deductionOther: 30000,\n          salaryGross: 1300000,\n          deductionTotal: 150000,\n          salaryNet: 1150000\n        },\n        {\n          id: 2,\n          userId: 2,\n          employmentType: 'Full Time',\n          salaryBasic: 1000000,\n          allowanceHouseRent: 250000,\n          allowanceMedical: 75000,\n          allowanceSpecial: 150000,\n          allowanceFuel: 100000,\n          allowancePhoneBill: 30000,\n          allowanceOther: 75000,\n          deductionTax: 180000,\n          deductionOther: 50000,\n          salaryGross: 1680000,\n          deductionTotal: 230000,\n          salaryNet: 1450000\n        }\n      ];\n      localStorage.setItem('hrms_salary_details', JSON.stringify(defaultSalaryDetails));\n      salaryDetails = defaultSalaryDetails;\n    }\n    \n    // Combine salary details with user information\n    const financialInformations = salaryDetails.map(detail => {\n      const user = users.find(u => u.id == detail.userId);\n      if (user) {\n        return {\n          ...detail,\n          user: {\n            ...user,\n            fullName: `${user.firstName} ${user.lastName}`\n          }\n        };\n      }\n      return null;\n    }).filter(item => item !== null);\n    \n    console.log('DEBUG: SalaryList financial informations:', financialInformations);\n    this.setState({financialInformations: financialInformations});\n  }\n\n  onEdit = (financialInfo) => {\n    return (event) => {\n      event.preventDefault()\n\n      this.setState({selectedUser: financialInfo.user, editRedirect: true})\n    } \n  }\n\n  onView = (user) => {\n    return (event) => {\n      event.preventDefault()\n\n      this.setState({selectedUser: user, viewRedirect: true})\n    }\n  }\n\n  render() {\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-4\">\n        {this.state.editRedirect ? (<Redirect to={{pathname: '/salary-details', state: {selectedUser: this.state.selectedUser}}}></Redirect>) : (<></>)}\n        {this.state.viewRedirect ? (<Redirect to={{pathname: '/salary-view', state: {selectedUser: this.state.selectedUser}}}></Redirect>) : (<></>)}\n        <div className=\"col-sm-12\">\n          <Card>\n            <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\" }}>\n              <div className=\"panel-title\">\n                <strong>List of Employees and Their Salaries</strong>\n              </div>\n            </Card.Header>\n            <Card.Body>\n              <ThemeProvider theme={theme}>\n                <MaterialTable \n                  columns={[\n                    {title: 'EMP ID', field: 'user.id'},\n                    {title: 'Full Name', field: 'user.fullName'},\n                    {title: 'Gross Salary', field: 'salaryGross'},\n                    {title: 'Deductions', field: 'deductionTotal'},\n                    {title: 'Net Salary', field: 'salaryNet'},\n                    {title: 'Emp Type', field: 'employmentType'},\n                    {\n                      title: 'View',\n                      render: rowData => (\n                        <Form>\n                          <Button size=\"sm\" variant=\"info\" onClick={this.onView(rowData)}><i className=\"far fa-address-card\"></i></Button>\n                        </Form>\n                      )\n                    },\n                    {\n                      title: 'Action',\n                      render: rowData => (\n                        <>\n                          <Button size=\"sm\" variant=\"info\" className=\"mr-2\" onClick={this.onEdit(rowData)}><i className=\"far fa-edit\"></i>Edit</Button>\n                        </>\n                      )\n                    }\n                  ]}\n                  data={this.state.financialInformations}\n                  options={{\n                    rowStyle: (rowData, index) => {\n                      if(index%2) {\n                        return {backgroundColor: '#f2f2f2'}\n                      }\n                    },\n                    pageSize: 10,\n                    pageSizeOptions: [10, 20, 30, 50, 75, 100]\n                  }}\n                  title=\"Employees\"\n                />\n              </ThemeProvider>\n            </Card.Body>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Row, Col, Form } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport { getUsers, getSalaryDetails } from '../utils/localStorage'\n\nexport default class SalaryView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      currentJobTitle: null,\n      falseRedirect: false,\n      editRedirect: false\n    };\n  }\n\n  componentDidMount() {\n      if(this.props.location.state) {\n          // Use localStorage instead of axios\n          const allUsers = getUsers();\n          const user = allUsers.find(u => u.id == this.props.location.state.selectedUser.user.id);\n          \n          if (user) {\n              this.setState({user: user}, () => {\n                  // Simulate job data if needed\n                  if(user.jobs) {\n                      user.jobs.map(job => {\n                          if(new Date(job.startDate).setHours(0) < new Date() && new Date(job.endDate).setHours(24) > new Date()) {\n                              this.setState({currentJobTitle: job.jobTitle})\n                          }\n                      })\n                  }\n              })\n          } else {\n              this.setState({falseRedirect: true})\n          }\n      } else {\n          this.setState({falseRedirect: true})\n      }\n  }\n\n  onEdit = () => {\n    this.setState({editRedirect: true})\n  }\n\n  render() {\n    return (\n        <div className=\"container-fluid pt-3\">\n            {this.state.falseRedirect ? <Redirect to=\"/\" /> : (<></>)}\n            {this.state.editRedirect ? (<Redirect to={{pathname: \"/salary-details\", state: {selectedUser: this.state.user}}} />) : null}\n            {this.state.user ? (\n                <Row>\n                    <Col sm={12}>\n                        <Card>\n                            <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\", fontSize: '17px' }}>Employee Salary Detail <Form className=\"float-right\"><span style={{cursor: 'pointer'}} onClick={this.onEdit}><i className=\"far fa-edit\"></i> Edit</span></Form></Card.Header>\n                            <Card.Body>\n                                <Card.Title><strong>{this.state.user.fullName}</strong></Card.Title>\n                                <Card.Text>\n                                    <Col lg={12}>\n                                        <Row className=\"pt-4\">\n                                            <Col lg={3}>\n                                                <img className=\"img-circle elevation-1 bp-2\" src={process.env.PUBLIC_URL + '/user-128.png'}></img>\n                                            </Col>\n                                            <Col className=\"pt-4\" lg={9}>\n                                                <div className=\"emp-view-list\">\n                                                    <ul>\n                                                        <li><span>Employee ID: </span> {this.state.user.id}</li>\n                                                        <li><span>Department: </span> {this.state.user.department.departmentName}</li>\n                                                        <li><span>Job Title: </span> {this.state.currentJobTitle}</li>\n                                                        <li><span>Role: </span>{this.state.user.role==='ROLE_ADMIN' ? 'Admin' : this.state.user.role==='ROLE_MANAGER' ? 'Manager' : 'Employee'}</li>\n                                                    </ul>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"pt-4\">\n                                            <Col sm={6}>\n                                                <Card className=\"secondary-card sal-view\">\n                                                    <Card.Header>Salary Details</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-details\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Employment Type: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    {this.state.user.user_financial_info.employmentType}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Basic Salary: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.salaryBasic}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                            <Col sm={6}>\n                                                <Card className=\"secondary-card sal-view\">\n                                                    <Card.Header>Allowances</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-allowances\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    House Rent Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.allowanceHouseRent}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Medical Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.allowanceMedical}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Special Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.allowanceSpecial}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Fuel Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.allowanceFuel}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Phone Bill Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.allowancePhoneBill}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Other Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.allowanceOther}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Total Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.allowanceTotal}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col cm={6}>\n                                                <Card className=\"secondary-card\">\n                                                    <Card.Header>Deductions</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-deductions\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Tax Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.deductionTax}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Other Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.deductionOther}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Total Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.deductionTotal}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                            <Col sm={6}>\n                                            <Card className=\"secondary-card\">\n                                                    <Card.Header>Total Salary Details</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-total\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Gross Salary: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.salaryGross}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Total Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.deductionTotal}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Net Salary: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.user_financial_info.salaryNet}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            ) : null}\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Row, Col, Form } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport { getUsers, getDepartments, getSalaryDetails } from '../../utils/localStorage'\n\nexport default class SalaryView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      currentJobTitle: null,\n      falseRedirect: false\n    };\n  }\n\n  componentDidMount() {\n      if(this.props.location.state) {\n          // Use localStorage instead of axios\n          const allUsers = getUsers();\n          const departments = getDepartments();\n          const salaryDetails = getSalaryDetails();\n          \n          const user = allUsers.find(u => u.id == this.props.location.state.selectedUser.user.id);\n          \n          if (user) {\n              // Add department info to user\n              const department = departments.find(dept => dept.id == user.departmentId);\n              const userWithDepartment = {\n                  ...user,\n                  department: department ? { departmentName: department.departmentName } : { departmentName: 'Unknown' }\n              };\n              \n              this.setState({user: userWithDepartment}, () => {\n                  // Set current job title\n                  if(user.jobs) {\n                      user.jobs.map(job => {\n                          if(new Date(job.startDate).setHours(0) < new Date() && new Date(job.endDate).setHours(24) > new Date()) {\n                              this.setState({currentJobTitle: job.jobTitle})\n                          }\n                      })\n                  }\n              })\n          } else {\n              this.setState({falseRedirect: true})\n          }\n      } else {\n          this.setState({falseRedirect: true})\n      }\n  }\n\n  render() {\n    return (\n        <div className=\"container-fluid pt-3\">\n            {this.state.falseRedirect ? <Redirect to=\"/\" /> : (<></>)}\n            {this.state.user ? (\n                <Row>\n                    <Col sm={12}>\n                        <Card>\n                            <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\", fontSize: '17px' }}>Employee Salary Detail</Card.Header>\n                            <Card.Body>\n                                <Card.Title><strong>{this.state.user.fullName || `${this.state.user.firstName} ${this.state.user.lastName}`}</strong></Card.Title>\n                                <Card.Text>\n                                    <Col lg={12}>\n                                        <Row className=\"pt-4\">\n                                            <Col lg={3}>\n                                                <img className=\"img-circle elevation-1 bp-2\" src={process.env.PUBLIC_URL + '/user-128.png'}></img>\n                                            </Col>\n                                            <Col className=\"pt-4\" lg={9}>\n                                                <div className=\"emp-view-list\">\n                                                    <ul>\n                                                        <li><span>Employee ID: </span> {this.state.user.id}</li>\n                                                        <li><span>Department: </span> {this.state.user.department.departmentName}</li>\n                                                        <li><span>Job Title: </span> {this.state.currentJobTitle}</li>\n                                                        <li><span>Role: </span>{this.state.user.role==='ROLE_ADMIN' ? 'Admin' : this.state.user.role==='ROLE_MANAGER' ? 'Manager' : 'Employee'}</li>\n                                                    </ul>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"pt-4\">\n                                            <Col sm={6}>\n                                                <Card className=\"secondary-card sal-view\">\n                                                    <Card.Header>Salary Details</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-details\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Employment Type: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    {this.state.user.employmentType}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Basic Salary: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.salaryBasic}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                            <Col sm={6}>\n                                                <Card className=\"secondary-card sal-view\">\n                                                    <Card.Header>Allowances</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-allowances\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    House Rent Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceHouseRent}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Medical Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceMedical}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Special Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceSpecial}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Fuel Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceFuel}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Phone Bill Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowancePhoneBill}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Other Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceOther}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Total Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceTotal}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col cm={6}>\n                                                <Card className=\"secondary-card\">\n                                                    <Card.Header>Deductions</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-deductions\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Tax Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.deductionTax}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Other Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.deductionOther}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Total Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.deductionTotal}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                            <Col sm={6}>\n                                            <Card className=\"secondary-card\">\n                                                    <Card.Header>Total Salary Details</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-total\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Gross Salary: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.salaryGross}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Total Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.deductionTotal}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Net Salary: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.salaryNet}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            ) : null}\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Row, Col, Form } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport { getUsers, getDepartments } from '../../utils/localStorage'\n\nexport default class SalaryViewEmployee extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      currentJobTitle: null\n    };\n  }\n\n  componentDidMount() {\n        let id = JSON.parse(localStorage.getItem('user')).id\n        \n        // Use localStorage instead of axios\n        const allUsers = getUsers();\n        const departments = getDepartments();\n        \n        const user = allUsers.find(u => u.id == id);\n        \n        if (user) {\n            // Add department info to user\n            const department = departments.find(dept => dept.id == user.departmentId);\n            const userWithDepartment = {\n                ...user,\n                department: department ? { departmentName: department.departmentName } : { departmentName: 'Unknown' }\n            };\n            \n            this.setState({user: userWithDepartment}, () => {\n                // Set current job title\n                if(user.jobs) {\n                    user.jobs.map(job => {\n                        if(new Date(job.startDate).setHours(0) < new Date() && new Date(job.endDate).setHours(24) > new Date()) {\n                            this.setState({currentJobTitle: job.jobTitle})\n                        }\n                    })\n                }\n            })\n        }\n  }\n\n  render() {\n    return (\n        <div className=\"container-fluid pt-3\">\n            {this.state.user ? (\n                <Row>\n                    <Col sm={12}>\n                        <Card>\n                            <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\", fontSize: '17px' }}>Employee Salary Detail</Card.Header>\n                            <Card.Body>\n                                <Card.Title><strong>{this.state.user.fullName || `${this.state.user.firstName} ${this.state.user.lastName}`}</strong></Card.Title>\n                                <Card.Text>\n                                    <Col lg={12}>\n                                        <Row className=\"pt-4\">\n                                            <Col lg={3}>\n                                                <img className=\"img-circle elevation-1 bp-2\" src={process.env.PUBLIC_URL + '/user-128.png'}></img>\n                                            </Col>\n                                            <Col className=\"pt-4\" lg={9}>\n                                                <div className=\"emp-view-list\">\n                                                    <ul>\n                                                        <li><span>Employee ID: </span> {this.state.user.id}</li>\n                                                        <li><span>Department: </span> {this.state.user.department.departmentName}</li>\n                                                        <li><span>Job Title: </span> {this.state.currentJobTitle}</li>\n                                                        <li><span>Role: </span>{this.state.user.role==='ROLE_ADMIN' ? 'Admin' : this.state.user.role==='ROLE_MANAGER' ? 'Manager' : 'Employee'}</li>\n                                                    </ul>\n                                                </div>\n                                            </Col>\n                                        </Row>\n                                        <Row className=\"pt-4\">\n                                            <Col sm={6}>\n                                                <Card className=\"secondary-card sal-view\">\n                                                    <Card.Header>Salary Details</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-details\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Employment Type: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    {this.state.user.employmentType}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Basic Salary: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.salaryBasic}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                            <Col sm={6}>\n                                                <Card className=\"secondary-card sal-view\">\n                                                    <Card.Header>Allowances</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-allowances\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    House Rent Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceHouseRent}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Medical Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceMedical}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Special Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceSpecial}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Fuel Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceFuel}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Phone Bill Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowancePhoneBill}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Other Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceOther}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Total Allowance: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.allowanceTotal}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                        <Row>\n                                            <Col cm={6}>\n                                                <Card className=\"secondary-card\">\n                                                    <Card.Header>Deductions</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-deductions\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Tax Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.deductionTax}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Other Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.deductionOther}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Total Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.deductionTotal}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                            <Col sm={6}>\n                                            <Card className=\"secondary-card\">\n                                                    <Card.Header>Total Salary Details</Card.Header>\n                                                    <Card.Body>\n                                                        <Card.Text id=\"sal-view-total\">\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Gross Salary: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.salaryGross}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Total Deduction: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.deductionTotal}\n                                                                </span>\n                                                            </Form.Group>\n                                                            <Form.Group as={Row}>\n                                                                <Form.Label className=\"label\">\n                                                                    Net Salary: \n                                                                </Form.Label>\n                                                                <span>\n                                                                    TSh {this.state.user.salaryNet}\n                                                                </span>\n                                                            </Form.Group>\n                                                        </Card.Text>\n                                                    </Card.Body>\n                                                </Card>\n                                            </Col>\n                                        </Row>\n                                    </Col>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            ) : null}\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert, Badge } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport { Redirect } from 'react-router-dom'\nimport JobAddModal from './JobAddModal'\nimport JobEditModal from './JobEditModal'\nimport JobDeleteModal from './JobDeleteModal'\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport AlertModal from './AlertModal'\nimport { getDepartments, getUsers, getSalaryDetails, addPaymentToStorage } from '../utils/localStorage'\n\nexport default class Payment extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            departments: [],\n            users: [],\n            selectedDepartment: null,\n            selectedUser: null,\n            selectedDate: null,\n            salaryGross: null,\n            salaryNet: null,\n            deductionTotal: null,\n            paymentFine: 0,\n            paymentAmount: 0,\n            paymentType: \"\",\n            comments: \"\",\n            payments: [],\n            hasError: false,\n            errMsg: \"\",\n            completed: false,\n            showHistory: false\n        }\n    }\n\n    componentDidMount() {\n        const departments = getDepartments();\n        this.setState({departments: departments});\n    }\n\n    fetchData = () => {\n        const allUsers = getUsers();\n        const departmentUsers = allUsers.filter(user => \n            user.departmentId == this.state.selectedDepartment\n        );\n        this.setState({users: departmentUsers});\n    }\n\n    fetchDataAll = () => {\n        const allUsers = getUsers();\n        this.setState({users: allUsers});\n    }\n\n    pushDepartments = () => {\n        let items= []\n        items.push(<option key={584390} value=\"all\">All departments</option>)\n        this.state.departments.map((dept, index) => {\n            if(this.state.selectedDepartment == dept.id) {\n                items.push(<option key={index} value={dept.id} defaultValue>{dept.departmentName}</option>)\n            } else {\n                items.push(<option key={index} value={dept.id}>{dept.departmentName}</option>)\n            }\n        })\n        return items\n    }\n\n    pushUsers = () => {\n        let items = []\n        \n        this.state.users.map((user, index) => {\n            items.push(<option key={index} value={user.id}>{user.fullName}</option>)\n        })\n\n        return items\n    }\n\n    handleDepartmentChange = (event) => {\n        this.setState({selectedDepartment: event.target.value}, () => {\n            if(this.state.selectedDepartment === \"all\") {\n                this.fetchDataAll()\n            } else {\n                this.fetchData()\n            }\n        })\n    }\n\n    handleUserChange = (event) => {\n        this.state.users.map(user => {\n            if(user.id == event.target.value) {\n                this.setState({selectedUser: event.target.value})\n            }\n        })\n    }\n\n    findPayments = (event) => {\n        if(event) {\n            event.preventDefault()\n        }\n\n        // Replace axios calls with localStorage operations\n        this.fetchUserData();\n        this.setState({showHistory: true});\n    }\n\n    fetchUserData = () => {\n        const salaryDetails = getSalaryDetails();\n        const userSalary = salaryDetails.find(salary => salary.userId == this.state.selectedUser);\n        \n        if (userSalary) {\n            this.setState({\n                salaryGross: userSalary.grossSalary,\n                salaryNet: userSalary.netSalary,\n                deductionTotal: userSalary.deductions\n            });\n        }\n\n        // Get payment history from localStorage\n        const payments = JSON.parse(localStorage.getItem('payments')) || [];\n        const userPayments = payments.filter(payment => payment.userId == this.state.selectedUser);\n        this.setState({payments: userPayments, showHistory: true});\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault()\n        let currentJobId = null;\n\n        this.state.users.map(user => {\n            if(user.id == this.state.selectedUser) {\n                if(user.jobs) {\n                    user.jobs.map(job => {\n                        if(new Date(job.startDate).setHours(0) < new Date() && new Date(job.endDate).setHours(24) > new Date()) {\n                            currentJobId = job.id\n                        }\n                    })\n                }\n            }\n        })\n\n        let newPayment = {\n            paymentType: this.state.paymentType,\n            paymentMonth: moment(this.state.selectedDate).format('YYYY-MM'),\n            paymentDate: moment(new Date()).format('YYYY-MM-DD'),\n            paymentFine: this.state.paymentFine,\n            paymentAmount: this.state.salaryNet - this.state.paymentFine,\n            comments: this.state.comments,\n            jobId: currentJobId\n        }\n\n        console.log(newPayment)\n\n        try {\n            addPaymentToStorage({\n                ...newPayment,\n                userId: this.state.selectedUser,\n                id: Date.now()\n            });\n            this.fetchUserData();\n            toast.success(\"Payment has been inserted successfully!\");\n            window.scrollTo(0, 0)\n        } catch (err) {\n            toast.error(\"Error inserting payment: \" + err.message);\n            window.scrollTo(0, 0)\n        }\n    }\n    \n  render() {\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n\n    return (\n      <div className=\"container-fluid pt-2\">\n        <div className=\"row\">\n            <div className=\"col-sm-12\">\n                <Card className=\"main-card\">\n                    <Card.Header>Manage Salary Details</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            <Form onSubmit={this.findPayments}>\n                                <Form.Group>\n                                    <Form.Label>Select Department: </Form.Label>\n                                    <Form.Control\n                                        as=\"select\"\n                                        className=\"select-css\"\n                                        value={this.state.selectedDepartment}\n                                        onChange={this.handleDepartmentChange}\n                                        required\n                                    >\n                                        <option key={34432432} value=\"\">Choose one...</option>\n                                        {this.pushDepartments()}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Select User: </Form.Label>\n                                    <Form.Control\n                                        as=\"select\" \n                                        className=\"select-css\"\n                                        value={this.state.selectedUser || ''}\n                                        onChange={this.handleUserChange}\n                                        required\n                                    >\n                                        <option value=\"\">Choose one...</option>\n                                        {this.pushUsers()}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Select Month: </Form.Label>\n                                    <Form.Row>\n                                    <DatePicker\n                                        className=\"form-control ml-1\"\n                                        placeholderText=\"Pick Month\"\n                                        selected={this.state.selectedDate}\n                                        onChange={newDate => this.setState({selectedDate: newDate})}\n                                        dateFormat=\"MM/yyy\"\n                                        showMonthYearPicker\n                                        required\n                                    />\n                                    </Form.Row>\n                                </Form.Group>\n                                <Button type=\"submit\" className=\"mt-2\" size=\"sm\">Search</Button>\n                            </Form>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n        {this.state.showHistory ? (\n            <div className=\"row\">\n                <div className=\"col-sm-3\">\n                    <Card className=\"secondary-card\">\n                        <Card.Header>Payment for {monthNames[new Date(this.state.selectedDate).getMonth()]},{new Date(this.state.selectedDate).getFullYear()}</Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                <Form onSubmit={this.onSubmit}>\n                                    <Form.Group>\n                                        <Form.Label className=\"required\">Gross Salary </Form.Label>\n                                        <Form.Control\n                                            type=\"number\"\n                                            value={this.state.salaryGross}\n                                            onChange={this.handleChange}\n                                            name=\"salaryGross\"\n                                            readOnly\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label className=\"required\">Total Deduction</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            value={this.state.deductionTotal}\n                                            onChange={this.handleChange}\n                                            name=\"deductionTotal\"\n                                            readOnly\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label className=\"required\">Net Salary</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            value={this.state.salaryNet}\n                                            onChange={this.handleChange}\n                                            name=\"salaryNet\"\n                                            readOnly\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Fine Deduction</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            value={this.state.paymentFine}\n                                            onChange={this.handleChange}\n                                            name=\"paymentFine\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Payment Amount</Form.Label>\n                                        <Form.Control \n                                            type=\"number\"\n                                            value={this.state.salaryNet - this.state.paymentFine}\n                                            onChange={this.handleChange}\n                                            name=\"paymentAmount\"\n                                            readOnly\n                                        />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label className=\"required\">Payment Type </Form.Label>\n                                        <Form.Control \n                                            as=\"select\"\n                                            value={this.state.paymentType}\n                                            onChange={this.handleChange}\n                                            name=\"paymentType\"\n                                            required\n                                        >\n                                            <option value=\"\">Choose one...</option>\n                                            <option value=\"Cash\">Cash</option>\n                                            <option value=\"Bank Transfer\">Bank Transfer</option>\n                                            <option value=\"Cheque\">Cheque</option>\n                                        </Form.Control>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Form.Label>Comments</Form.Label>\n                                        <Form.Control \n                                            type=\"text\"\n                                            value={this.state.comments}\n                                            onChange={this.handleChange}\n                                            name=\"comments\"\n                                        />\n                                    </Form.Group>\n                                <Button type=\"submit\" className=\"mt-1\">Save</Button>\n                                </Form>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n                <div className=\"col-sm-9\">\n                    <Card className=\"main-card\">\n                        <Card.Header>Payment History</Card.Header>\n                        <Card.Body>\n                            <Card.Text>\n                                <ThemeProvider theme={theme}>\n                                    <MaterialTable \n                                    columns={[\n                                        {\n                                            title: 'Payment Month',\n                                            render: rowData => (\n                                               monthNames[new Date(rowData.paymentMonth).getMonth()] + \"-\" + new Date(rowData.paymentMonth).getFullYear()\n                                            )\n                                        },\n                                        {\n                                            title: 'Payment Date',\n                                            render: rowData => (\n                                                moment(rowData.paymentDate).format('DD-MMM-YY')\n                                            )\n                                        },\n                                        {title: 'Gross Salary', field: 'job.user.user_financial_info.salaryGross'},\n                                        {title: 'Department', field: 'job.user.user_financial_info.deductionTotal'},\n                                        {title: 'Net Salary', field: 'job.user.user_financial_info.salaryNet'},\n                                        {\n                                            title: 'Fine Deduction', \n                                            render: rowData => (\n                                                rowData.paymentFine || 0\n                                            )\n                                        },\n                                        {title: 'Payment Amount', field: 'paymentAmount'},\n                                    ]}\n                                    data={this.state.payments}\n                                    options={{\n                                        rowStyle: (rowData, index) => {\n                                        if(index%2) {\n                                            return {backgroundColor: '#f2f2f2'}\n                                        }\n                                        },\n                                        pageSize: 10,\n                                        pageSizeOptions: [10, 20, 30, 50, 75, 100]\n                                    }}\n                                    title=\"History\"\n                                    />\n                                </ThemeProvider>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n        ) : null}\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert, Badge } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport JobAddModal from './JobAddModal'\nimport JobEditModal from './JobEditModal'\nimport JobDeleteModal from './JobDeleteModal'\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport AlertModal from './AlertModal'\nimport { getDepartments, addExpenseToStorage } from '../utils/localStorage'\n\nexport default class Expense extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            departments: [],\n            selectedDepartment: null,\n            itemName: \"\",\n            purchasedFrom: \"\",\n            purchaseDate: \"\",\n            amountSpent: 0,\n            hasError: false,\n            errMsg: \"\",\n        }\n    }\n\n    componentDidMount() {\n        // Force initialization - always set departments\n        const defaultDepartments = [\n            { id: 1, departmentName: 'Human Resources', description: 'HR Department', createdAt: new Date().toISOString() },\n            { id: 2, departmentName: 'Information Technology', description: 'IT Department', createdAt: new Date().toISOString() },\n            { id: 3, departmentName: 'Sales', description: 'Sales Department', createdAt: new Date().toISOString() },\n            { id: 4, departmentName: 'Marketing', description: 'Marketing Department', createdAt: new Date().toISOString() },\n            { id: 5, departmentName: 'Finance', description: 'Finance Department', createdAt: new Date().toISOString() }\n        ];\n        \n        // Always set in localStorage and state\n        localStorage.setItem('hrms_departments', JSON.stringify(defaultDepartments));\n        console.log('DEBUG: Setting departments in Expense:', defaultDepartments);\n        this.setState({departments: defaultDepartments}, () => {\n            console.log('DEBUG: Expense departments state:', this.state.departments);\n        });\n    }\n\n    pushDepartments = () => {\n        let items= []\n        this.state.departments.map((dept, index) => {\n            items.push(<option key={index} value={dept.id}>{dept.departmentName}</option>)\n        })\n        return items\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault()\n\n        let newExpense = {\n            expenseItemName: this.state.itemName,\n            expenseItemStore: this.state.purchasedFrom,\n            date: new Date(this.state.purchaseDate).setHours(15),\n            amount: this.state.amountSpent,\n            departmentId: this.state.selectedDepartment\n        }\n\n        try {\n            addExpenseToStorage({\n                ...newExpense,\n                id: Date.now()\n            });\n            this.setState({completed: true})\n        } catch (err) {\n            this.setState({hasError: true, errMsg: err.message})\n            window.scrollTo(0, 0)\n        }\n    }\n    \n  render() {\n\n    return (\n      <div className=\"container-fluid pt-2\">\n        <div className=\"row\">\n\n          {this.state.hasError ? (\n            <Alert variant=\"danger\" className=\"m-3\" block>\n              {this.state.errMsg}\n            </Alert>\n          ): this.state.completed ? (\n            <Alert variant=\"success\" className=\"m-3\">\n                Expense has been inserted.\n            </Alert>\n          ) : null}\n\n            <div className=\"col-sm-12\">\n                <Card className=\"main-card\">\n                    <Card.Header>Add Expense</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            <Form onSubmit={this.onSubmit}>\n                                <Form.Group>\n                                    <Form.Label>Item Name: </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        value={this.state.itemName}\n                                        onChange={this.handleChange}\n                                        name=\"itemName\"\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Purchased From: </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        value={this.state.purchasedFrom}\n                                        onChange={this.handleChange}\n                                        name=\"purchasedFrom\"\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Purchase Date: </Form.Label>\n                                    <Form.Row>\n                                    <DatePicker\n                                        className=\"form-control ml-1\"\n                                        placeholderText=\"Pick Date\"\n                                        selected={this.state.purchaseDate}\n                                        onChange={newDate => this.setState({purchaseDate: newDate})}\n                                        required\n                                    />\n                                    </Form.Row>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Amount Spent: </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        value={this.state.amountSpent}\n                                        onChange={this.handleChange}\n                                        name=\"amountSpent\"\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Select Department: </Form.Label>\n                                    <Form.Control\n                                        as=\"select\"\n                                        value={this.state.selectedDepartment}\n                                        onChange={this.handleChange}\n                                        name=\"selectedDepartment\"\n                                        required\n                                    >\n                                        <option value=\"\">Choose one...</option>\n                                        {this.pushDepartments()}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Button type=\"submit\" className=\"mt-2\" size=\"sm\">Save</Button>\n                            </Form>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert, Badge } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\nimport DatePicker from 'react-datepicker'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { toast } from 'react-toastify';\nimport { addExpenseToStorage } from '../../utils/localStorage'\n\nexport default class Expense extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            departments: [],\n            selectedDepartment: null,\n            itemName: \"\",\n            purchasedFrom: \"\",\n            purchaseDate: \"\",\n            amountSpent: 0,\n            hasError: false,\n            errMsg: \"\",\n            completed: false\n        }\n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault()\n\n        let deptId = JSON.parse(localStorage.getItem('user')).departmentId\n        let userId = JSON.parse(localStorage.getItem('user')).id\n\n        let newExpense = {\n            expenseItemName: this.state.itemName,\n            expenseItemStore: this.state.purchasedFrom,\n            date: this.state.purchaseDate,\n            amount: parseFloat(this.state.amountSpent),\n            departmentId: deptId,\n            userId: userId,\n            status: 'pending'\n        }\n\n        try {\n            addExpenseToStorage(newExpense);\n            this.setState({completed: true});\n            toast.success(\"Expense has been inserted successfully!\");\n        } catch (err) {\n            toast.error(\"Failed to insert expense: \" + err.message);\n            window.scrollTo(0, 0)\n        }\n    }\n    \n  render() {\n\n    return (\n      <div className=\"container-fluid pt-2\">\n        <div className=\"row\">\n\n          {this.state.hasError ? (\n            <Alert variant=\"danger\" className=\"m-3\" block>\n              {this.state.errMsg}\n            </Alert>\n          ): this.state.completed ? (\n            <Alert variant=\"success\" className=\"m-3\">\n                Expense has been inserted.\n            </Alert>\n          ) : null}\n\n            <div className=\"col-sm-12\">\n                <Card className=\"main-card\">\n                    <Card.Header>Add Expense</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            <Form onSubmit={this.onSubmit}>\n                                <Form.Group>\n                                    <Form.Label>Item Name: </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        value={this.state.itemName}\n                                        onChange={this.handleChange}\n                                        name=\"itemName\"\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Purchased From: </Form.Label>\n                                    <Form.Control\n                                        type=\"text\"\n                                        value={this.state.purchasedFrom}\n                                        onChange={this.handleChange}\n                                        name=\"purchasedFrom\"\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Purchase Date: </Form.Label>\n                                    <Form.Row>\n                                    <DatePicker\n                                        className=\"form-control ml-1\"\n                                        placeholderText=\"Pick Date\"\n                                        selected={this.state.purchaseDate}\n                                        onChange={newDate => this.setState({purchaseDate: newDate})}\n                                        required\n                                    />\n                                    </Form.Row>\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Amount Spent: </Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        value={this.state.amountSpent}\n                                        onChange={this.handleChange}\n                                        name=\"amountSpent\"\n                                        required\n                                    />\n                                </Form.Group>\n                                <Button type=\"submit\" className=\"mt-2\" size=\"sm\">Save</Button>\n                            </Form>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Badge, Button, Form, Modal } from \"react-bootstrap\";\nimport {Redirect} from 'react-router-dom'\nimport MaterialTable from 'material-table'\nimport DatePicker from 'react-datepicker'\nimport DeleteModal from './DeleteModal'\nimport moment from 'moment'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { getUsers, getExpenses } from '../utils/localStorage'\n\nexport default class ExpenseReport extends Component {\n  \n  constructor(props) {\n    super(props)\n\n    this.state = {\n      expenses: [],\n      selectedDate: null\n    }\n  }\n\n  componentDidMount() {\n    // Use localStorage instead of axios\n    const users = getUsers();\n    this.setState({users: users});\n  }\n\n  onSubmit = (event) => {\n      event.preventDefault()\n\n      // Use localStorage instead of axios\n      const allExpenses = getExpenses();\n      let expenses = []\n      allExpenses.map(expense => {\n          if(new Date(expense.date).getMonth() == new Date(this.state.selectedDate).getMonth() && new Date(expense.date).getFullYear() == new Date(this.state.selectedDate).getFullYear()) {\n            expenses.push(expense)\n          }\n      })\n      this.setState({expenses: expenses})\n  }\n\n  render() {\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n\n    return (\n      <div className=\"container-fluid pt-4\">\n        <div className=\"row\">\n            <div className=\"col-sm-3\"></div>\n            <div className=\"col-sm-9\">\n                <h4>\n                    <a className=\"fa fa-plus mb-2 ml-2\" href=\"/expense\">\n                        Add Expense\n                    </a>\n                </h4>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-sm-3\">\n                <Card className=\"secondary-card\">\n                    <Card.Header>Select Date</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            <Form onSubmit={this.onSubmit}>\n                                <Form.Group>\n                                    <Form.Label>Select Date</Form.Label>\n                                    <DatePicker \n                                        selected={this.state.selectedDate}\n                                        className=\"form-control ml-1\"\n                                        onChange={newDate => this.setState({selectedDate: newDate})}\n                                        showMonthYearPicker\n                                        dateFormat=\"MMM yyyy\"\n                                    />\n                                </Form.Group>\n                                <Button size=\"sm\" type=\"submit\">Search</Button>\n                            </Form>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n            <div className=\"col-sm-9\">\n                <Card>\n                    <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\" }}>\n                        <div className=\"panel-title\">\n                            <strong>Expenses</strong>\n                        </div>\n                    </Card.Header>\n                    <Card.Body>\n                    <ThemeProvider theme={theme}>\n                        <MaterialTable \n                        columns={[\n                            {title: 'ID', field: 'id'},\n                            {title: 'Item Name', field: 'expenseItemName'},\n                            {title: 'Purchased From', field: 'expenseItemStore'},\n                            {\n                                title: 'Purchase Date', \n                                render: rowData => (\n                                    moment(rowData.date).format('DD MMM,YYYY')\n                                )\n                            },\n                            {title: 'Department', field: 'department.departmentName'},\n                            {\n                                title: 'Amount', \n                                render: rowData => (\n                                    \"TSh \" + rowData.amount\n                                )\n                            },\n                            {accessor: 'cash', footer: \"Total:\" + 1}\n                        ]}\n                        data={this.state.expenses}\n                        options={{\n                            rowStyle: (rowData, index) => {\n                            if(index%2) {\n                                return {backgroundColor: '#f2f2f2'}\n                            }\n                            },\n                            pageSize: 10,\n                            pageSizeOptions: [10, 20, 30, 50, 75, 100]\n                        }}\n                        title=\"Expense Report\"\n                        />\n                    </ThemeProvider>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Badge, Button, Form, Modal } from \"react-bootstrap\";\nimport {Redirect} from 'react-router-dom'\nimport MaterialTable from 'material-table'\nimport DatePicker from 'react-datepicker'\nimport moment from 'moment'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { getExpenses, getUsers, getDepartments } from '../../utils/localStorage'\n\nexport default class ExpenseReport extends Component {\n  \n  constructor(props) {\n    super(props)\n\n    this.state = {\n      expenses: [],\n      selectedDate: null\n    }\n  }\n\n  componentDidMount() {\n    // No need to fetch users here since we're filtering by department\n  }\n\n  onSubmit = (event) => {\n      event.preventDefault()\n\n      let deptId = JSON.parse(localStorage.getItem('user')).departmentId\n\n      // Use localStorage instead of axios\n      const allExpenses = getExpenses();\n      const allUsers = getUsers();\n      const departments = getDepartments();\n      \n      // Filter expenses by department\n      const deptExpenses = allExpenses.filter(expense => {\n          const user = allUsers.find(u => u.id == expense.userId);\n          return user && user.departmentId == deptId;\n      });\n      \n      // Filter expenses by selected date\n      const selectedExpenses = deptExpenses.filter(expense => {\n          if (!this.state.selectedDate) return false;\n          return new Date(expense.date).getMonth() == new Date(this.state.selectedDate).getMonth() && \n                 new Date(expense.date).getFullYear() == new Date(this.state.selectedDate).getFullYear();\n      });\n      \n      // Format expenses with department info\n      const formattedExpenses = selectedExpenses.map(expense => {\n          const user = allUsers.find(u => u.id == expense.userId);\n          const department = user ? departments.find(d => d.id == user.departmentId) : null;\n          return {\n              ...expense,\n              department: department ? { departmentName: department.departmentName } : { departmentName: 'Unknown' }\n          };\n      });\n      \n      this.setState({expenses: formattedExpenses});\n  }\n\n  render() {\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n            \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n        ];\n\n    return (\n      <div className=\"container-fluid pt-4\">\n        <div className=\"row\">\n            <div className=\"col-sm-3\"></div>\n            <div className=\"col-sm-9\">\n                <h4>\n                    <a className=\"fa fa-plus mb-2 ml-2\" href=\"/expense\">\n                        Add Expense\n                    </a>\n                </h4>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-sm-3\">\n                <Card className=\"secondary-card\">\n                    <Card.Header>Select Date</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            <Form onSubmit={this.onSubmit}>\n                                <Form.Group>\n                                    <Form.Label>Select Date</Form.Label>\n                                    <DatePicker \n                                        selected={this.state.selectedDate}\n                                        className=\"form-control ml-1\"\n                                        onChange={newDate => this.setState({selectedDate: newDate})}\n                                        showMonthYearPicker\n                                        dateFormat=\"MMM yyyy\"\n                                    />\n                                </Form.Group>\n                                <Button size=\"sm\" type=\"submit\">Search</Button>\n                            </Form>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n            <div className=\"col-sm-9\">\n                <Card>\n                    <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\" }}>\n                        <div className=\"panel-title\">\n                            <strong>Expenses</strong>\n                        </div>\n                    </Card.Header>\n                    <Card.Body>\n                    <ThemeProvider theme={theme}>\n                        <MaterialTable \n                        columns={[\n                            {title: 'ID', field: 'id'},\n                            {title: 'Item Name', field: 'expenseItemName'},\n                            {title: 'Purchased From', field: 'expenseItemStore'},\n                            {\n                                title: 'Purchase Date', \n                                render: rowData => (\n                                    moment(rowData.date).format('DD MMM,YYYY')\n                                )\n                            },\n                            {title: 'Department', field: 'department.departmentName'},\n                            {\n                                title: 'Amount', \n                                render: rowData => (\n                                    \"TSh \" + rowData.amount\n                                )\n                            },\n                            {accessor: 'cash', footer: \"Total:\" + 1}\n                        ]}\n                        data={this.state.expenses}\n                        options={{\n                            rowStyle: (rowData, index) => {\n                            if(index%2) {\n                                return {backgroundColor: '#f2f2f2'}\n                            }\n                            },\n                            pageSize: 10,\n                            pageSizeOptions: [10, 20, 30, 50, 75, 100]\n                        }}\n                        title=\"Expense Report\"\n                        />\n                    </ThemeProvider>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert } from \"react-bootstrap\";\nimport { Redirect, NavLink } from 'react-router-dom'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport AlertModal from './AlertModal'\nimport { getAnnouncements, addAnnouncementToStorage, getUsers, getDepartments } from '../utils/localStorage'\n\nexport default class Announcement extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            announcements: [],\n            departments: [],\n            title: \"\",\n            description: \"\",\n            userId: null,\n            departmentId: null,\n            hasError: false,\n            errorMsg: '',\n            completed: false,\n            showEditModel: false,\n            showAlertModel: false\n        }\n    }\n\n    componentDidMount() {\n        // Force initialization - always set departments\n        const defaultDepartments = [\n            { id: 1, departmentName: 'Human Resources', description: 'HR Department', createdAt: new Date().toISOString() },\n            { id: 2, departmentName: 'Information Technology', description: 'IT Department', createdAt: new Date().toISOString() },\n            { id: 3, departmentName: 'Sales', description: 'Sales Department', createdAt: new Date().toISOString() },\n            { id: 4, departmentName: 'Marketing', description: 'Marketing Department', createdAt: new Date().toISOString() },\n            { id: 5, departmentName: 'Finance', description: 'Finance Department', createdAt: new Date().toISOString() }\n        ];\n        \n        // Always set in localStorage and state\n        localStorage.setItem('hrms_departments', JSON.stringify(defaultDepartments));\n        console.log('DEBUG: Setting departments in Announcement:', defaultDepartments);\n        \n        const announcements = getAnnouncements();\n        const users = getUsers();\n        \n        // Transform announcements to match expected format\n        const transformedAnnouncements = announcements.map(announcement => ({\n            id: announcement.id,\n            announcementTitle: announcement.title,\n            announcementDescription: announcement.description,\n            user: {\n                id: announcement.createdByUserId,\n                fullName: users.find(u => u.id === announcement.createdByUserId)?.firstName + ' ' + users.find(u => u.id === announcement.createdByUserId)?.lastName || 'Unknown'\n            },\n            department: {\n                departmentName: announcement.department || 'General'\n            }\n        }));\n        \n        this.setState({\n            announcements: transformedAnnouncements,\n            departments: defaultDepartments\n        }, () => {\n            console.log('DEBUG: Announcement departments state:', this.state.departments);\n        });\n    }\n\n    onDelete = (announcement) => {\n        return event => {\n            event.preventDefault()\n\n            try {\n                // Remove from localStorage\n                const announcements = getAnnouncements();\n                const filteredAnnouncements = announcements.filter(ann => ann.id !== announcement.id);\n                localStorage.setItem('hrms_announcements', JSON.stringify(filteredAnnouncements));\n                \n                // Refresh the list\n                this.componentDidMount();\n                this.setState({\n                    hasError: false,\n                    errorMsg: ''\n                });\n            } catch (error) {\n                this.setState({\n                    hasError: true,\n                    errorMsg: 'Failed to delete announcement. Please try again.'\n                });\n            }\n        }\n    }\n    \n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    pushDepartments = () => {\n        let items= []\n        // items.push(<option key={584390} value=\"all\">All departments</option>)\n        this.state.departments.map((dept, index) => {\n            items.push(<option key={index} value={dept.id}>{dept.departmentName}</option>)\n        })\n        return items\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault()\n\n        const currentUser = JSON.parse(localStorage.getItem('user'));\n\n        const announcementData = {\n            title: this.state.title,\n            description: this.state.description,\n            createdByUserId: currentUser.id,\n            department: currentUser.department || 'General',\n            status: 'active'\n        };\n\n        try {\n            addAnnouncementToStorage(announcementData);\n            this.setState({\n                title: '',\n                description: '',\n                hasError: false\n            });\n            // Refresh the announcements list\n            this.componentDidMount();\n        } catch (error) {\n            this.setState({\n                hasError: true,\n                errorMsg: 'Failed to publish announcement. Please try again.'\n            });\n        }\n    }\n\n  render() {\n    let closeAlertModel = () => this.setState({showAlertModel: false})\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-2\">\n        <div className=\"row\">\n            <div className=\"col-sm-12\">\n                <Card className=\"main-card\">\n                    <Card.Header><strong>Add Announcement</strong></Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            <Form onSubmit={this.onSubmit}>\n                                <Form.Group>\n                                    <Form.Label>Title</Form.Label>\n                                    <Form.Control \n                                        type=\"text\"\n                                        value={this.state.title}\n                                        onChange={this.handleChange}\n                                        name=\"title\"\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Description</Form.Label>\n                                    <Form.Control \n                                        type=\"textarea\"\n                                        value={this.state.description}\n                                        onChange={this.handleChange}\n                                        name=\"description\"\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Department</Form.Label>\n                                    <Form.Control \n                                        as=\"select\"\n                                        value={this.state.selectedDepartment}\n                                        onChange={this.handleChange}\n                                        name=\"selectedDepartment\"\n                                    >\n                                        <option value=\"\">Choose one...</option>\n                                        <option value=\"all\">All Departments</option>\n                                        {this.pushDepartments()}\n                                    </Form.Control>\n                                </Form.Group>\n                                <Button type=\"submit\" size=\"sm\" className=\"mt-1\">Publish</Button>\n                            </Form>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-sm-12\">\n            <Card className=\"main-card\">\n                <Card.Header>\n                <div className=\"panel-title\">\n                    <strong>Announcement List</strong>\n                </div>\n                </Card.Header>\n                <Card.Body>\n                    <ThemeProvider theme={theme}>\n                    <MaterialTable\n                            columns={[\n                                {title: 'ID', field: 'id'},\n                                {title: 'Title', field: 'announcementTitle'},\n                                {title: 'Description', field: 'announcementDescription'},\n                                {title: 'Created By', field: 'user.fullName'},\n                                {title: 'Department', field: 'department.departmentName'},\n                                {\n                                    title: 'Action',\n                                    render: rowData => (\n                                        <Form className=\"row\">\n                                            <Button onClick={this.onDelete(rowData)} size=\"sm\" variant=\"danger\"><i className=\"fas fa-trash\"></i>Delete</Button>\n                                        </Form>\n                                    )\n                                }\n                            ]}\n                            data={this.state.announcements}\n                            options={{\n                                rowStyle: (rowData, index) => {\n                                    if(index%2) {\n                                        return {backgroundColor: '#f2f2f2'}\n                                    }\n                                },\n                                pageSize: 8,\n                                pageSizeOptions: [5, 10, 20, 30, 50, 75, 100]\n                            }}\n                            title=\"Announcements\"\n                    />\n                    </ThemeProvider>\n                </Card.Body>\n            </Card>\n            </div>\n        </div>\n        {this.state.hasError ? (\n            <Alert variant=\"danger\" className=\"m-3\" block>\n              {this.state.errMsg}\n            </Alert>\n          ) : (<></>)}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert } from \"react-bootstrap\";\nimport { Redirect, NavLink } from 'react-router-dom'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport AlertModal from '../AlertModal'\nimport { getAnnouncements, addAnnouncementToStorage, getUsers } from '../../utils/localStorage'\n\nexport default class Announcement extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            announcements: [],\n            departments: [],\n            title: \"\",\n            description: \"\",\n            userId: null,\n            departmentId: null,\n            hasError: false,\n            errorMsg: '',\n            completed: false,\n            showEditModel: false,\n            showAlertModel: false\n        }\n    }\n\n    componentDidMount() {\n        this.loadAnnouncements();\n    }\n\n    loadAnnouncements = () => {\n        const announcements = getAnnouncements();\n        const users = getUsers();\n        \n        // Transform announcements to match expected format\n        const transformedAnnouncements = announcements.map(announcement => ({\n            id: announcement.id,\n            announcementTitle: announcement.title,\n            announcementDescription: announcement.description,\n            user: {\n                id: announcement.createdByUserId,\n                fullName: users.find(u => u.id === announcement.createdByUserId)?.firstName + ' ' + users.find(u => u.id === announcement.createdByUserId)?.lastName || 'Unknown'\n            },\n            department: {\n                departmentName: announcement.department || 'General'\n            }\n        }));\n        \n        this.setState({announcements: transformedAnnouncements});\n    }\n\n    onDelete = (announcement) => {\n        return event => {\n            event.preventDefault()\n\n            try {\n                // Remove from localStorage\n                const announcements = getAnnouncements();\n                const filteredAnnouncements = announcements.filter(ann => ann.id !== announcement.id);\n                localStorage.setItem('hrms_announcements', JSON.stringify(filteredAnnouncements));\n                \n                // Refresh the list\n                this.loadAnnouncements();\n                this.setState({\n                    hasError: false,\n                    errorMsg: ''\n                });\n            } catch (error) {\n                this.setState({\n                    hasError: true,\n                    errorMsg: 'Failed to delete announcement. Please try again.'\n                });\n            }\n        }\n    }\n    \n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault()\n\n        const currentUser = JSON.parse(localStorage.getItem('user'));\n\n        const announcementData = {\n            title: this.state.title,\n            description: this.state.description,\n            createdByUserId: currentUser.id,\n            department: currentUser.department || 'General',\n            status: 'active'\n        };\n\n        try {\n            addAnnouncementToStorage(announcementData);\n            this.setState({\n                title: '',\n                description: '',\n                hasError: false\n            });\n            // Refresh the announcements list\n            this.loadAnnouncements();\n        } catch (error) {\n            this.setState({\n                hasError: true,\n                errorMsg: 'Failed to publish announcement. Please try again.'\n            });\n        }\n    }\n\n  render() {\n    let closeAlertModel = () => this.setState({showAlertModel: false})\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-2\">\n        <div className=\"row\">\n            <div className=\"col-sm-12\">\n                <Card className=\"main-card\">\n                    <Card.Header><strong>Add Announcement</strong></Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            <Form onSubmit={this.onSubmit}>\n                                <Form.Group>\n                                    <Form.Label>Title</Form.Label>\n                                    <Form.Control \n                                        type=\"text\"\n                                        value={this.state.title}\n                                        onChange={this.handleChange}\n                                        name=\"title\"\n                                        required\n                                    />\n                                </Form.Group>\n                                <Form.Group>\n                                    <Form.Label>Description</Form.Label>\n                                    <Form.Control \n                                        type=\"textarea\"\n                                        value={this.state.description}\n                                        onChange={this.handleChange}\n                                        name=\"description\"\n                                        required\n                                    />\n                                </Form.Group>\n                                <Button type=\"submit\" size=\"sm\" className=\"mt-1\">Publish</Button>\n                            </Form>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-sm-12\">\n            <Card className=\"main-card\">\n                <Card.Header>\n                <div className=\"panel-title\">\n                    <strong>Announcement List</strong>\n                </div>\n                </Card.Header>\n                <Card.Body>\n                    <ThemeProvider theme={theme}>\n                    <MaterialTable\n                            columns={[\n                                {title: 'ID', field: 'id'},\n                                {title: 'Title', field: 'announcementTitle'},\n                                {title: 'Description', field: 'announcementDescription'},\n                                {title: 'Created By', field: 'user.fullName'},\n                                {title: 'Department', field: 'department.departmentName'},\n                                {\n                                    title: 'Action',\n                                    render: rowData => (\n                                        rowData.user.id==JSON.parse(localStorage.getItem('user')).id ? (\n                                            <Form className=\"row\">\n                                                <Button onClick={this.onDelete(rowData)} size=\"sm\" variant=\"danger\"><i className=\"fas fa-trash\"></i>Delete</Button>\n                                            </Form>\n                                        ) : null\n                                    )\n                                }\n                            ]}\n                            data={this.state.announcements}\n                            options={{\n                                rowStyle: (rowData, index) => {\n                                    if(index%2) {\n                                        return {backgroundColor: '#f2f2f2'}\n                                    }\n                                },\n                                pageSize: 7,\n                                pageSizeOptions: [5, 10, 20, 30, 50, 75, 100]\n                            }}\n                            title=\"Announcements\"\n                    />\n                    </ThemeProvider>\n                </Card.Body>\n            </Card>\n            </div>\n        </div>\n        {this.state.hasError ? (\n            <Alert variant=\"danger\" className=\"m-3\">\n              {this.state.errorMsg}\n            </Alert>\n          ) : (<></>)}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert } from \"react-bootstrap\";\nimport { Redirect, NavLink } from 'react-router-dom'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { getAnnouncements, getUsers } from '../../utils/localStorage'\n\nexport default class Announcement extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            announcements: [],\n            departments: [],\n            title: \"\",\n            description: \"\",\n            userId: null,\n            departmentId: null,\n            hasError: false,\n            errorMsg: '',\n            completed: false,\n            showEditModel: false,\n            showAlertModel: false\n        }\n    }\n\n    componentDidMount() {\n        const announcements = getAnnouncements();\n        const users = getUsers();\n        \n        // Transform announcements to match expected format\n        const transformedAnnouncements = announcements.map(announcement => ({\n            id: announcement.id,\n            announcementTitle: announcement.title,\n            announcementDescription: announcement.description,\n            user: {\n                id: announcement.createdByUserId,\n                fullName: users.find(u => u.id === announcement.createdByUserId)?.firstName + ' ' + users.find(u => u.id === announcement.createdByUserId)?.lastName || 'Unknown'\n            },\n            department: {\n                departmentName: announcement.department || 'General'\n            }\n        }));\n        \n        this.setState({announcements: transformedAnnouncements});\n    }\n\n    \n    handleChange = (event) => {\n        const {name, value} = event.target\n        this.setState({\n            [name]: value\n        })\n    }\n\n\n  render() {\n    let closeAlertModel = () => this.setState({showAlertModel: false})\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-2\">\n        <div className=\"row\">\n            <div className=\"col-sm-12\">\n            <Card className=\"main-card\">\n                <Card.Header>\n                <div className=\"panel-title\">\n                    <strong>Announcement List</strong>\n                </div>\n                </Card.Header>\n                <Card.Body>\n                    <ThemeProvider theme={theme}>\n                    <MaterialTable\n                            columns={[\n                                {title: 'ID', field: 'id'},\n                                {title: 'Title', field: 'announcementTitle'},\n                                {title: 'Description', field: 'announcementDescription'},\n                                {title: 'Created By', field: 'user.fullName'},\n                                {title: 'Department', field: 'department.departmentName'}\n                            ]}\n                            data={this.state.announcements}\n                            options={{\n                                rowStyle: (rowData, index) => {\n                                    if(index%2) {\n                                        return {backgroundColor: '#f2f2f2'}\n                                    }\n                                },\n                                pageSize: 8,\n                                pageSizeOptions: [5, 10, 20, 30, 50, 75, 100]\n                            }}\n                            title=\"Announcements\"\n                    />\n                    </ThemeProvider>\n                </Card.Body>\n            </Card>\n            </div>\n        </div>\n        {this.state.hasError ? (\n            <Alert variant=\"danger\" className=\"m-3\" block>\n              {this.state.errMsg}\n            </Alert>\n          ) : (<></>)}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert, Row, Col } from \"react-bootstrap\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: {},\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      department: \"\",\n      position: \"\",\n      username: \"\",\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n      hasError: false,\n      errorMsg: \"\",\n      successMsg: \"\",\n      showPasswordSection: false,\n      updated: false\n    };\n  }\n\n  componentDidMount() {\n    const userData = JSON.parse(localStorage.getItem('user') || '{}');\n    this.setState({\n      user: userData,\n      firstName: userData.firstName || \"\",\n      lastName: userData.lastName || \"\",\n      email: userData.email || \"\",\n      phone: userData.phone || \"\",\n      department: userData.department || \"\",\n      position: userData.position || \"\",\n      username: userData.username || \"\"\n    });\n  }\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n      hasError: false,\n      errorMsg: \"\",\n      successMsg: \"\"\n    });\n  };\n\n  onUpdateProfile = (e) => {\n    e.preventDefault();\n    \n    // Validation\n    if (!this.state.firstName || !this.state.lastName || !this.state.email) {\n      this.setState({\n        hasError: true,\n        errorMsg: \"First Name, Last Name, and Email are required fields.\"\n      });\n      return;\n    }\n\n    // Email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(this.state.email)) {\n      this.setState({\n        hasError: true,\n        errorMsg: \"Please enter a valid email address.\"\n      });\n      return;\n    }\n\n    try {\n      // Update user data\n      const updatedUser = {\n        ...this.state.user,\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        phone: this.state.phone,\n        department: this.state.department,\n        position: this.state.position,\n        username: this.state.username\n      };\n\n      // Update in localStorage\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n\n      // Update users array in localStorage\n      const users = JSON.parse(localStorage.getItem('hrms_users') || '[]');\n      const updatedUsers = users.map(user => \n        user.id === updatedUser.id ? updatedUser : user\n      );\n      localStorage.setItem('hrms_users', JSON.stringify(updatedUsers));\n\n      this.setState({\n        user: updatedUser,\n        successMsg: \"Profile updated successfully!\",\n        hasError: false,\n        errorMsg: \"\"\n      });\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        this.setState({ successMsg: \"\" });\n      }, 3000);\n\n    } catch (error) {\n      this.setState({\n        hasError: true,\n        errorMsg: \"Failed to update profile. Please try again.\"\n      });\n    }\n  };\n\n  onChangePassword = (e) => {\n    e.preventDefault();\n\n    // Password validation\n    if (!this.state.currentPassword || !this.state.newPassword || !this.state.confirmPassword) {\n      this.setState({\n        hasError: true,\n        errorMsg: \"All password fields are required.\"\n      });\n      return;\n    }\n\n    if (this.state.newPassword !== this.state.confirmPassword) {\n      this.setState({\n        hasError: true,\n        errorMsg: \"New password and confirm password do not match.\"\n      });\n      return;\n    }\n\n    if (this.state.newPassword.length < 6) {\n      this.setState({\n        hasError: true,\n        errorMsg: \"New password must be at least 6 characters long.\"\n      });\n      return;\n    }\n\n    // Check current password (in real app, this would be verified on server)\n    if (this.state.currentPassword !== this.state.user.password) {\n      this.setState({\n        hasError: true,\n        errorMsg: \"Current password is incorrect.\"\n      });\n      return;\n    }\n\n    try {\n      // Update password\n      const updatedUser = {\n        ...this.state.user,\n        password: this.state.newPassword\n      };\n\n      // Update in localStorage\n      localStorage.setItem('user', JSON.stringify(updatedUser));\n\n      // Update users array in localStorage\n      const users = JSON.parse(localStorage.getItem('hrms_users') || '[]');\n      const updatedUsers = users.map(user => \n        user.id === updatedUser.id ? updatedUser : user\n      );\n      localStorage.setItem('hrms_users', JSON.stringify(updatedUsers));\n\n      this.setState({\n        user: updatedUser,\n        currentPassword: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\",\n        successMsg: \"Password changed successfully!\",\n        hasError: false,\n        errorMsg: \"\",\n        showPasswordSection: false\n      });\n\n      // Clear success message after 3 seconds\n      setTimeout(() => {\n        this.setState({ successMsg: \"\" });\n      }, 3000);\n\n    } catch (error) {\n      this.setState({\n        hasError: true,\n        errorMsg: \"Failed to change password. Please try again.\"\n      });\n    }\n  };\n\n  togglePasswordSection = () => {\n    this.setState({\n      showPasswordSection: !this.state.showPasswordSection,\n      currentPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\",\n      hasError: false,\n      errorMsg: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container-fluid pt-5\">\n        <Row>\n          <Col md={8} className=\"mx-auto\">\n            <Card>\n              <Card.Header style={{ backgroundColor: \"#515e73\", color: \"white\" }}>\n                <div className=\"panel-title\">\n                  <strong>My Profile</strong>\n                </div>\n              </Card.Header>\n              <Card.Body>\n                {this.state.hasError && (\n                  <Alert variant=\"danger\" className=\"mb-3\">\n                    {this.state.errorMsg}\n                  </Alert>\n                )}\n                {this.state.successMsg && (\n                  <Alert variant=\"success\" className=\"mb-3\">\n                    {this.state.successMsg}\n                  </Alert>\n                )}\n\n                <Form onSubmit={this.onUpdateProfile}>\n                  <Row>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>First Name *</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"firstName\"\n                          value={this.state.firstName}\n                          onChange={this.handleChange}\n                          placeholder=\"Enter first name\"\n                          required\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Last Name *</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"lastName\"\n                          value={this.state.lastName}\n                          onChange={this.handleChange}\n                          placeholder=\"Enter last name\"\n                          required\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Email Address *</Form.Label>\n                        <Form.Control\n                          type=\"email\"\n                          name=\"email\"\n                          value={this.state.email}\n                          onChange={this.handleChange}\n                          placeholder=\"Enter email address\"\n                          required\n                        />\n                      </Form.Group>\n                    </Col>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Phone Number</Form.Label>\n                        <Form.Control\n                          type=\"tel\"\n                          name=\"phone\"\n                          value={this.state.phone}\n                          onChange={this.handleChange}\n                          placeholder=\"Enter phone number\"\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <Row>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Department</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"department\"\n                          value={this.state.department}\n                          onChange={this.handleChange}\n                          placeholder=\"Enter department\"\n                          readOnly\n                          style={{ backgroundColor: \"#f8f9fa\" }}\n                        />\n                        <Form.Text className=\"text-muted\">\n                          Contact admin to change department\n                        </Form.Text>\n                      </Form.Group>\n                    </Col>\n                    <Col md={6}>\n                      <Form.Group className=\"mb-3\">\n                        <Form.Label>Position</Form.Label>\n                        <Form.Control\n                          type=\"text\"\n                          name=\"position\"\n                          value={this.state.position}\n                          onChange={this.handleChange}\n                          placeholder=\"Enter position\"\n                        />\n                      </Form.Group>\n                    </Col>\n                  </Row>\n\n                  <Form.Group className=\"mb-3\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"username\"\n                      value={this.state.username}\n                      onChange={this.handleChange}\n                      placeholder=\"Enter username\"\n                    />\n                  </Form.Group>\n\n                  <div className=\"d-flex justify-content-between\">\n                    <Button variant=\"primary\" type=\"submit\">\n                      <i className=\"fas fa-save\"></i> Update Profile\n                    </Button>\n                    <Button \n                      variant=\"secondary\" \n                      type=\"button\"\n                      onClick={this.togglePasswordSection}\n                    >\n                      <i className=\"fas fa-key\"></i> {this.state.showPasswordSection ? 'Cancel' : 'Change Password'}\n                    </Button>\n                  </div>\n                </Form>\n\n                {this.state.showPasswordSection && (\n                  <Card className=\"mt-4\">\n                    <Card.Header>\n                      <strong>Change Password</strong>\n                    </Card.Header>\n                    <Card.Body>\n                      <Form onSubmit={this.onChangePassword}>\n                        <Form.Group className=\"mb-3\">\n                          <Form.Label>Current Password *</Form.Label>\n                          <Form.Control\n                            type=\"password\"\n                            name=\"currentPassword\"\n                            value={this.state.currentPassword}\n                            onChange={this.handleChange}\n                            placeholder=\"Enter current password\"\n                            required\n                          />\n                        </Form.Group>\n\n                        <Row>\n                          <Col md={6}>\n                            <Form.Group className=\"mb-3\">\n                              <Form.Label>New Password *</Form.Label>\n                              <Form.Control\n                                type=\"password\"\n                                name=\"newPassword\"\n                                value={this.state.newPassword}\n                                onChange={this.handleChange}\n                                placeholder=\"Enter new password\"\n                                required\n                              />\n                            </Form.Group>\n                          </Col>\n                          <Col md={6}>\n                            <Form.Group className=\"mb-3\">\n                              <Form.Label>Confirm New Password *</Form.Label>\n                              <Form.Control\n                                type=\"password\"\n                                name=\"confirmPassword\"\n                                value={this.state.confirmPassword}\n                                onChange={this.handleChange}\n                                placeholder=\"Confirm new password\"\n                                required\n                              />\n                            </Form.Group>\n                          </Col>\n                        </Row>\n\n                        <Button variant=\"success\" type=\"submit\">\n                          <i className=\"fas fa-check\"></i> Change Password\n                        </Button>\n                      </Form>\n                    </Card.Body>\n                  </Card>\n                )}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport {NavLink} from 'react-router-dom'\nimport { addUser } from \"../utils/localStorage\";\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      username: '',\n      password: '',\n      confirmPassword: '',\n      showPassword: false,\n      showConfirmPassword: false,\n      hasError: false,\n      errorMessage: '',\n      isLoading: false\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  passwordVisibilityHandler = () => {\n    var x = document.getElementById(\"password\");\n    if (x.type === \"password\") {\n      x.type = \"text\";\n    } else {\n      x.type = \"password\";\n    }\n  };\n\n  passwordVisibilityHandlerCheck = () => {\n    var x = document.getElementById(\"checkPassword\");\n    if (x.type === \"password\") {\n      x.type = \"text\";\n    } else {\n      x.type = \"password\";\n    }\n  };\n\n  onChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Set loading state\n    this.setState({ isLoading: true, hasError: false });\n    \n    if (this.state.password !== this.state.confirmPassword) {\n      this.setState({\n        hasError: true,\n        errorMessage: \"Passwords do not match!\",\n        isLoading: false\n      });\n      return;\n    }\n\n    // Add a small delay for smooth loading animation\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    try {\n      const newUser = {\n        firstName: this.state.firstName,\n        lastName: this.state.lastName,\n        email: this.state.email,\n        phone: this.state.phone,\n        username: this.state.username,\n        password: this.state.password,\n        role: 'employee',\n        departmentId: 1\n      };\n\n      const result = addUser(newUser);\n      \n      if (result.success) {\n        // Redirect to login page or show success message\n        this.setState({ isLoading: false });\n        this.props.history.push('/login');\n      } else {\n        this.setState({\n          hasError: true,\n          errorMessage: result.message,\n          isLoading: false\n        });\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      this.setState({\n        hasError: true,\n        errorMessage: \"Registration failed. Username might already exist.\",\n        isLoading: false\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"split-register-container\">\n        <style>{`\n          .split-register-container {\n            min-height: 100vh;\n            display: flex;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            animation: fadeIn 0.8s ease-out;\n          }\n          \n          @keyframes fadeIn {\n            from {\n              opacity: 0;\n              transform: translateY(20px);\n            }\n            to {\n              opacity: 1;\n              transform: translateY(0);\n            }\n          }\n          \n          .left-panel {\n            flex: 1;\n            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);\n            padding: 60px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            color: white;\n            position: relative;\n            animation: slideInLeft 1s ease-out;\n          }\n          \n          @keyframes slideInLeft {\n            from {\n              opacity: 0;\n              transform: translateX(-50px);\n            }\n            to {\n              opacity: 1;\n              transform: translateX(0);\n            }\n          }\n          \n          .left-panel::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            right: 0;\n            bottom: 0;\n            background: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><defs><pattern id=\"grain\" width=\"100\" height=\"100\" patternUnits=\"userSpaceOnUse\"><circle cx=\"25\" cy=\"25\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"75\" cy=\"75\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"50\" cy=\"10\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"10\" cy=\"60\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"90\" cy=\"40\" r=\"1\" fill=\"white\" opacity=\"0.1\"/></pattern></defs><rect width=\"100\" height=\"100\" fill=\"url(%23grain)\"/></svg>');\n            opacity: 0.3;\n          }\n          \n          .company-logo {\n            display: flex;\n            align-items: center;\n            margin-bottom: 40px;\n            animation: bounceIn 1.2s ease-out 0.3s both;\n          }\n          \n          @keyframes bounceIn {\n            0% {\n              opacity: 0;\n              transform: scale(0.3);\n            }\n            50% {\n              opacity: 1;\n              transform: scale(1.05);\n            }\n            70% {\n              transform: scale(0.9);\n            }\n            100% {\n              opacity: 1;\n              transform: scale(1);\n            }\n          }\n          \n          .logo-icon {\n            width: 60px;\n            height: 60px;\n            background: linear-gradient(135deg, #2e8b57 0%, #228b22 100%);\n            border-radius: 15px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 20px;\n            font-size: 24px;\n            color: #ffd700;\n            animation: pulse 2s infinite;\n          }\n          \n          @keyframes pulse {\n            0% {\n              box-shadow: 0 0 0 0 rgba(46, 139, 87, 0.7);\n            }\n            70% {\n              box-shadow: 0 0 0 10px rgba(46, 139, 87, 0);\n            }\n            100% {\n              box-shadow: 0 0 0 0 rgba(46, 139, 87, 0);\n            }\n          }\n          \n          .company-info h1 {\n            font-size: 2.2rem;\n            font-weight: 700;\n            margin: 0 0 5px 0;\n            letter-spacing: -0.5px;\n          }\n          \n          .company-info p {\n            font-size: 1rem;\n            opacity: 0.8;\n            margin: 0;\n          }\n          \n          .system-description {\n            font-size: 1.1rem;\n            line-height: 1.6;\n            margin-bottom: 50px;\n            opacity: 0.9;\n            max-width: 80%;\n          }\n          \n          .stats-container {\n            display: flex;\n            gap: 40px;\n            margin-top: 40px;\n            animation: fadeInUp 1s ease-out 0.6s both;\n          }\n          \n          @keyframes fadeInUp {\n            from {\n              opacity: 0;\n              transform: translateY(30px);\n            }\n            to {\n              opacity: 1;\n              transform: translateY(0);\n            }\n          }\n          \n          .stat-item {\n            text-align: left;\n          }\n          \n          .stat-number {\n            font-size: 2.5rem;\n            font-weight: 700;\n            color: #3498db;\n            margin-bottom: 8px;\n            animation: countUp 2s ease-out 1s both;\n          }\n          \n          @keyframes countUp {\n            from {\n              opacity: 0;\n              transform: scale(0.5);\n            }\n            to {\n              opacity: 1;\n              transform: scale(1);\n            }\n          }\n          \n          .stat-label {\n            font-size: 1rem;\n            opacity: 0.8;\n          }\n          \n          .right-panel {\n            flex: 1;\n            background: #f8f9fa;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 40px;\n            animation: slideInRight 1s ease-out;\n          }\n          \n          @keyframes slideInRight {\n            from {\n              opacity: 0;\n              transform: translateX(50px);\n            }\n            to {\n              opacity: 1;\n              transform: translateX(0);\n            }\n          }\n          \n          .register-form-container {\n            width: 100%;\n            max-width: 450px;\n            background: white;\n            padding: 50px 40px;\n            border-radius: 12px;\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n            animation: zoomIn 0.8s ease-out 0.2s both;\n            transform-origin: center;\n          }\n          \n          @keyframes zoomIn {\n            from {\n              opacity: 0;\n              transform: scale(0.9);\n            }\n            to {\n              opacity: 1;\n              transform: scale(1);\n            }\n          }\n          \n          .form-header {\n            text-align: center;\n            margin-bottom: 20px;\n          }\n          \n          .form-title {\n            font-size: 2rem;\n            font-weight: 600;\n            color: #2c3e50;\n            margin-bottom: 8px;\n          }\n          \n          .form-subtitle {\n            color: #7f8c8d;\n            font-size: 0.95rem;\n          }\n          \n          .input-group {\n            display: flex;\n            align-items: center;\n            margin-bottom: 15px;\n          }\n          \n          .input-label {\n            width: 130px;\n            flex-shrink: 0;\n            font-size: 14px;\n            font-weight: 500;\n            color: #2c3e50;\n            padding-right: 10px;\n          }\n          \n          .input-wrapper {\n            position: relative;\n            flex-grow: 1;\n          }\n          \n          .form-input {\n            width: 100%;\n            padding: 16px 50px 16px 50px;\n            border: 1px solid #e1e8ed;\n            border-radius: 6px;\n            font-size: 16px;\n            transition: all 0.3s ease;\n            background: white;\n            box-sizing: border-box;\n            animation: slideUp 0.6s ease-out;\n          }\n          \n          @keyframes slideUp {\n            from {\n              opacity: 0;\n              transform: translateY(10px);\n            }\n            to {\n              opacity: 1;\n              transform: translateY(0);\n            }\n          }\n          \n          .form-input:focus {\n            outline: none;\n            border-color: #3498db;\n            background: white;\n            box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.15);\n          }\n          \n          .form-input::placeholder {\n            color: #a0a6b1;\n            font-size: 15px;\n          }\n          \n          .input-icon-left {\n            position: absolute;\n            left: 16px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #a0a6b1;\n            font-size: 18px;\n          }\n          \n          .input-icon-right {\n            position: absolute;\n            right: 16px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #a0a6b1;\n            font-size: 18px;\n          }\n          \n          .password-toggle {\n            cursor: pointer;\n            transition: color 0.3s ease;\n          }\n          \n          .password-toggle:hover {\n            color: #3498db;\n          }\n          \n          .register-btn {\n            width: 100%;\n            padding: 15px;\n            background: #2c3e50;\n            border: none;\n            border-radius: 8px;\n            color: white;\n            font-size: 1rem;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            margin-bottom: 25px;\n            position: relative;\n            overflow: hidden;\n          }\n          \n          .register-btn:hover {\n            background: #34495e;\n            transform: translateY(-2px);\n            box-shadow: 0 8px 25px rgba(44, 62, 80, 0.3);\n          }\n          \n          .register-btn:active {\n            transform: translateY(0);\n            box-shadow: 0 4px 15px rgba(44, 62, 80, 0.2);\n          }\n          \n          .register-btn::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n            transition: left 0.5s;\n          }\n          \n          .register-btn:hover::before {\n            left: 100%;\n          }\n          \n          .register-btn:disabled {\n            background: #95a5a6;\n            cursor: not-allowed;\n            transform: none;\n            box-shadow: none;\n          }\n          \n          .register-btn:disabled:hover {\n            background: #95a5a6;\n            transform: none;\n            box-shadow: none;\n          }\n          \n          .spinner {\n            width: 20px;\n            height: 20px;\n            border: 2px solid #ffffff;\n            border-top: 2px solid transparent;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n            display: inline-block;\n            margin-right: 8px;\n          }\n          \n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n          \n          .login-link {\n            text-align: center;\n            color: #7f8c8d;\n            font-size: 14px;\n          }\n          \n          .login-link a {\n            color: #3498db;\n            text-decoration: none;\n            font-weight: 500;\n          }\n          \n          .login-link a:hover {\n            text-decoration: underline;\n          }\n          \n          .demo-section {\n            background: #f8f9fa;\n            border-radius: 6px;\n            padding: 15px;\n            margin-top: 20px;\n            border: 1px solid #e9ecef;\n          }\n          \n          .error-alert {\n            background: #fee;\n            border: 1px solid #fcc;\n            color: #c33;\n            padding: 12px;\n            border-radius: 6px;\n            margin-bottom: 20px;\n            font-size: 14px;\n          }\n          \n          .success-alert {\n            background: #efe;\n            border: 1px solid #cfc;\n            color: #363;\n            padding: 12px;\n            border-radius: 6px;\n            margin-bottom: 20px;\n            font-size: 14px;\n          }\n          \n          .success-alert a {\n            color: #3498db;\n            text-decoration: none;\n            font-weight: 600;\n          }\n          \n          @media (max-width: 768px) {\n            .register-container {\n              flex-direction: column;\n            }\n            \n            .left-panel {\n              padding: 40px 20px;\n            }\n            \n            .stats-container {\n              gap: 20px;\n            }\n            \n            .right-panel {\n              padding: 20px;\n            }\n            \n            .login-form-container {\n              padding: 30px 20px;\n            }\n          }\n        `}</style>\n        \n        <div className=\"left-panel\">\n          <div className=\"company-logo\">\n            <div className=\"logo-icon\">\n              <i className=\"fas fa-users\"></i>\n            </div>\n            <div className=\"company-info\">\n              <h1>HRMS Pro</h1>\n              <p>Human Resource Management System</p>\n            </div>\n          </div>\n          \n          <div className=\"system-description\">\n            Streamline your human resource operations with our comprehensive \n            HRMS solution. Manage employees, departments, payroll, and applications \n            across all organizational levels with ease.\n          </div>\n          \n          <div className=\"stats-container\">\n            <div className=\"stat-item\">\n              <div className=\"stat-number\">50+</div>\n              <div className=\"stat-label\">Employees</div>\n            </div>\n            <div className=\"stat-item\">\n              <div className=\"stat-number\">5</div>\n              <div className=\"stat-label\">Departments</div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"right-panel\">\n          <div className=\"login-form-container\">\n            <div className=\"form-header\">\n              <h1 className=\"form-title\">Create Account</h1>\n              <p className=\"form-subtitle\">Sign up to access your dashboard</p>\n            </div>\n            \n            {this.state.hasError && (\n              <div className=\"error-alert\">\n                {this.state.errorMessage}\n              </div>\n            )}\n            \n            {this.state.completed && (\n              <div className=\"success-alert\">\n                Registration successful! <NavLink to=\"/login\">Sign in now</NavLink>\n              </div>\n            )}\n            \n            <form onSubmit={this.onSubmit}>\n              <div className=\"input-group\">\n                <label className=\"input-label\">Username</label>\n                <div className=\"input-wrapper\">\n                  <i className=\"fas fa-user input-icon-left\"></i>\n                  <input\n                    type=\"text\"\n                    className=\"form-input\"\n                    name=\"username\"\n                    placeholder=\"Enter your username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div className=\"input-group\">\n                <label className=\"input-label\">Full Name</label>\n                <div className=\"input-wrapper\">\n                  <i className=\"fas fa-id-card input-icon-left\"></i>\n                  <input\n                    type=\"text\"\n                    className=\"form-input\"\n                    name=\"fullname\"\n                    placeholder=\"Enter your full name\"\n                    value={this.state.fullname}\n                    onChange={this.onChange}\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div className=\"input-group\">\n                <label className=\"input-label\">Password</label>\n                <div className=\"input-wrapper\">\n                  <i className=\"fas fa-lock input-icon-left\"></i>\n                  <input\n                    type=\"password\"\n                    className=\"form-input\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"Enter your password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                    required\n                  />\n                  <i\n                    className={`fas ${this.state.passwordShow ? 'fa-eye' : 'fa-eye-slash'} input-icon-right password-toggle`}\n                    onClick={this.passwordVisibilityHandler}\n                  ></i>\n                </div>\n              </div>\n              \n              <div className=\"input-group\">\n                <label className=\"input-label\">Confirm Password</label>\n                <div className=\"input-wrapper\">\n                  <i className=\"fas fa-lock input-icon-left\"></i>\n                  <input\n                    type=\"password\"\n                    className=\"form-input\"\n                    name=\"checkPassword\"\n                    id=\"checkPassword\"\n                    placeholder=\"Confirm your password\"\n                    value={this.state.checkPassword}\n                    onChange={this.onChange}\n                    required\n                  />\n                  <i\n                    className={`fas ${this.state.passwordCheckShow ? 'fa-eye' : 'fa-eye-slash'} input-icon-right password-toggle`}\n                    onClick={this.passwordVisibilityHandlerCheck}\n                  ></i>\n                </div>\n              </div>\n              \n              <button \n                type=\"submit\" \n                className=\"register-btn\"\n                disabled={this.state.isLoading}\n              >\n                {this.state.isLoading ? (\n                  <>\n                    <span className=\"spinner\"></span>\n                    Creating Account...\n                  </>\n                ) : (\n                  'Create Account'\n                )}\n              </button>\n            </form>\n            \n            <div className=\"login-link\">\n              Already have an account? <NavLink to=\"/login\">Sign in</NavLink>\n            </div>\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { getCurrentUser } from \"./utils/localStorage\";\n\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        isAuthenticated: false,\n        loading: true,\n        redirect: false,\n      };\n    }\n\n    componentDidMount() {\n      const currentUser = getCurrentUser();\n      const token = localStorage.getItem('token');\n      \n      if (currentUser && token) {\n        this.setState({ \n          isAuthenticated: true,\n          loading: false \n        });\n        console.log(`Access: ${this.state.isAuthenticated}`);\n        localStorage.setItem('user', JSON.stringify(currentUser));\n      } else {\n        console.log(`Access: ${this.state.isAuthenticated}`);\n        localStorage.removeItem('user');\n        localStorage.removeItem('token');\n        this.setState({ loading: false, redirect: true });\n      }\n    }\n\n    render() {\n      const { loading, redirect } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/login\" />;\n      }\n      return <ComponentToProtect {...this.props} />;\n    }\n  };\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom'\nimport { Alert } from \"react-bootstrap\";\nimport { authenticateUser, initializeDefaultData } from \"../utils/localStorage\";\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      showPassword: false,\n      hasError: false,\n      errorMessage: '',\n      isLoading: false,\n      done: false\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  passwordVisibilityHandler = () => {\n    var x = document.getElementById(\"password\");\n    if (x.type === \"password\") {\n      x.type = \"text\";\n    } else {\n      x.type = \"password\";\n    }\n  };\n\n  onChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Set loading state\n    this.setState({ isLoading: true, hasError: false });\n    \n    // Initialize default data if needed\n    initializeDefaultData();\n    \n    // Add a small delay for smooth loading animation\n    await new Promise(resolve => setTimeout(resolve, 800));\n    \n    try {\n      const result = authenticateUser(this.state.username, this.state.password);\n      \n      if (result.success) {\n        localStorage.setItem('token', JSON.stringify(result));\n        this.setState({ done: true, isLoading: false });\n      } else {\n        this.setState({\n          hasError: true,\n          errorMessage: result.message,\n          isLoading: false\n        });\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      this.setState({\n        hasError: true,\n        errorMessage: \"Login failed. Please try again.\",\n        isLoading: false\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"split-login-container\">\n        <style>{`\n          .split-login-container {\n            min-height: 100vh;\n            display: flex;\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            animation: fadeIn 0.8s ease-out;\n          }\n          \n          @keyframes fadeIn {\n            from {\n              opacity: 0;\n              transform: translateY(20px);\n            }\n            to {\n              opacity: 1;\n              transform: translateY(0);\n            }\n          }\n          \n          .left-panel {\n            flex: 1;\n            background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);\n            padding: 60px;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            color: white;\n            position: relative;\n            animation: slideInLeft 1s ease-out;\n          }\n          \n          @keyframes slideInLeft {\n            from {\n              opacity: 0;\n              transform: translateX(-50px);\n            }\n            to {\n              opacity: 1;\n              transform: translateX(0);\n            }\n          }\n          \n          .company-logo {\n            display: flex;\n            align-items: center;\n            margin-bottom: 40px;\n            animation: bounceIn 1.2s ease-out 0.3s both;\n          }\n          \n          @keyframes bounceIn {\n            0% {\n              opacity: 0;\n              transform: scale(0.3);\n            }\n            50% {\n              opacity: 1;\n              transform: scale(1.05);\n            }\n            70% {\n              transform: scale(0.9);\n            }\n            100% {\n              opacity: 1;\n              transform: scale(1);\n            }\n          }\n          \n          .logo-icon {\n            width: 60px;\n            height: 60px;\n            background: linear-gradient(135deg, #2e8b57 0%, #228b22 100%);\n            border-radius: 15px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            margin-right: 20px;\n            font-size: 24px;\n            color: #ffd700;\n            animation: pulse 2s infinite;\n          }\n          \n          @keyframes pulse {\n            0% {\n              box-shadow: 0 0 0 0 rgba(46, 139, 87, 0.7);\n            }\n            70% {\n              box-shadow: 0 0 0 10px rgba(46, 139, 87, 0);\n            }\n            100% {\n              box-shadow: 0 0 0 0 rgba(46, 139, 87, 0);\n            }\n          }\n          \n          .company-info h1 {\n            font-size: 2.5rem;\n            font-weight: 700;\n            margin: 0 0 8px 0;\n            color: white;\n          }\n          \n          .company-info p {\n            font-size: 1.1rem;\n            color: #bdc3c7;\n            margin: 0;\n          }\n          \n          .system-description {\n            margin: 40px 0;\n            font-size: 1.1rem;\n            line-height: 1.6;\n            color: #ecf0f1;\n          }\n          \n          .stats-container {\n            display: flex;\n            gap: 40px;\n            margin-top: 40px;\n            animation: fadeInUp 1s ease-out 0.6s both;\n          }\n          \n          @keyframes fadeInUp {\n            from {\n              opacity: 0;\n              transform: translateY(30px);\n            }\n            to {\n              opacity: 1;\n              transform: translateY(0);\n            }\n          }\n          \n          .stat-item {\n            text-align: left;\n          }\n          \n          .stat-number {\n            font-size: 2.5rem;\n            font-weight: 700;\n            color: #3498db;\n            margin-bottom: 8px;\n            animation: countUp 2s ease-out 1s both;\n          }\n          \n          @keyframes countUp {\n            from {\n              opacity: 0;\n              transform: scale(0.5);\n            }\n            to {\n              opacity: 1;\n              transform: scale(1);\n            }\n          }\n          \n          .stat-label {\n            font-size: 1rem;\n            color: #bdc3c7;\n          }\n          \n          .right-panel {\n            flex: 1;\n            background: #f8f9fa;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            padding: 40px;\n            animation: slideInRight 1s ease-out;\n          }\n          \n          @keyframes slideInRight {\n            from {\n              opacity: 0;\n              transform: translateX(50px);\n            }\n            to {\n              opacity: 1;\n              transform: translateX(0);\n            }\n          }\n          \n          .login-form-container {\n            width: 100%;\n            max-width: 400px;\n            background: white;\n            padding: 50px 40px;\n            border-radius: 12px;\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n            animation: zoomIn 0.8s ease-out 0.2s both;\n            transform-origin: center;\n          }\n          \n          @keyframes zoomIn {\n            from {\n              opacity: 0;\n              transform: scale(0.9);\n            }\n            to {\n              opacity: 1;\n              transform: scale(1);\n            }\n          }\n          \n          .form-header {\n            text-align: center;\n            margin-bottom: 40px;\n          }\n          \n          .form-title {\n            font-size: 1.8rem;\n            font-weight: 600;\n            color: #2c3e50;\n            margin-bottom: 8px;\n          }\n          \n          .form-subtitle {\n            color: #7f8c8d;\n            font-size: 0.95rem;\n          }\n          \n          .input-group {\n            margin-bottom: 20px;\n          }\n          \n          .input-label {\n            display: block;\n            font-size: 14px;\n            font-weight: 500;\n            color: #2c3e50;\n            margin-bottom: 6px;\n          }\n          \n          .input-wrapper {\n            position: relative;\n          }\n          \n          .form-input {\n            width: 100%;\n            padding: 16px 50px 16px 50px;\n            border: 1px solid #e1e8ed;\n            border-radius: 6px;\n            font-size: 16px;\n            transition: all 0.3s ease;\n            background: white;\n            box-sizing: border-box;\n            animation: slideUp 0.6s ease-out;\n          }\n          \n          @keyframes slideUp {\n            from {\n              opacity: 0;\n              transform: translateY(10px);\n            }\n            to {\n              opacity: 1;\n              transform: translateY(0);\n            }\n          }\n          \n          .form-input:focus {\n            outline: none;\n            border-color: #3498db;\n            background: white;\n            box-shadow: 0 0 0 2px rgba(52, 152, 219, 0.15);\n          }\n          \n          .form-input::placeholder {\n            color: #a0a6b1;\n            font-size: 15px;\n          }\n          \n          .input-icon-left {\n            position: absolute;\n            left: 16px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #a0a6b1;\n            font-size: 18px;\n          }\n          \n          .input-icon-right {\n            position: absolute;\n            right: 16px;\n            top: 50%;\n            transform: translateY(-50%);\n            color: #a0a6b1;\n            font-size: 18px;\n          }\n          \n          .password-toggle {\n            cursor: pointer;\n            transition: color 0.3s ease;\n          }\n          \n          .password-toggle:hover {\n            color: #3498db;\n          }\n          \n          .login-btn {\n            width: 100%;\n            padding: 15px;\n            background: #2c3e50;\n            border: none;\n            border-radius: 8px;\n            color: white;\n            font-size: 1rem;\n            font-weight: 600;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            margin-bottom: 25px;\n            position: relative;\n            overflow: hidden;\n          }\n          \n          .login-btn:hover {\n            background: #34495e;\n            transform: translateY(-2px);\n            box-shadow: 0 8px 25px rgba(44, 62, 80, 0.3);\n          }\n          \n          .login-btn:active {\n            transform: translateY(0);\n            box-shadow: 0 4px 15px rgba(44, 62, 80, 0.2);\n          }\n          \n          .login-btn::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: -100%;\n            width: 100%;\n            height: 100%;\n            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);\n            transition: left 0.5s;\n          }\n          \n          .login-btn:hover::before {\n            left: 100%;\n          }\n          \n          .login-btn:disabled {\n            background: #95a5a6;\n            cursor: not-allowed;\n            transform: none;\n            box-shadow: none;\n          }\n          \n          .login-btn:disabled:hover {\n            background: #95a5a6;\n            transform: none;\n            box-shadow: none;\n          }\n          \n          .spinner {\n            width: 20px;\n            height: 20px;\n            border: 2px solid #ffffff;\n            border-top: 2px solid transparent;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n            display: inline-block;\n            margin-right: 8px;\n          }\n          \n          @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n          \n          .demo-accounts {\n            background: #e8f4fd;\n            border-radius: 8px;\n            padding: 20px;\n            margin-top: 25px;\n          }\n          \n          .demo-title {\n            font-size: 0.9rem;\n            font-weight: 600;\n            color: #2980b9;\n            margin-bottom: 12px;\n          }\n          \n          .demo-account {\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            padding: 8px 0;\n            border-bottom: 1px solid #d5e8f7;\n            font-size: 0.85rem;\n          }\n          \n          .demo-account:last-child {\n            border-bottom: none;\n          }\n          \n          .demo-role {\n            font-weight: 500;\n            color: #2c3e50;\n          }\n          \n          .demo-creds {\n            color: #7f8c8d;\n            font-family: 'Courier New', monospace;\n          }\n          \n          .register-link {\n            text-align: center;\n            margin-top: 20px;\n            font-size: 0.9rem;\n            color: #7f8c8d;\n          }\n          \n          .register-link a {\n            color: #3498db;\n            text-decoration: none;\n            font-weight: 500;\n          }\n          \n          .register-link a:hover {\n            text-decoration: underline;\n          }\n          \n          .error-alert {\n            background: #fdf2f2;\n            border: 1px solid #f5c6cb;\n            color: #721c24;\n            padding: 12px;\n            border-radius: 6px;\n            margin-bottom: 20px;\n            font-size: 0.9rem;\n          }\n          \n          @media (max-width: 768px) {\n            .split-login-container {\n              flex-direction: column;\n            }\n            \n            .left-panel {\n              padding: 40px 20px;\n              min-height: 40vh;\n            }\n            \n            .stats-container {\n              flex-direction: column;\n              gap: 20px;\n            }\n            \n            .right-panel {\n              padding: 20px;\n            }\n          }\n        `}</style>\n        \n        {this.state.done ? <Redirect to=\"/\" /> : null}\n        \n        <div className=\"left-panel\">\n          <div className=\"company-logo\">\n            <div className=\"logo-icon\">\n              <i className=\"fas fa-flag\"></i>\n            </div>\n            <div className=\"company-info\">\n              <h1>HRMS Tanzania</h1>\n              <p>Human Resource Management System</p>\n            </div>\n          </div>\n          \n          <div className=\"system-description\">\n            Streamline your human resource operations with our comprehensive \n            HRMS solution. Manage employees, departments, payroll, and applications \n            across all organizational levels with ease.\n          </div>\n          \n          <div className=\"stats-container\">\n            <div className=\"stat-item\">\n              <div className=\"stat-number\">50+</div>\n              <div className=\"stat-label\">Employees</div>\n            </div>\n            <div className=\"stat-item\">\n              <div className=\"stat-number\">5</div>\n              <div className=\"stat-label\">Departments</div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"right-panel\">\n          <div className=\"login-form-container\">\n            <div className=\"form-header\">\n              <h2 className=\"form-title\">Welcome Back</h2>\n              <p className=\"form-subtitle\">Sign in to access your dashboard</p>\n            </div>\n            \n            {this.state.hasError && (\n              <div className=\"error-alert\">\n                {this.state.errorMessage}\n              </div>\n            )}\n            \n            <form onSubmit={this.onSubmit}>\n              <div className=\"input-group\">\n                <label className=\"input-label\">Username</label>\n                <div className=\"input-wrapper\">\n                  <i className=\"fas fa-envelope input-icon-left\"></i>\n                  <input\n                    type=\"text\"\n                    className=\"form-input\"\n                    name=\"username\"\n                    placeholder=\"Enter your username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div className=\"input-group\">\n                <label className=\"input-label\">Password</label>\n                <div className=\"input-wrapper\">\n                  <i className=\"fas fa-lock input-icon-left\"></i>\n                  <input\n                    type=\"password\"\n                    className=\"form-input\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"Enter your password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                    required\n                  />\n                  <i\n                    className={`fas ${this.state.passwordShow ? 'fa-eye' : 'fa-eye-slash'} input-icon-right password-toggle`}\n                    onClick={this.passwordVisibilityHandler}\n                  ></i>\n                </div>\n              </div>\n              \n              <button \n                type=\"submit\" \n                className=\"login-btn\"\n                disabled={this.state.isLoading}\n              >\n                {this.state.isLoading ? (\n                  <>\n                    <span className=\"spinner\"></span>\n                    Signing In...\n                  </>\n                ) : (\n                  'Sign In'\n                )}\n              </button>\n            </form>\n            \n            <div className=\"demo-accounts\">\n              <div className=\"demo-title\">Demo Accounts</div>\n              <div className=\"demo-account\">\n                <span className=\"demo-role\">Owner</span>\n                <span className=\"demo-creds\">owner123</span>\n              </div>\n              <div className=\"demo-account\">\n                <span className=\"demo-role\">Admin</span>\n                <span className=\"demo-creds\">admin123</span>\n              </div>\n            </div>\n            \n            <div className=\"register-link\">\n              Don't have an account? <a href=\"/register\">Create one</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert, Badge } from \"react-bootstrap\";\nimport { toast } from 'react-toastify';\nimport { Redirect } from 'react-router-dom'\nimport JobAddModal from './JobAddModal'\nimport JobEditModal from './JobEditModal'\nimport JobDeleteModal from './JobDeleteModal'\nimport moment from 'moment'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport AlertModal from './AlertModal'\nimport { getDepartments, getJobs, deleteJob } from '../utils/localStorage'\n\nexport default class JobList extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            departments: [],\n            selectedDepartment: null,\n            selectedJob: null,\n            jobs: [],\n            showEditModel: false,\n            showAddModel: false,\n            showDeleteModel: false\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.location.state) {\n            this.setState({selectedDepartment: this.props.location.state.selectedDepartment})\n        }\n        // Use localStorage instead of axios\n        const departments = getDepartments();\n        this.setState({departments: departments}, () => {\n            if(this.state.selectedDepartment) {\n                this.fetchData()\n            }\n        })\n    }\n\n    fetchData = () => {\n        // Use localStorage instead of axios\n        const allJobs = getJobs();\n        const departmentJobs = allJobs.filter(job => \n            job.departmentId == this.state.selectedDepartment\n        );\n        \n        // Format dates\n        const formattedJobs = departmentJobs.map(job => ({\n            ...job,\n            startDate: moment(job.startDate).format('YYYY-MM-DD'),\n            endDate: moment(job.endDate).format('YYYY-MM-DD')\n        }));\n        \n        this.setState({jobs: formattedJobs})\n    }\n\n    fetchDataAll = () => {\n        // Use localStorage instead of axios\n        const allJobs = getJobs();\n        \n        // Format dates\n        const formattedJobs = allJobs.map(job => ({\n            ...job,\n            startDate: moment(job.startDate).format('YYYY-MM-DD'),\n            endDate: moment(job.endDate).format('YYYY-MM-DD')\n        }));\n        \n        this.setState({jobs: formattedJobs})\n    }\n\n    pushSelectItems = () => {\n        let items= []\n        items.push(<option key={584390} value=\"all\">All departments</option>)\n        this.state.departments.map((dept, index) => {\n            if(this.state.selectedDepartment === dept.id) {\n                items.push(<option key={index} value={dept.id} defaultValue>{dept.departmentName}</option>)\n            } else {\n                items.push(<option key={index} value={dept.id} defaultValue>{dept.departmentName}</option>)\n            }\n        })\n        return items\n    }\n\n    handleChange = (event) => {\n        this.setState({selectedDepartment: event.target.value}, () => {\n            if(this.state.selectedDepartment === \"all\") {\n                this.fetchDataAll()\n            } else {\n                this.fetchData()\n            }\n        })\n    }\n\n    onEdit (job) {\n        return event=> {\n            event.preventDefault()\n            \n            this.setState({selectedJob: job, showEditModel: true})\n        }\n    }\n\n    addJob = () => {\n        this.setState({showAddModel: true})\n    }\n\n    onDelete (job) {\n        return event => {\n            event.preventDefault()\n            this.setState({selectedJob: job}, () => {\n                this.setState({showDeleteModel: true})\n            })\n        }\n    }\n    \n  render() {\n    let closeEditModel = () => this.setState({showEditModel: false})\n    let closeAddModel = () => this.setState({showAddModel: false})\n    let closeDeleteModel = () => this.setState({showDeleteModel: false})\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-2\">\n        <div className=\"row\">\n            <div className=\"col-sm-12\">\n                <Card className=\"secondary-card\">\n                    <Card.Header><div className=\"required\">Select Department</div></Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            <select \n                                className=\"select-css\"\n                                value={this.state.selectedDepartment || ''}\n                                onChange={this.handleChange}\n                            >\n                                <option value=\"\">Choose one...</option>\n                                {this.pushSelectItems()}\n                            </select>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            </div>\n        </div>\n        <div className=\"row\">\n            <div className=\"col-sm-12\">\n                <h4>\n                    <a className=\"fa fa-plus mb-2 ml-2\" onClick={this.addJob} style={{color: 'blue', cursor: 'pointer'}}>\n                        Add Job\n                    </a>\n                </h4>\n            <Card className=\"main-card\">\n                <Card.Header>\n                <div className=\"panel-title\">\n                    <strong>Job List</strong>\n                </div>\n                </Card.Header>\n                <Card.Body>\n                    <ThemeProvider theme={theme}>\n                    <MaterialTable\n                            columns={[\n                                {title: 'JOB ID', field: 'id'},\n                                {title: 'Job Title', field: 'jobTitle'},\n                                {title: 'Employee', field: 'user.fullName'},\n                                {title: 'Start Date', field: 'startDate'},\n                                {title: 'End Date', field: 'endDate'},\n                                {\n                                    title: 'State', \n                                    field: 'endDate',\n                                    render: job => (\n                                    //We have to set startDate hours to 0 and endDate hours to 24 so that the state of the job remains the same the whole day\n                                    new Date(job.startDate).setHours(0) > new Date() ? (<Badge variant=\"warning\">Future Job</Badge>) : (\n                                        new Date(job.endDate).setHours(24) >= new Date() ? (<Badge variant=\"success\">Current Job</Badge>) : (\n                                            <Badge variant=\"danger\">Old Job</Badge>\n                                        )\n                                    )\n                                    ),\n                                    cellStyle: {\n                                        paddingLeft: 30,\n                                        paddingRight: 50\n                                    },\n                                    headerStyle: {\n                                        paddingLeft: 30,\n                                        paddingRight: 30\n                                    }\n                                },\n                                {\n                                    title: 'Action',\n                                    render: rowData => (\n                                        <Form className=\"row\">\n                                            <div className=\"col pl-5\">\n                                                <Button size=\"sm\" variant=\"info\" onClick={this.onEdit(rowData)}><i className=\"fas fa-edit\"></i>Edit</Button>\n                                            </div>\n                                            <div className=\"col pr-5\">\n                                                <Button onClick={this.onDelete(rowData)} size=\"sm\" variant=\"danger\"><i className=\"fas fa-trash\"></i>Delete</Button>\n                                            </div>\n                                        </Form>\n                                    )\n                                }\n                            ]}\n                            data={this.state.jobs}\n                            \n                            options={{\n                                rowStyle: (rowData, index) => {\n                                    if(index%2) {\n                                        return {backgroundColor: '#f2f2f2'}\n                                    }\n                                },\n                                pageSize: 8,\n                                pageSizeOptions: [5, 10, 20, 30, 50, 75, 100]\n                            }}\n                            title= {this.selectedUser ? this.selectedUser.fullName : ''}\n                    />\n                    </ThemeProvider>\n                </Card.Body>\n            </Card>\n            {this.state.showEditModel ? (\n                <JobEditModal show={true} onHide={closeEditModel} data={this.state.selectedJob} />\n            ) : this.state.showAddModel ? (\n                <JobAddModal show={true} onHide={closeAddModel} />\n            ) : this.state.showDeleteModel ? (\n                <JobDeleteModal show={true} onHide={closeDeleteModel} data={this.state.selectedJob} />\n            ) : (<></>)}\n            </div>\n        </div>\n        {/* {this.state.hasError ? (\n            <Alert variant=\"danger\" className=\"m-3\" block>\n              {this.state.errMsg}\n            </Alert>\n          ) : this.state.completed ? (\n            <Redirect to=\"/departments\" />\n          ) : (<></>)} */}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { Card, Button, Form, Alert, Badge } from \"react-bootstrap\";\nimport { Redirect } from 'react-router-dom'\nimport JobEditModal from '../JobEditModal'\nimport moment from 'moment'\nimport MaterialTable from 'material-table'\nimport { ThemeProvider } from '@material-ui/core'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { getUsers, getDepartments } from '../../utils/localStorage'\n\nexport default class JobList extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            department: null,\n            selectedJob: null,\n            jobs: [],\n            showEditModel: false,\n            showAddModel: false,\n            showDeleteModel: false\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.location.state) {\n            this.setState({selectedDepartment: this.props.location.state.selectedDepartment})\n        }\n        let deptId = JSON.parse(localStorage.getItem('user')).departmentId\n        \n        // Use localStorage instead of axios\n        const allUsers = getUsers();\n        const departments = getDepartments();\n        \n        // Filter users by department\n        const deptUsers = allUsers.filter(user => user.departmentId == deptId);\n        \n        // Extract jobs from users\n        let jobs = []\n        deptUsers.forEach(user => {\n            if (user.jobs) {\n                user.jobs.forEach((job, index) => {\n                    // Format job data to match expected structure\n                    const formattedJob = {\n                        ...job,\n                        startDate: moment(job.startDate).format('YYYY-MM-DD'),\n                        endDate: moment(job.endDate).format('YYYY-MM-DD'),\n                        user: {\n                            fullName: user.fullName || `${user.firstName} ${user.lastName}`\n                        }\n                    };\n                    jobs.push(formattedJob);\n                });\n            }\n        });\n        \n        this.setState({jobs: jobs});\n    }\n    \n  render() {\n\n    const theme = createMuiTheme({\n        overrides: {\n            MuiTableCell: {\n                root: {\n                    padding: '6px 6px 6px 6px'\n                }\n            }\n        }\n    })\n\n    return (\n      <div className=\"container-fluid pt-2\">\n        <div className=\"row\">\n            <div className=\"col-sm-12\">\n            <Card className=\"main-card\">\n                <Card.Header>\n                <div className=\"panel-title\">\n                    <strong>Job List</strong>\n                </div>\n                </Card.Header>\n                <Card.Body>\n                    <ThemeProvider theme={theme}>\n                    <MaterialTable\n                            columns={[\n                                {title: 'JOB ID', field: 'id'},\n                                {title: 'Job Title', field: 'jobTitle'},\n                                {title: 'Employee', field: 'user.fullName'},\n                                {title: 'Start Date', field: 'startDate'},\n                                {title: 'End Date', field: 'endDate'},\n                                {\n                                    title: 'State', \n                                    field: 'endDate',\n                                    render: job => (\n                                    //We have to set startDate hours to 0 and endDate hours to 24 so that the state of the job remains the same the whole day\n                                    new Date(job.startDate).setHours(0) > new Date() ? (<Badge variant=\"warning\">Future Job</Badge>) : (\n                                        new Date(job.endDate).setHours(24) >= new Date() ? (<Badge variant=\"success\">Current Job</Badge>) : (\n                                            <Badge variant=\"danger\">Old Job</Badge>\n                                        )\n                                    )\n                                    ),\n                                    cellStyle: {\n                                        paddingLeft: 30,\n                                        paddingRight: 50\n                                    },\n                                    headerStyle: {\n                                        paddingLeft: 30,\n                                        paddingRight: 30\n                                    }\n                                }\n                            ]}\n                            data={this.state.jobs}\n                            \n                            options={{\n                                rowStyle: (rowData, index) => {\n                                    if(index%2) {\n                                        return {backgroundColor: '#f2f2f2'}\n                                    }\n                                },\n                                pageSize: 8,\n                                pageSizeOptions: [5, 10, 20, 30, 50, 75, 100]\n                            }}\n                            title= {this.selectedUser ? this.selectedUser.fullName : ''}\n                    />\n                    </ThemeProvider>\n                </Card.Body>\n            </Card>\n            </div>\n        </div>\n        {/* {this.state.hasError ? (\n            <Alert variant=\"danger\" className=\"m-3\" block>\n              {this.state.errMsg}\n            </Alert>\n          ) : this.state.completed ? (\n            <Redirect to=\"/departments\" />\n          ) : (<></>)} */}\n      </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { initializeDefaultData } from './utils/localStorage';\nimport Header from \"./Layout/Header\";\nimport Footer from \"./Layout/Footer\";\nimport SidebarAdmin from \"./Layout/SidebarAdmin\";\nimport SidebarManager from \"./Layout/SidebarManager\";\nimport SidebarEmployee from './Layout/SidebarEmployee'\nimport Dashboard from \"./components/Dashboard\";\nimport DashboardManager from './components/manager/Dashboard'\nimport DashboardEmployee from './components/employee/Dashboard'\nimport Layout from \"./Layout/Layout\";\nimport EmployeeList from \"./components/EmployeeList\";\nimport EmployeeListManager from \"./components/manager/EmployeeList\";\nimport EmployeeAdd from \"./components/EmployeeAdd\";\nimport EmployeeView from './components/EmployeeView'\nimport EmployeeViewEmployee from './components/employee/EmployeeView'\nimport EmployeeViewManager from './components/manager/EmployeeView';\nimport EmployeeEdit from \"./components/EmployeeEdit\";\nimport DepartmentList from \"./components/DepartmentList\"\nimport ApplicationList from \"./components/ApplicationList\"\nimport ApplicationListManager from \"./components/manager/ApplicationList\"\nimport ApplicationListEmployee from './components/employee/ApplicationList'\nimport Application from \"./components/Application\"\nimport SalaryDetails from './components/SalaryDetails'\nimport SalaryList from './components/SalaryList'\nimport SalaryView from './components/SalaryView'\nimport SalaryViewManager from './components/manager/SalaryView'\nimport SalaryViewEmployee from './components/employee/SalaryView'\nimport Payment from './components/Payment'\nimport Expense from './components/Expense'\nimport ExpenseManager from './components/manager/Expense'\nimport ExpenseReport from './components/ExpenseReport'\nimport ExpenseReportManager from './components/manager/ExpenseReport'\nimport Announcement from './components/Announcement'\nimport AnnouncementManager from './components/manager/Announcement'\nimport AnnouncementEmployee from './components/employee/Announcement'\nimport Profile from './components/Profile';\nimport Register from \"./components/Register\";\nimport withAuth from \"./withAuth\";\nimport Login from \"./components/Login\";\nimport JobList from \"./components/JobList\";\nimport JobListManager from './components/manager/JobList'\n\nexport default class App extends Component {\n  componentDidMount() {\n    // Initialize default data when app starts\n    initializeDefaultData();\n  }\n\n  render() {\n    return (\n      <>\n        <Router>\n            <Switch>\n              <Route exact path=\"/login\" component={LoginContainer} />\n              <Route exact path=\"/register\" component={RegisterContainer} />\n              <Route path=\"/\" component={withAuth(DefaultContainer)} />\n            </Switch>\n        </Router>\n        <ToastContainer />\n      </>\n    )\n  }\n}\n\nconst LoginContainer = () => (\n  <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", position: \"relative\", height: \"600px\"}}>\n    <Route exact path=\"/\" render={() => <Redirect to=\"/login\" />} />\n    <Route path=\"/login\" component={Login} />\n  </div>\n)\n\nconst RegisterContainer = () => (\n  <div style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", position: \"relative\", height: \"600px\"}}>\n    <Route exact path=\"/\" render={() => <Redirect to=\"/register\" />} />\n    <Route path=\"/register\" component={Register} />\n  </div>\n)\n\nconst DefaultContainer = () => {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  const role = user.role;\n  \n  return (\n    <div>\n      {role === \"admin\" ? (\n        AdminContainer()\n      ) : role === \"manager\" ? (\n        ManagerContainer()\n      ) : role === \"employee\" ? (\n        EmployeeContainer()\n      ) : null}\n    </div>\n  )\n}\n\nconst AdminContainer = () => (\n  <div>\n    <Header />\n    <SidebarAdmin />\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\" component={withAuth(Dashboard)} />\n        <Route exact path=\"/employee-list\" component={withAuth(EmployeeList)} />\n        <Route exact path=\"/employee-add\" component={withAuth(EmployeeAdd)} />\n        <Route exact path=\"/employee-view\" component={withAuth(EmployeeView)} />\n        <Route exact path=\"/employee-edit\" component={withAuth(EmployeeEdit)} />\n        <Route exact path=\"/departments\" component={withAuth(DepartmentList)} />\n        <Route exact path=\"/job-list\" component={withAuth(JobList)} />\n        <Route exact path=\"/application-list\" component={withAuth(ApplicationList)} />\n        <Route exact path=\"/application\" component={withAuth(Application)} />\n        <Route exact path=\"/salary-details\" component={withAuth(SalaryDetails)} />\n        <Route exact path=\"/salary-list\" component={withAuth(SalaryList)} />\n        <Route exact path=\"/salary-view\" component={withAuth(SalaryView)} />\n        <Route exact path=\"/payment\" component={withAuth(Payment)} />\n        <Route exact path=\"/expense\" component={withAuth(Expense)} />\n        <Route exact path=\"/expense-report\" component={withAuth(ExpenseReport)} />\n        <Route exact path=\"/announcement\" component={withAuth(Announcement)} />\n        <Route exact path=\"/profile\" component={withAuth(Profile)} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n      </Switch>\n    </Layout>\n    <Footer />\n  </div>\n)\n\nconst ManagerContainer = () => (\n  <div>\n    <Header />\n    <SidebarManager />\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\" component={withAuth(DashboardManager)} />\n        <Route exact path=\"/employee-list\" component={withAuth(EmployeeListManager)} />\n        <Route exact path=\"/employee-view\" component={withAuth(EmployeeViewManager)} />\n        <Route exact path=\"/job-list\" component={withAuth(JobListManager)} />\n        <Route exact path=\"/application-list\" component={withAuth(ApplicationListManager)} />\n        <Route exact path=\"/application\" component={withAuth(Application)} />\n        <Route exact path=\"/expense\" component={withAuth(ExpenseManager)} />\n        <Route exact path=\"/salary-view\" component={withAuth(SalaryViewManager)} />\n        <Route exact path=\"/expense-report\" component={withAuth(ExpenseReportManager)} />\n        <Route exact path=\"/announcement\" component={withAuth(AnnouncementManager)} />\n        <Route exact path=\"/profile\" component={withAuth(Profile)} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n      </Switch>\n    </Layout>\n    <Footer />\n  </div>\n)\n\nconst EmployeeContainer = () => (\n  <div>\n    <Header />\n    <SidebarEmployee />\n    <Layout>\n      <Switch>\n        <Route exact path=\"/\" component={withAuth(DashboardEmployee)} />\n        <Route exact path=\"/employee-view\" component={withAuth(EmployeeViewEmployee)} />\n        <Route exact path=\"/application-list\" component={withAuth(ApplicationListEmployee)} />\n        <Route exact path=\"/application\" component={withAuth(Application)} />\n        <Route exact path=\"/salary-view\" component={withAuth(SalaryViewEmployee)} />\n        <Route exact path=\"/announcement\" component={withAuth(AnnouncementEmployee)} />\n        <Route exact path=\"/profile\" component={withAuth(Profile)} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n      </Switch>\n    </Layout>\n    <Footer />\n  </div>\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './polyfills';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}